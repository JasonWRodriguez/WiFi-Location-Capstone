{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Indoor WiFi Locationing Capstone Project\n",
    "Author: Jason Rodriguez"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary:\n",
    "This notebook analysis and creates machine learning models to investigate the feasibility of using 'WiFi Fingerprinting' to determine a person's location in an indoor facility. Through evaluating multiple machine learning models to determine which produces the best results. \n",
    "\n",
    "## Project Goals:\n",
    "1. Build and evaluate up to three (3) different machine learning algorithms to determine the best model for recommendation to the client. \n",
    "\n",
    "## Project Background:\n",
    "1. Clint is developing a system to help students/users navigate a complex, unfamiliar interior space on a college campus\n",
    "2. We are charter to invertigate the feasibility of using WiFi fingerprinting to determine a person's indoor location."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Purpose of Remaining Sections\n",
    "The following section are broken into sections that step through the data science process of understanding and making inferences of the available data and building appropriate predictive models. The follow sections are as follows: \n",
    "1. Setting Up the Environment\n",
    "2. Prelimiary Data Understanding\n",
    "3. PreProcessing / Data Wrangling\n",
    "4. Feature Engineering\n",
    "5. Exploratory Data Analysis (EDA)\n",
    "6. Building & Analyzing Models\n",
    "7. Analyze Findings\n",
    "8. Predictions\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------------------\n",
    "# 1.0 Setting Up The Environment\n",
    "------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.1 - Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importing Libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import scipy\n",
    "from pandas import Series, DataFrame\n",
    "#import pandas_profiling\n",
    "import matplotlib as mpl\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.patches as mpatches\n",
    "import seaborn as sns\n",
    "import pylab as pylab\n",
    "from math import sqrt\n",
    "from pprint import pprint\n",
    "\n",
    "\n",
    "from sklearn import preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "#SKLearn Components\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.preprocessing import OneHotEncoder, LabelEncoder, MinMaxScaler\n",
    "\n",
    "#Estimators\n",
    "from sklearn.ensemble import RandomForestRegressor, RandomForestClassifier, GradientBoostingRegressor\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.svm import SVR, SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn import tree\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn import linear_model\n",
    "\n",
    "\n",
    "#Model Metrics\n",
    "from sklearn.metrics import mean_squared_error, r2_score, accuracy_score, precision_score, confusion_matrix, recall_score, f1_score, classification_report\n",
    "from sklearn.model_selection import cross_val_score, GridSearchCV\n",
    "\n",
    "#Cross Validation\n",
    "from sklearn.model_selection import train_test_split\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.2 - Data Acquisition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Read Data Source Files - 2 files (Training and Validation Sets)\n",
    "\n",
    "# Dataset 1 - Training\n",
    "trainingData = pd.read_csv(\"/Users/JasonRodriguez/Documents/UT-Data-Analytics-Program/2020-Cohort/Course 4/C4-T3/UJIndoorLoc/trainingData.csv\")\n",
    "\n",
    "# Dataset 2 - Validation \n",
    "validationData = pd.read_csv(\"/Users/JasonRodriguez/Documents/UT-Data-Analytics-Program/2020-Cohort/Course 4/C4-T3/UJIndoorLoc/validationData.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['WAP001', 'WAP002', 'WAP003', 'WAP004', 'WAP005', 'WAP006', 'WAP007',\n",
       "       'WAP008', 'WAP009', 'WAP010',\n",
       "       ...\n",
       "       'WAP520', 'LONGITUDE', 'LATITUDE', 'FLOOR', 'BUILDINGID', 'SPACEID',\n",
       "       'RELATIVEPOSITION', 'USERID', 'PHONEID', 'TIMESTAMP'],\n",
       "      dtype='object', length=529)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check Data Load - Training\n",
    "trainingData.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['WAP001', 'WAP002', 'WAP003', 'WAP004', 'WAP005', 'WAP006', 'WAP007',\n",
       "       'WAP008', 'WAP009', 'WAP010',\n",
       "       ...\n",
       "       'WAP520', 'LONGITUDE', 'LATITUDE', 'FLOOR', 'BUILDINGID', 'SPACEID',\n",
       "       'RELATIVEPOSITION', 'USERID', 'PHONEID', 'TIMESTAMP'],\n",
       "      dtype='object', length=529)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check Data Load - Validation Dataset\n",
    "validationData.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "# 2.0 Prelimiary Data Understanding & EDA\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.1 - Inspecting the Training Dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19937"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of observations\n",
    "len(trainingData)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-7541.2643</td>\n",
       "      <td>4.864921e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-7536.6212</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-7519.1524</td>\n",
       "      <td>4.864950e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-7524.5704</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>102</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-7632.1436</td>\n",
       "      <td>4.864982e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>122</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>1369909710</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 529 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "0     100     100     100     100     100     100     100     100     100   \n",
       "1     100     100     100     100     100     100     100     100     100   \n",
       "2     100     100     100     100     100     100     100     -97     100   \n",
       "3     100     100     100     100     100     100     100     100     100   \n",
       "4     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "   WAP010  ...  WAP520  LONGITUDE      LATITUDE  FLOOR  BUILDINGID  SPACEID  \\\n",
       "0     100  ...     100 -7541.2643  4.864921e+06      2           1      106   \n",
       "1     100  ...     100 -7536.6212  4.864934e+06      2           1      106   \n",
       "2     100  ...     100 -7519.1524  4.864950e+06      2           1      103   \n",
       "3     100  ...     100 -7524.5704  4.864934e+06      2           1      102   \n",
       "4     100  ...     100 -7632.1436  4.864982e+06      0           0      122   \n",
       "\n",
       "   RELATIVEPOSITION  USERID  PHONEID   TIMESTAMP  \n",
       "0                 2       2       23  1371713733  \n",
       "1                 2       2       23  1371713691  \n",
       "2                 2       2       23  1371714095  \n",
       "3                 2       2       23  1371713807  \n",
       "4                 2      11       13  1369909710  \n",
       "\n",
       "[5 rows x 529 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#First 5 Observations\n",
    "trainingData.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.0</td>\n",
       "      <td>19937.0</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>19937.0</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>1.993700e+04</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>1.993700e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>99.823644</td>\n",
       "      <td>99.820936</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>99.613733</td>\n",
       "      <td>97.130461</td>\n",
       "      <td>94.733661</td>\n",
       "      <td>93.820234</td>\n",
       "      <td>94.693936</td>\n",
       "      <td>99.163766</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7464.275947</td>\n",
       "      <td>4.864871e+06</td>\n",
       "      <td>1.674575</td>\n",
       "      <td>1.212820</td>\n",
       "      <td>148.429954</td>\n",
       "      <td>1.833024</td>\n",
       "      <td>9.068014</td>\n",
       "      <td>13.021869</td>\n",
       "      <td>1.371421e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>5.866842</td>\n",
       "      <td>5.798156</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.615657</td>\n",
       "      <td>22.931890</td>\n",
       "      <td>30.541335</td>\n",
       "      <td>33.010404</td>\n",
       "      <td>30.305084</td>\n",
       "      <td>12.634045</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>123.402010</td>\n",
       "      <td>6.693318e+01</td>\n",
       "      <td>1.223078</td>\n",
       "      <td>0.833139</td>\n",
       "      <td>58.342106</td>\n",
       "      <td>0.372964</td>\n",
       "      <td>4.988720</td>\n",
       "      <td>5.362410</td>\n",
       "      <td>5.572054e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-97.000000</td>\n",
       "      <td>-90.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-97.000000</td>\n",
       "      <td>-98.000000</td>\n",
       "      <td>-99.000000</td>\n",
       "      <td>-98.000000</td>\n",
       "      <td>-98.000000</td>\n",
       "      <td>-99.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7691.338400</td>\n",
       "      <td>4.864746e+06</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.369909e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7594.737000</td>\n",
       "      <td>4.864821e+06</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>110.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>1.371056e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7423.060900</td>\n",
       "      <td>4.864852e+06</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>129.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>1.371716e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7359.193000</td>\n",
       "      <td>4.864930e+06</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>207.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>1.371721e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.0</td>\n",
       "      <td>-7300.818990</td>\n",
       "      <td>4.865017e+06</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>254.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>1.371738e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 529 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             WAP001        WAP002   WAP003   WAP004        WAP005  \\\n",
       "count  19937.000000  19937.000000  19937.0  19937.0  19937.000000   \n",
       "mean      99.823644     99.820936    100.0    100.0     99.613733   \n",
       "std        5.866842      5.798156      0.0      0.0      8.615657   \n",
       "min      -97.000000    -90.000000    100.0    100.0    -97.000000   \n",
       "25%      100.000000    100.000000    100.0    100.0    100.000000   \n",
       "50%      100.000000    100.000000    100.0    100.0    100.000000   \n",
       "75%      100.000000    100.000000    100.0    100.0    100.000000   \n",
       "max      100.000000    100.000000    100.0    100.0    100.000000   \n",
       "\n",
       "             WAP006        WAP007        WAP008        WAP009        WAP010  \\\n",
       "count  19937.000000  19937.000000  19937.000000  19937.000000  19937.000000   \n",
       "mean      97.130461     94.733661     93.820234     94.693936     99.163766   \n",
       "std       22.931890     30.541335     33.010404     30.305084     12.634045   \n",
       "min      -98.000000    -99.000000    -98.000000    -98.000000    -99.000000   \n",
       "25%      100.000000    100.000000    100.000000    100.000000    100.000000   \n",
       "50%      100.000000    100.000000    100.000000    100.000000    100.000000   \n",
       "75%      100.000000    100.000000    100.000000    100.000000    100.000000   \n",
       "max      100.000000    100.000000    100.000000    100.000000    100.000000   \n",
       "\n",
       "       ...   WAP520     LONGITUDE      LATITUDE         FLOOR    BUILDINGID  \\\n",
       "count  ...  19937.0  19937.000000  1.993700e+04  19937.000000  19937.000000   \n",
       "mean   ...    100.0  -7464.275947  4.864871e+06      1.674575      1.212820   \n",
       "std    ...      0.0    123.402010  6.693318e+01      1.223078      0.833139   \n",
       "min    ...    100.0  -7691.338400  4.864746e+06      0.000000      0.000000   \n",
       "25%    ...    100.0  -7594.737000  4.864821e+06      1.000000      0.000000   \n",
       "50%    ...    100.0  -7423.060900  4.864852e+06      2.000000      1.000000   \n",
       "75%    ...    100.0  -7359.193000  4.864930e+06      3.000000      2.000000   \n",
       "max    ...    100.0  -7300.818990  4.865017e+06      4.000000      2.000000   \n",
       "\n",
       "            SPACEID  RELATIVEPOSITION        USERID       PHONEID  \\\n",
       "count  19937.000000      19937.000000  19937.000000  19937.000000   \n",
       "mean     148.429954          1.833024      9.068014     13.021869   \n",
       "std       58.342106          0.372964      4.988720      5.362410   \n",
       "min        1.000000          1.000000      1.000000      1.000000   \n",
       "25%      110.000000          2.000000      5.000000      8.000000   \n",
       "50%      129.000000          2.000000     11.000000     13.000000   \n",
       "75%      207.000000          2.000000     13.000000     14.000000   \n",
       "max      254.000000          2.000000     18.000000     24.000000   \n",
       "\n",
       "          TIMESTAMP  \n",
       "count  1.993700e+04  \n",
       "mean   1.371421e+09  \n",
       "std    5.572054e+05  \n",
       "min    1.369909e+09  \n",
       "25%    1.371056e+09  \n",
       "50%    1.371716e+09  \n",
       "75%    1.371721e+09  \n",
       "max    1.371738e+09  \n",
       "\n",
       "[8 rows x 529 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Statistical Info\n",
    "trainingData.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "WAP001              int64\n",
       "WAP002              int64\n",
       "WAP003              int64\n",
       "WAP004              int64\n",
       "WAP005              int64\n",
       "                    ...  \n",
       "SPACEID             int64\n",
       "RELATIVEPOSITION    int64\n",
       "USERID              int64\n",
       "PHONEID             int64\n",
       "TIMESTAMP           int64\n",
       "Length: 529, dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Structure of dataset\n",
    "trainingData.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 19937 entries, 0 to 19936\n",
      "Data columns (total 529 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   WAP001            19937 non-null  int64  \n",
      " 1   WAP002            19937 non-null  int64  \n",
      " 2   WAP003            19937 non-null  int64  \n",
      " 3   WAP004            19937 non-null  int64  \n",
      " 4   WAP005            19937 non-null  int64  \n",
      " 5   WAP006            19937 non-null  int64  \n",
      " 6   WAP007            19937 non-null  int64  \n",
      " 7   WAP008            19937 non-null  int64  \n",
      " 8   WAP009            19937 non-null  int64  \n",
      " 9   WAP010            19937 non-null  int64  \n",
      " 10  WAP011            19937 non-null  int64  \n",
      " 11  WAP012            19937 non-null  int64  \n",
      " 12  WAP013            19937 non-null  int64  \n",
      " 13  WAP014            19937 non-null  int64  \n",
      " 14  WAP015            19937 non-null  int64  \n",
      " 15  WAP016            19937 non-null  int64  \n",
      " 16  WAP017            19937 non-null  int64  \n",
      " 17  WAP018            19937 non-null  int64  \n",
      " 18  WAP019            19937 non-null  int64  \n",
      " 19  WAP020            19937 non-null  int64  \n",
      " 20  WAP021            19937 non-null  int64  \n",
      " 21  WAP022            19937 non-null  int64  \n",
      " 22  WAP023            19937 non-null  int64  \n",
      " 23  WAP024            19937 non-null  int64  \n",
      " 24  WAP025            19937 non-null  int64  \n",
      " 25  WAP026            19937 non-null  int64  \n",
      " 26  WAP027            19937 non-null  int64  \n",
      " 27  WAP028            19937 non-null  int64  \n",
      " 28  WAP029            19937 non-null  int64  \n",
      " 29  WAP030            19937 non-null  int64  \n",
      " 30  WAP031            19937 non-null  int64  \n",
      " 31  WAP032            19937 non-null  int64  \n",
      " 32  WAP033            19937 non-null  int64  \n",
      " 33  WAP034            19937 non-null  int64  \n",
      " 34  WAP035            19937 non-null  int64  \n",
      " 35  WAP036            19937 non-null  int64  \n",
      " 36  WAP037            19937 non-null  int64  \n",
      " 37  WAP038            19937 non-null  int64  \n",
      " 38  WAP039            19937 non-null  int64  \n",
      " 39  WAP040            19937 non-null  int64  \n",
      " 40  WAP041            19937 non-null  int64  \n",
      " 41  WAP042            19937 non-null  int64  \n",
      " 42  WAP043            19937 non-null  int64  \n",
      " 43  WAP044            19937 non-null  int64  \n",
      " 44  WAP045            19937 non-null  int64  \n",
      " 45  WAP046            19937 non-null  int64  \n",
      " 46  WAP047            19937 non-null  int64  \n",
      " 47  WAP048            19937 non-null  int64  \n",
      " 48  WAP049            19937 non-null  int64  \n",
      " 49  WAP050            19937 non-null  int64  \n",
      " 50  WAP051            19937 non-null  int64  \n",
      " 51  WAP052            19937 non-null  int64  \n",
      " 52  WAP053            19937 non-null  int64  \n",
      " 53  WAP054            19937 non-null  int64  \n",
      " 54  WAP055            19937 non-null  int64  \n",
      " 55  WAP056            19937 non-null  int64  \n",
      " 56  WAP057            19937 non-null  int64  \n",
      " 57  WAP058            19937 non-null  int64  \n",
      " 58  WAP059            19937 non-null  int64  \n",
      " 59  WAP060            19937 non-null  int64  \n",
      " 60  WAP061            19937 non-null  int64  \n",
      " 61  WAP062            19937 non-null  int64  \n",
      " 62  WAP063            19937 non-null  int64  \n",
      " 63  WAP064            19937 non-null  int64  \n",
      " 64  WAP065            19937 non-null  int64  \n",
      " 65  WAP066            19937 non-null  int64  \n",
      " 66  WAP067            19937 non-null  int64  \n",
      " 67  WAP068            19937 non-null  int64  \n",
      " 68  WAP069            19937 non-null  int64  \n",
      " 69  WAP070            19937 non-null  int64  \n",
      " 70  WAP071            19937 non-null  int64  \n",
      " 71  WAP072            19937 non-null  int64  \n",
      " 72  WAP073            19937 non-null  int64  \n",
      " 73  WAP074            19937 non-null  int64  \n",
      " 74  WAP075            19937 non-null  int64  \n",
      " 75  WAP076            19937 non-null  int64  \n",
      " 76  WAP077            19937 non-null  int64  \n",
      " 77  WAP078            19937 non-null  int64  \n",
      " 78  WAP079            19937 non-null  int64  \n",
      " 79  WAP080            19937 non-null  int64  \n",
      " 80  WAP081            19937 non-null  int64  \n",
      " 81  WAP082            19937 non-null  int64  \n",
      " 82  WAP083            19937 non-null  int64  \n",
      " 83  WAP084            19937 non-null  int64  \n",
      " 84  WAP085            19937 non-null  int64  \n",
      " 85  WAP086            19937 non-null  int64  \n",
      " 86  WAP087            19937 non-null  int64  \n",
      " 87  WAP088            19937 non-null  int64  \n",
      " 88  WAP089            19937 non-null  int64  \n",
      " 89  WAP090            19937 non-null  int64  \n",
      " 90  WAP091            19937 non-null  int64  \n",
      " 91  WAP092            19937 non-null  int64  \n",
      " 92  WAP093            19937 non-null  int64  \n",
      " 93  WAP094            19937 non-null  int64  \n",
      " 94  WAP095            19937 non-null  int64  \n",
      " 95  WAP096            19937 non-null  int64  \n",
      " 96  WAP097            19937 non-null  int64  \n",
      " 97  WAP098            19937 non-null  int64  \n",
      " 98  WAP099            19937 non-null  int64  \n",
      " 99  WAP100            19937 non-null  int64  \n",
      " 100 WAP101            19937 non-null  int64  \n",
      " 101 WAP102            19937 non-null  int64  \n",
      " 102 WAP103            19937 non-null  int64  \n",
      " 103 WAP104            19937 non-null  int64  \n",
      " 104 WAP105            19937 non-null  int64  \n",
      " 105 WAP106            19937 non-null  int64  \n",
      " 106 WAP107            19937 non-null  int64  \n",
      " 107 WAP108            19937 non-null  int64  \n",
      " 108 WAP109            19937 non-null  int64  \n",
      " 109 WAP110            19937 non-null  int64  \n",
      " 110 WAP111            19937 non-null  int64  \n",
      " 111 WAP112            19937 non-null  int64  \n",
      " 112 WAP113            19937 non-null  int64  \n",
      " 113 WAP114            19937 non-null  int64  \n",
      " 114 WAP115            19937 non-null  int64  \n",
      " 115 WAP116            19937 non-null  int64  \n",
      " 116 WAP117            19937 non-null  int64  \n",
      " 117 WAP118            19937 non-null  int64  \n",
      " 118 WAP119            19937 non-null  int64  \n",
      " 119 WAP120            19937 non-null  int64  \n",
      " 120 WAP121            19937 non-null  int64  \n",
      " 121 WAP122            19937 non-null  int64  \n",
      " 122 WAP123            19937 non-null  int64  \n",
      " 123 WAP124            19937 non-null  int64  \n",
      " 124 WAP125            19937 non-null  int64  \n",
      " 125 WAP126            19937 non-null  int64  \n",
      " 126 WAP127            19937 non-null  int64  \n",
      " 127 WAP128            19937 non-null  int64  \n",
      " 128 WAP129            19937 non-null  int64  \n",
      " 129 WAP130            19937 non-null  int64  \n",
      " 130 WAP131            19937 non-null  int64  \n",
      " 131 WAP132            19937 non-null  int64  \n",
      " 132 WAP133            19937 non-null  int64  \n",
      " 133 WAP134            19937 non-null  int64  \n",
      " 134 WAP135            19937 non-null  int64  \n",
      " 135 WAP136            19937 non-null  int64  \n",
      " 136 WAP137            19937 non-null  int64  \n",
      " 137 WAP138            19937 non-null  int64  \n",
      " 138 WAP139            19937 non-null  int64  \n",
      " 139 WAP140            19937 non-null  int64  \n",
      " 140 WAP141            19937 non-null  int64  \n",
      " 141 WAP142            19937 non-null  int64  \n",
      " 142 WAP143            19937 non-null  int64  \n",
      " 143 WAP144            19937 non-null  int64  \n",
      " 144 WAP145            19937 non-null  int64  \n",
      " 145 WAP146            19937 non-null  int64  \n",
      " 146 WAP147            19937 non-null  int64  \n",
      " 147 WAP148            19937 non-null  int64  \n",
      " 148 WAP149            19937 non-null  int64  \n",
      " 149 WAP150            19937 non-null  int64  \n",
      " 150 WAP151            19937 non-null  int64  \n",
      " 151 WAP152            19937 non-null  int64  \n",
      " 152 WAP153            19937 non-null  int64  \n",
      " 153 WAP154            19937 non-null  int64  \n",
      " 154 WAP155            19937 non-null  int64  \n",
      " 155 WAP156            19937 non-null  int64  \n",
      " 156 WAP157            19937 non-null  int64  \n",
      " 157 WAP158            19937 non-null  int64  \n",
      " 158 WAP159            19937 non-null  int64  \n",
      " 159 WAP160            19937 non-null  int64  \n",
      " 160 WAP161            19937 non-null  int64  \n",
      " 161 WAP162            19937 non-null  int64  \n",
      " 162 WAP163            19937 non-null  int64  \n",
      " 163 WAP164            19937 non-null  int64  \n",
      " 164 WAP165            19937 non-null  int64  \n",
      " 165 WAP166            19937 non-null  int64  \n",
      " 166 WAP167            19937 non-null  int64  \n",
      " 167 WAP168            19937 non-null  int64  \n",
      " 168 WAP169            19937 non-null  int64  \n",
      " 169 WAP170            19937 non-null  int64  \n",
      " 170 WAP171            19937 non-null  int64  \n",
      " 171 WAP172            19937 non-null  int64  \n",
      " 172 WAP173            19937 non-null  int64  \n",
      " 173 WAP174            19937 non-null  int64  \n",
      " 174 WAP175            19937 non-null  int64  \n",
      " 175 WAP176            19937 non-null  int64  \n",
      " 176 WAP177            19937 non-null  int64  \n",
      " 177 WAP178            19937 non-null  int64  \n",
      " 178 WAP179            19937 non-null  int64  \n",
      " 179 WAP180            19937 non-null  int64  \n",
      " 180 WAP181            19937 non-null  int64  \n",
      " 181 WAP182            19937 non-null  int64  \n",
      " 182 WAP183            19937 non-null  int64  \n",
      " 183 WAP184            19937 non-null  int64  \n",
      " 184 WAP185            19937 non-null  int64  \n",
      " 185 WAP186            19937 non-null  int64  \n",
      " 186 WAP187            19937 non-null  int64  \n",
      " 187 WAP188            19937 non-null  int64  \n",
      " 188 WAP189            19937 non-null  int64  \n",
      " 189 WAP190            19937 non-null  int64  \n",
      " 190 WAP191            19937 non-null  int64  \n",
      " 191 WAP192            19937 non-null  int64  \n",
      " 192 WAP193            19937 non-null  int64  \n",
      " 193 WAP194            19937 non-null  int64  \n",
      " 194 WAP195            19937 non-null  int64  \n",
      " 195 WAP196            19937 non-null  int64  \n",
      " 196 WAP197            19937 non-null  int64  \n",
      " 197 WAP198            19937 non-null  int64  \n",
      " 198 WAP199            19937 non-null  int64  \n",
      " 199 WAP200            19937 non-null  int64  \n",
      " 200 WAP201            19937 non-null  int64  \n",
      " 201 WAP202            19937 non-null  int64  \n",
      " 202 WAP203            19937 non-null  int64  \n",
      " 203 WAP204            19937 non-null  int64  \n",
      " 204 WAP205            19937 non-null  int64  \n",
      " 205 WAP206            19937 non-null  int64  \n",
      " 206 WAP207            19937 non-null  int64  \n",
      " 207 WAP208            19937 non-null  int64  \n",
      " 208 WAP209            19937 non-null  int64  \n",
      " 209 WAP210            19937 non-null  int64  \n",
      " 210 WAP211            19937 non-null  int64  \n",
      " 211 WAP212            19937 non-null  int64  \n",
      " 212 WAP213            19937 non-null  int64  \n",
      " 213 WAP214            19937 non-null  int64  \n",
      " 214 WAP215            19937 non-null  int64  \n",
      " 215 WAP216            19937 non-null  int64  \n",
      " 216 WAP217            19937 non-null  int64  \n",
      " 217 WAP218            19937 non-null  int64  \n",
      " 218 WAP219            19937 non-null  int64  \n",
      " 219 WAP220            19937 non-null  int64  \n",
      " 220 WAP221            19937 non-null  int64  \n",
      " 221 WAP222            19937 non-null  int64  \n",
      " 222 WAP223            19937 non-null  int64  \n",
      " 223 WAP224            19937 non-null  int64  \n",
      " 224 WAP225            19937 non-null  int64  \n",
      " 225 WAP226            19937 non-null  int64  \n",
      " 226 WAP227            19937 non-null  int64  \n",
      " 227 WAP228            19937 non-null  int64  \n",
      " 228 WAP229            19937 non-null  int64  \n",
      " 229 WAP230            19937 non-null  int64  \n",
      " 230 WAP231            19937 non-null  int64  \n",
      " 231 WAP232            19937 non-null  int64  \n",
      " 232 WAP233            19937 non-null  int64  \n",
      " 233 WAP234            19937 non-null  int64  \n",
      " 234 WAP235            19937 non-null  int64  \n",
      " 235 WAP236            19937 non-null  int64  \n",
      " 236 WAP237            19937 non-null  int64  \n",
      " 237 WAP238            19937 non-null  int64  \n",
      " 238 WAP239            19937 non-null  int64  \n",
      " 239 WAP240            19937 non-null  int64  \n",
      " 240 WAP241            19937 non-null  int64  \n",
      " 241 WAP242            19937 non-null  int64  \n",
      " 242 WAP243            19937 non-null  int64  \n",
      " 243 WAP244            19937 non-null  int64  \n",
      " 244 WAP245            19937 non-null  int64  \n",
      " 245 WAP246            19937 non-null  int64  \n",
      " 246 WAP247            19937 non-null  int64  \n",
      " 247 WAP248            19937 non-null  int64  \n",
      " 248 WAP249            19937 non-null  int64  \n",
      " 249 WAP250            19937 non-null  int64  \n",
      " 250 WAP251            19937 non-null  int64  \n",
      " 251 WAP252            19937 non-null  int64  \n",
      " 252 WAP253            19937 non-null  int64  \n",
      " 253 WAP254            19937 non-null  int64  \n",
      " 254 WAP255            19937 non-null  int64  \n",
      " 255 WAP256            19937 non-null  int64  \n",
      " 256 WAP257            19937 non-null  int64  \n",
      " 257 WAP258            19937 non-null  int64  \n",
      " 258 WAP259            19937 non-null  int64  \n",
      " 259 WAP260            19937 non-null  int64  \n",
      " 260 WAP261            19937 non-null  int64  \n",
      " 261 WAP262            19937 non-null  int64  \n",
      " 262 WAP263            19937 non-null  int64  \n",
      " 263 WAP264            19937 non-null  int64  \n",
      " 264 WAP265            19937 non-null  int64  \n",
      " 265 WAP266            19937 non-null  int64  \n",
      " 266 WAP267            19937 non-null  int64  \n",
      " 267 WAP268            19937 non-null  int64  \n",
      " 268 WAP269            19937 non-null  int64  \n",
      " 269 WAP270            19937 non-null  int64  \n",
      " 270 WAP271            19937 non-null  int64  \n",
      " 271 WAP272            19937 non-null  int64  \n",
      " 272 WAP273            19937 non-null  int64  \n",
      " 273 WAP274            19937 non-null  int64  \n",
      " 274 WAP275            19937 non-null  int64  \n",
      " 275 WAP276            19937 non-null  int64  \n",
      " 276 WAP277            19937 non-null  int64  \n",
      " 277 WAP278            19937 non-null  int64  \n",
      " 278 WAP279            19937 non-null  int64  \n",
      " 279 WAP280            19937 non-null  int64  \n",
      " 280 WAP281            19937 non-null  int64  \n",
      " 281 WAP282            19937 non-null  int64  \n",
      " 282 WAP283            19937 non-null  int64  \n",
      " 283 WAP284            19937 non-null  int64  \n",
      " 284 WAP285            19937 non-null  int64  \n",
      " 285 WAP286            19937 non-null  int64  \n",
      " 286 WAP287            19937 non-null  int64  \n",
      " 287 WAP288            19937 non-null  int64  \n",
      " 288 WAP289            19937 non-null  int64  \n",
      " 289 WAP290            19937 non-null  int64  \n",
      " 290 WAP291            19937 non-null  int64  \n",
      " 291 WAP292            19937 non-null  int64  \n",
      " 292 WAP293            19937 non-null  int64  \n",
      " 293 WAP294            19937 non-null  int64  \n",
      " 294 WAP295            19937 non-null  int64  \n",
      " 295 WAP296            19937 non-null  int64  \n",
      " 296 WAP297            19937 non-null  int64  \n",
      " 297 WAP298            19937 non-null  int64  \n",
      " 298 WAP299            19937 non-null  int64  \n",
      " 299 WAP300            19937 non-null  int64  \n",
      " 300 WAP301            19937 non-null  int64  \n",
      " 301 WAP302            19937 non-null  int64  \n",
      " 302 WAP303            19937 non-null  int64  \n",
      " 303 WAP304            19937 non-null  int64  \n",
      " 304 WAP305            19937 non-null  int64  \n",
      " 305 WAP306            19937 non-null  int64  \n",
      " 306 WAP307            19937 non-null  int64  \n",
      " 307 WAP308            19937 non-null  int64  \n",
      " 308 WAP309            19937 non-null  int64  \n",
      " 309 WAP310            19937 non-null  int64  \n",
      " 310 WAP311            19937 non-null  int64  \n",
      " 311 WAP312            19937 non-null  int64  \n",
      " 312 WAP313            19937 non-null  int64  \n",
      " 313 WAP314            19937 non-null  int64  \n",
      " 314 WAP315            19937 non-null  int64  \n",
      " 315 WAP316            19937 non-null  int64  \n",
      " 316 WAP317            19937 non-null  int64  \n",
      " 317 WAP318            19937 non-null  int64  \n",
      " 318 WAP319            19937 non-null  int64  \n",
      " 319 WAP320            19937 non-null  int64  \n",
      " 320 WAP321            19937 non-null  int64  \n",
      " 321 WAP322            19937 non-null  int64  \n",
      " 322 WAP323            19937 non-null  int64  \n",
      " 323 WAP324            19937 non-null  int64  \n",
      " 324 WAP325            19937 non-null  int64  \n",
      " 325 WAP326            19937 non-null  int64  \n",
      " 326 WAP327            19937 non-null  int64  \n",
      " 327 WAP328            19937 non-null  int64  \n",
      " 328 WAP329            19937 non-null  int64  \n",
      " 329 WAP330            19937 non-null  int64  \n",
      " 330 WAP331            19937 non-null  int64  \n",
      " 331 WAP332            19937 non-null  int64  \n",
      " 332 WAP333            19937 non-null  int64  \n",
      " 333 WAP334            19937 non-null  int64  \n",
      " 334 WAP335            19937 non-null  int64  \n",
      " 335 WAP336            19937 non-null  int64  \n",
      " 336 WAP337            19937 non-null  int64  \n",
      " 337 WAP338            19937 non-null  int64  \n",
      " 338 WAP339            19937 non-null  int64  \n",
      " 339 WAP340            19937 non-null  int64  \n",
      " 340 WAP341            19937 non-null  int64  \n",
      " 341 WAP342            19937 non-null  int64  \n",
      " 342 WAP343            19937 non-null  int64  \n",
      " 343 WAP344            19937 non-null  int64  \n",
      " 344 WAP345            19937 non-null  int64  \n",
      " 345 WAP346            19937 non-null  int64  \n",
      " 346 WAP347            19937 non-null  int64  \n",
      " 347 WAP348            19937 non-null  int64  \n",
      " 348 WAP349            19937 non-null  int64  \n",
      " 349 WAP350            19937 non-null  int64  \n",
      " 350 WAP351            19937 non-null  int64  \n",
      " 351 WAP352            19937 non-null  int64  \n",
      " 352 WAP353            19937 non-null  int64  \n",
      " 353 WAP354            19937 non-null  int64  \n",
      " 354 WAP355            19937 non-null  int64  \n",
      " 355 WAP356            19937 non-null  int64  \n",
      " 356 WAP357            19937 non-null  int64  \n",
      " 357 WAP358            19937 non-null  int64  \n",
      " 358 WAP359            19937 non-null  int64  \n",
      " 359 WAP360            19937 non-null  int64  \n",
      " 360 WAP361            19937 non-null  int64  \n",
      " 361 WAP362            19937 non-null  int64  \n",
      " 362 WAP363            19937 non-null  int64  \n",
      " 363 WAP364            19937 non-null  int64  \n",
      " 364 WAP365            19937 non-null  int64  \n",
      " 365 WAP366            19937 non-null  int64  \n",
      " 366 WAP367            19937 non-null  int64  \n",
      " 367 WAP368            19937 non-null  int64  \n",
      " 368 WAP369            19937 non-null  int64  \n",
      " 369 WAP370            19937 non-null  int64  \n",
      " 370 WAP371            19937 non-null  int64  \n",
      " 371 WAP372            19937 non-null  int64  \n",
      " 372 WAP373            19937 non-null  int64  \n",
      " 373 WAP374            19937 non-null  int64  \n",
      " 374 WAP375            19937 non-null  int64  \n",
      " 375 WAP376            19937 non-null  int64  \n",
      " 376 WAP377            19937 non-null  int64  \n",
      " 377 WAP378            19937 non-null  int64  \n",
      " 378 WAP379            19937 non-null  int64  \n",
      " 379 WAP380            19937 non-null  int64  \n",
      " 380 WAP381            19937 non-null  int64  \n",
      " 381 WAP382            19937 non-null  int64  \n",
      " 382 WAP383            19937 non-null  int64  \n",
      " 383 WAP384            19937 non-null  int64  \n",
      " 384 WAP385            19937 non-null  int64  \n",
      " 385 WAP386            19937 non-null  int64  \n",
      " 386 WAP387            19937 non-null  int64  \n",
      " 387 WAP388            19937 non-null  int64  \n",
      " 388 WAP389            19937 non-null  int64  \n",
      " 389 WAP390            19937 non-null  int64  \n",
      " 390 WAP391            19937 non-null  int64  \n",
      " 391 WAP392            19937 non-null  int64  \n",
      " 392 WAP393            19937 non-null  int64  \n",
      " 393 WAP394            19937 non-null  int64  \n",
      " 394 WAP395            19937 non-null  int64  \n",
      " 395 WAP396            19937 non-null  int64  \n",
      " 396 WAP397            19937 non-null  int64  \n",
      " 397 WAP398            19937 non-null  int64  \n",
      " 398 WAP399            19937 non-null  int64  \n",
      " 399 WAP400            19937 non-null  int64  \n",
      " 400 WAP401            19937 non-null  int64  \n",
      " 401 WAP402            19937 non-null  int64  \n",
      " 402 WAP403            19937 non-null  int64  \n",
      " 403 WAP404            19937 non-null  int64  \n",
      " 404 WAP405            19937 non-null  int64  \n",
      " 405 WAP406            19937 non-null  int64  \n",
      " 406 WAP407            19937 non-null  int64  \n",
      " 407 WAP408            19937 non-null  int64  \n",
      " 408 WAP409            19937 non-null  int64  \n",
      " 409 WAP410            19937 non-null  int64  \n",
      " 410 WAP411            19937 non-null  int64  \n",
      " 411 WAP412            19937 non-null  int64  \n",
      " 412 WAP413            19937 non-null  int64  \n",
      " 413 WAP414            19937 non-null  int64  \n",
      " 414 WAP415            19937 non-null  int64  \n",
      " 415 WAP416            19937 non-null  int64  \n",
      " 416 WAP417            19937 non-null  int64  \n",
      " 417 WAP418            19937 non-null  int64  \n",
      " 418 WAP419            19937 non-null  int64  \n",
      " 419 WAP420            19937 non-null  int64  \n",
      " 420 WAP421            19937 non-null  int64  \n",
      " 421 WAP422            19937 non-null  int64  \n",
      " 422 WAP423            19937 non-null  int64  \n",
      " 423 WAP424            19937 non-null  int64  \n",
      " 424 WAP425            19937 non-null  int64  \n",
      " 425 WAP426            19937 non-null  int64  \n",
      " 426 WAP427            19937 non-null  int64  \n",
      " 427 WAP428            19937 non-null  int64  \n",
      " 428 WAP429            19937 non-null  int64  \n",
      " 429 WAP430            19937 non-null  int64  \n",
      " 430 WAP431            19937 non-null  int64  \n",
      " 431 WAP432            19937 non-null  int64  \n",
      " 432 WAP433            19937 non-null  int64  \n",
      " 433 WAP434            19937 non-null  int64  \n",
      " 434 WAP435            19937 non-null  int64  \n",
      " 435 WAP436            19937 non-null  int64  \n",
      " 436 WAP437            19937 non-null  int64  \n",
      " 437 WAP438            19937 non-null  int64  \n",
      " 438 WAP439            19937 non-null  int64  \n",
      " 439 WAP440            19937 non-null  int64  \n",
      " 440 WAP441            19937 non-null  int64  \n",
      " 441 WAP442            19937 non-null  int64  \n",
      " 442 WAP443            19937 non-null  int64  \n",
      " 443 WAP444            19937 non-null  int64  \n",
      " 444 WAP445            19937 non-null  int64  \n",
      " 445 WAP446            19937 non-null  int64  \n",
      " 446 WAP447            19937 non-null  int64  \n",
      " 447 WAP448            19937 non-null  int64  \n",
      " 448 WAP449            19937 non-null  int64  \n",
      " 449 WAP450            19937 non-null  int64  \n",
      " 450 WAP451            19937 non-null  int64  \n",
      " 451 WAP452            19937 non-null  int64  \n",
      " 452 WAP453            19937 non-null  int64  \n",
      " 453 WAP454            19937 non-null  int64  \n",
      " 454 WAP455            19937 non-null  int64  \n",
      " 455 WAP456            19937 non-null  int64  \n",
      " 456 WAP457            19937 non-null  int64  \n",
      " 457 WAP458            19937 non-null  int64  \n",
      " 458 WAP459            19937 non-null  int64  \n",
      " 459 WAP460            19937 non-null  int64  \n",
      " 460 WAP461            19937 non-null  int64  \n",
      " 461 WAP462            19937 non-null  int64  \n",
      " 462 WAP463            19937 non-null  int64  \n",
      " 463 WAP464            19937 non-null  int64  \n",
      " 464 WAP465            19937 non-null  int64  \n",
      " 465 WAP466            19937 non-null  int64  \n",
      " 466 WAP467            19937 non-null  int64  \n",
      " 467 WAP468            19937 non-null  int64  \n",
      " 468 WAP469            19937 non-null  int64  \n",
      " 469 WAP470            19937 non-null  int64  \n",
      " 470 WAP471            19937 non-null  int64  \n",
      " 471 WAP472            19937 non-null  int64  \n",
      " 472 WAP473            19937 non-null  int64  \n",
      " 473 WAP474            19937 non-null  int64  \n",
      " 474 WAP475            19937 non-null  int64  \n",
      " 475 WAP476            19937 non-null  int64  \n",
      " 476 WAP477            19937 non-null  int64  \n",
      " 477 WAP478            19937 non-null  int64  \n",
      " 478 WAP479            19937 non-null  int64  \n",
      " 479 WAP480            19937 non-null  int64  \n",
      " 480 WAP481            19937 non-null  int64  \n",
      " 481 WAP482            19937 non-null  int64  \n",
      " 482 WAP483            19937 non-null  int64  \n",
      " 483 WAP484            19937 non-null  int64  \n",
      " 484 WAP485            19937 non-null  int64  \n",
      " 485 WAP486            19937 non-null  int64  \n",
      " 486 WAP487            19937 non-null  int64  \n",
      " 487 WAP488            19937 non-null  int64  \n",
      " 488 WAP489            19937 non-null  int64  \n",
      " 489 WAP490            19937 non-null  int64  \n",
      " 490 WAP491            19937 non-null  int64  \n",
      " 491 WAP492            19937 non-null  int64  \n",
      " 492 WAP493            19937 non-null  int64  \n",
      " 493 WAP494            19937 non-null  int64  \n",
      " 494 WAP495            19937 non-null  int64  \n",
      " 495 WAP496            19937 non-null  int64  \n",
      " 496 WAP497            19937 non-null  int64  \n",
      " 497 WAP498            19937 non-null  int64  \n",
      " 498 WAP499            19937 non-null  int64  \n",
      " 499 WAP500            19937 non-null  int64  \n",
      " 500 WAP501            19937 non-null  int64  \n",
      " 501 WAP502            19937 non-null  int64  \n",
      " 502 WAP503            19937 non-null  int64  \n",
      " 503 WAP504            19937 non-null  int64  \n",
      " 504 WAP505            19937 non-null  int64  \n",
      " 505 WAP506            19937 non-null  int64  \n",
      " 506 WAP507            19937 non-null  int64  \n",
      " 507 WAP508            19937 non-null  int64  \n",
      " 508 WAP509            19937 non-null  int64  \n",
      " 509 WAP510            19937 non-null  int64  \n",
      " 510 WAP511            19937 non-null  int64  \n",
      " 511 WAP512            19937 non-null  int64  \n",
      " 512 WAP513            19937 non-null  int64  \n",
      " 513 WAP514            19937 non-null  int64  \n",
      " 514 WAP515            19937 non-null  int64  \n",
      " 515 WAP516            19937 non-null  int64  \n",
      " 516 WAP517            19937 non-null  int64  \n",
      " 517 WAP518            19937 non-null  int64  \n",
      " 518 WAP519            19937 non-null  int64  \n",
      " 519 WAP520            19937 non-null  int64  \n",
      " 520 LONGITUDE         19937 non-null  float64\n",
      " 521 LATITUDE          19937 non-null  float64\n",
      " 522 FLOOR             19937 non-null  int64  \n",
      " 523 BUILDINGID        19937 non-null  int64  \n",
      " 524 SPACEID           19937 non-null  int64  \n",
      " 525 RELATIVEPOSITION  19937 non-null  int64  \n",
      " 526 USERID            19937 non-null  int64  \n",
      " 527 PHONEID           19937 non-null  int64  \n",
      " 528 TIMESTAMP         19937 non-null  int64  \n",
      "dtypes: float64(2), int64(527)\n",
      "memory usage: 80.5 MB\n"
     ]
    }
   ],
   "source": [
    "#Structure\n",
    "trainingData.info(verbose=True, null_counts=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19932</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19933</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19934</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19935</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19936</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>19937 rows × 529 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "0       False   False   False   False   False   False   False   False   False   \n",
       "1       False   False   False   False   False   False   False   False   False   \n",
       "2       False   False   False   False   False   False   False   False   False   \n",
       "3       False   False   False   False   False   False   False   False   False   \n",
       "4       False   False   False   False   False   False   False   False   False   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "19932   False   False   False   False   False   False   False   False   False   \n",
       "19933   False   False   False   False   False   False   False   False   False   \n",
       "19934   False   False   False   False   False   False   False   False   False   \n",
       "19935   False   False   False   False   False   False   False   False   False   \n",
       "19936   False   False   False   False   False   False   False   False   False   \n",
       "\n",
       "       WAP010  ...  WAP520  LONGITUDE  LATITUDE  FLOOR  BUILDINGID  SPACEID  \\\n",
       "0       False  ...   False      False     False  False       False    False   \n",
       "1       False  ...   False      False     False  False       False    False   \n",
       "2       False  ...   False      False     False  False       False    False   \n",
       "3       False  ...   False      False     False  False       False    False   \n",
       "4       False  ...   False      False     False  False       False    False   \n",
       "...       ...  ...     ...        ...       ...    ...         ...      ...   \n",
       "19932   False  ...   False      False     False  False       False    False   \n",
       "19933   False  ...   False      False     False  False       False    False   \n",
       "19934   False  ...   False      False     False  False       False    False   \n",
       "19935   False  ...   False      False     False  False       False    False   \n",
       "19936   False  ...   False      False     False  False       False    False   \n",
       "\n",
       "       RELATIVEPOSITION  USERID  PHONEID  TIMESTAMP  \n",
       "0                 False   False    False      False  \n",
       "1                 False   False    False      False  \n",
       "2                 False   False    False      False  \n",
       "3                 False   False    False      False  \n",
       "4                 False   False    False      False  \n",
       "...                 ...     ...      ...        ...  \n",
       "19932             False   False    False      False  \n",
       "19933             False   False    False      False  \n",
       "19934             False   False    False      False  \n",
       "19935             False   False    False      False  \n",
       "19936             False   False    False      False  \n",
       "\n",
       "[19937 rows x 529 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Identify Missing Values\n",
    "trainingData.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a20267750>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot\n",
    "sns.scatterplot(data=trainingData, x=\"LONGITUDE\", y=\"LATITUDE\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP520</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>-7541.2643</td>\n",
       "      <td>4.864921e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>-7536.6212</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>-7519.1524</td>\n",
       "      <td>4.864950e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>-7524.5704</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>102</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100</td>\n",
       "      <td>-7632.1436</td>\n",
       "      <td>4.864982e+06</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>122</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>1369909710</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   WAP520  LONGITUDE      LATITUDE  FLOOR  BUILDINGID  SPACEID  \\\n",
       "0     100 -7541.2643  4.864921e+06      2           1      106   \n",
       "1     100 -7536.6212  4.864934e+06      2           1      106   \n",
       "2     100 -7519.1524  4.864950e+06      2           1      103   \n",
       "3     100 -7524.5704  4.864934e+06      2           1      102   \n",
       "4     100 -7632.1436  4.864982e+06      0           0      122   \n",
       "\n",
       "   RELATIVEPOSITION  USERID  PHONEID   TIMESTAMP  \n",
       "0                 2       2       23  1371713733  \n",
       "1                 2       2       23  1371713691  \n",
       "2                 2       2       23  1371714095  \n",
       "3                 2       2       23  1371713807  \n",
       "4                 2      11       13  1369909710  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create Subset of Columns 519:530\n",
    "columns = trainingData.loc[:,['WAP520', 'LONGITUDE', 'LATITUDE', 'FLOOR', 'BUILDINGID', 'SPACEID', 'RELATIVEPOSITION', 'USERID', 'PHONEID', 'TIMESTAMP']]\n",
    "columns.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 19937 entries, 0 to 19936\n",
      "Data columns (total 10 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   WAP520            19937 non-null  int64  \n",
      " 1   LONGITUDE         19937 non-null  float64\n",
      " 2   LATITUDE          19937 non-null  float64\n",
      " 3   FLOOR             19937 non-null  int64  \n",
      " 4   BUILDINGID        19937 non-null  int64  \n",
      " 5   SPACEID           19937 non-null  int64  \n",
      " 6   RELATIVEPOSITION  19937 non-null  int64  \n",
      " 7   USERID            19937 non-null  int64  \n",
      " 8   PHONEID           19937 non-null  int64  \n",
      " 9   TIMESTAMP         19937 non-null  int64  \n",
      "dtypes: float64(2), int64(8)\n",
      "memory usage: 1.5 MB\n"
     ]
    }
   ],
   "source": [
    "#Check Structure\n",
    "columns.info(verbose=True, null_counts=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP520</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>19937.0</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>1.993700e+04</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>19937.000000</td>\n",
       "      <td>1.993700e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7464.275947</td>\n",
       "      <td>4.864871e+06</td>\n",
       "      <td>1.674575</td>\n",
       "      <td>1.212820</td>\n",
       "      <td>148.429954</td>\n",
       "      <td>1.833024</td>\n",
       "      <td>9.068014</td>\n",
       "      <td>13.021869</td>\n",
       "      <td>1.371421e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>123.402010</td>\n",
       "      <td>6.693318e+01</td>\n",
       "      <td>1.223078</td>\n",
       "      <td>0.833139</td>\n",
       "      <td>58.342106</td>\n",
       "      <td>0.372964</td>\n",
       "      <td>4.988720</td>\n",
       "      <td>5.362410</td>\n",
       "      <td>5.572054e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7691.338400</td>\n",
       "      <td>4.864746e+06</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.369909e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7594.737000</td>\n",
       "      <td>4.864821e+06</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>110.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>1.371056e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7423.060900</td>\n",
       "      <td>4.864852e+06</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>129.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>1.371716e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7359.193000</td>\n",
       "      <td>4.864930e+06</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>207.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>1.371721e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>100.0</td>\n",
       "      <td>-7300.818990</td>\n",
       "      <td>4.865017e+06</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>254.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>1.371738e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        WAP520     LONGITUDE      LATITUDE         FLOOR    BUILDINGID  \\\n",
       "count  19937.0  19937.000000  1.993700e+04  19937.000000  19937.000000   \n",
       "mean     100.0  -7464.275947  4.864871e+06      1.674575      1.212820   \n",
       "std        0.0    123.402010  6.693318e+01      1.223078      0.833139   \n",
       "min      100.0  -7691.338400  4.864746e+06      0.000000      0.000000   \n",
       "25%      100.0  -7594.737000  4.864821e+06      1.000000      0.000000   \n",
       "50%      100.0  -7423.060900  4.864852e+06      2.000000      1.000000   \n",
       "75%      100.0  -7359.193000  4.864930e+06      3.000000      2.000000   \n",
       "max      100.0  -7300.818990  4.865017e+06      4.000000      2.000000   \n",
       "\n",
       "            SPACEID  RELATIVEPOSITION        USERID       PHONEID  \\\n",
       "count  19937.000000      19937.000000  19937.000000  19937.000000   \n",
       "mean     148.429954          1.833024      9.068014     13.021869   \n",
       "std       58.342106          0.372964      4.988720      5.362410   \n",
       "min        1.000000          1.000000      1.000000      1.000000   \n",
       "25%      110.000000          2.000000      5.000000      8.000000   \n",
       "50%      129.000000          2.000000     11.000000     13.000000   \n",
       "75%      207.000000          2.000000     13.000000     14.000000   \n",
       "max      254.000000          2.000000     18.000000     24.000000   \n",
       "\n",
       "          TIMESTAMP  \n",
       "count  1.993700e+04  \n",
       "mean   1.371421e+09  \n",
       "std    5.572054e+05  \n",
       "min    1.369909e+09  \n",
       "25%    1.371056e+09  \n",
       "50%    1.371716e+09  \n",
       "75%    1.371721e+09  \n",
       "max    1.371738e+09  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Summary Statistics\n",
    "columns.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 0, 3, 4, 1])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check Unique Values for Variables Indicating a Location\n",
    "trainingData['FLOOR'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0, 2])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trainingData['BUILDINGID'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([106, 103, 102, 122, 105, 101, 112, 104, 110, 108, 109, 111, 107,\n",
       "        15,  29, 117,  16,  28,  22,  10,   2,   4,   3,   5,   6,   9,\n",
       "        27,   8,   7,  26,  18, 216,  17, 217, 247, 248, 246, 245, 244,\n",
       "       243, 242, 241, 240, 201, 202, 204, 203, 205, 207, 206, 209, 211,\n",
       "       208, 210, 212, 214, 213, 215, 121, 219, 221, 222, 218, 220, 250,\n",
       "       223, 225, 224, 229, 226, 227, 228, 233, 231, 230, 232, 236, 235,\n",
       "       234, 237, 238, 239, 141, 140, 143, 113, 114, 116, 115, 120, 118,\n",
       "       128, 119, 129, 125, 124, 131, 127, 132, 126, 133, 134, 137, 135,\n",
       "       136, 253, 254, 123, 130, 138, 139, 142, 146, 147, 249, 144,   1,\n",
       "        30,  25,  13,  12,  11,  14])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trainingData['SPACEID'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trainingData['RELATIVEPOSITION'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([5249.,    0., 5196.,    0., 9492.]),\n",
       " array([0. , 0.4, 0.8, 1.2, 1.6, 2. ]),\n",
       " <a list of 5 Patch objects>)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAQ2klEQVR4nO3df8ydZX3H8fdnVHCgkyLVsYK2xEYHywysQUTjVAw/N8sySWrcrK5L44ZOt2UbjGQsKhkky3Bm6sKABYzhx6obzB9zHWCWzVAsP+RXxdbCoINJtQVlRrTsuz/OVTxtnh/nsc85bb3er+TJc9/Xdd3nfO+rN59zP/d9ziFVhSSpDz+1rwuQJE2OoS9JHTH0Jakjhr4kdcTQl6SOLNjXBczkyCOPrCVLluzrMiTpgHLHHXd8q6oWTdW3X4f+kiVL2LBhw74uQ5IOKEn+a7o+L+9IUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JH9utP5EoSwJLzP7evS5i4hy85eyyP65m+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOjJS6Cf5/ST3J7kvybVJnp9kaZL1STYluT7JwW3sIW19c+tfMvQ4F7T2B5OcPp5dkiRNZ9bQT7IY+D1geVX9AnAQsBK4FLisqpYBO4DVbZPVwI6qegVwWRtHkuPadscDZwAfT3LQ/O6OJGkmo17eWQD8dJIFwKHA48CbgbWt/2rgnLa8oq3T+k9NktZ+XVU9U1UPAZuBk/Z+FyRJo5o19Kvqv4G/BB5hEPZPAXcAT1bVzjZsK7C4LS8GHm3b7mzjXzzcPsU2z0myJsmGJBu2bdv24+yTJGkao1zeWcjgLH0p8HPAYcCZUwytXZtM0zdd++4NVZdX1fKqWr5o0aLZypMkzcEol3feAjxUVduq6ofAZ4BTgMPb5R6Ao4HH2vJW4BiA1v8iYPtw+xTbSJImYJTQfwQ4Ocmh7dr8qcADwK3A29qYVcCNbfmmtk7rv6WqqrWvbO/uWQosA26fn92QJI1iwWwDqmp9krXAncBO4C7gcuBzwHVJPtzarmybXAl8MslmBmf4K9vj3J/kBgYvGDuB86rq2XneH0nSDGYNfYCqugi4aI/mLUzx7puq+j5w7jSPczFw8RxrlCTNEz+RK0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdWSk0E9yeJK1Sb6WZGOS1yY5Ism6JJva74VtbJJ8NMnmJPckOXHocVa18ZuSrBrXTkmSpjbqmf5fA/9SVa8CXg1sBM4Hbq6qZcDNbR3gTGBZ+1kDfAIgyRHARcBrgJOAi3a9UEiSJmPW0E/yM8AbgCsBquoHVfUksAK4ug27GjinLa8ArqmB24DDkxwFnA6sq6rtVbUDWAecMa97I0ma0Shn+scC24C/T3JXkiuSHAa8tKoeB2i/X9LGLwYeHdp+a2ubrn03SdYk2ZBkw7Zt2+a8Q5Kk6Y0S+guAE4FPVNUJwP/yo0s5U8kUbTVD++4NVZdX1fKqWr5o0aIRypMkjWqU0N8KbK2q9W19LYMXgW+2yza0308MjT9maPujgcdmaJckTcisoV9V/wM8muSVrelU4AHgJmDXO3BWATe25ZuAd7Z38ZwMPNUu/3wROC3JwnYD97TWJkmakAUjjnsf8KkkBwNbgHczeMG4Iclq4BHg3Db288BZwGbge20sVbU9yYeAr7RxH6yq7fOyF5KkkYwU+lV1N7B8iq5TpxhbwHnTPM5VwFVzKVCSNH/8RK4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjoz63TsHpCXnf25flzBRD19y9r4uQdJ+7ic69PWTr7cXdvDFXXvHyzuS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0JakjI4d+koOS3JXks219aZL1STYluT7Jwa39kLa+ufUvGXqMC1r7g0lOn++dkSTNbC5n+u8HNg6tXwpcVlXLgB3A6ta+GthRVa8ALmvjSHIcsBI4HjgD+HiSg/aufEnSXIwU+kmOBs4GrmjrAd4MrG1DrgbOacsr2jqt/9Q2fgVwXVU9U1UPAZuBk+ZjJyRJoxn1TP8jwB8D/9fWXww8WVU72/pWYHFbXgw8CtD6n2rjn2ufYhtJ0gTMGvpJfgV4oqruGG6eYmjN0jfTNsPPtybJhiQbtm3bNlt5kqQ5GOVM/3XAW5M8DFzH4LLOR4DDkyxoY44GHmvLW4FjAFr/i4Dtw+1TbPOcqrq8qpZX1fJFixbNeYckSdObNfSr6oKqOrqqljC4EXtLVb0DuBV4Wxu2CrixLd/U1mn9t1RVtfaV7d09S4FlwO3ztieSpFktmH3ItP4EuC7Jh4G7gCtb+5XAJ5NsZnCGvxKgqu5PcgPwALATOK+qnt2L55ckzdGcQr+qvgR8qS1vYYp331TV94Fzp9n+YuDiuRYpSZoffiJXkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqyKyhn+SYJLcm2Zjk/iTvb+1HJFmXZFP7vbC1J8lHk2xOck+SE4cea1UbvynJqvHtliRpKqOc6e8E/rCqfh44GTgvyXHA+cDNVbUMuLmtA5wJLGs/a4BPwOBFArgIeA1wEnDRrhcKSdJkzBr6VfV4Vd3Zlr8LbAQWAyuAq9uwq4Fz2vIK4JoauA04PMlRwOnAuqraXlU7gHXAGfO6N5KkGc3pmn6SJcAJwHrgpVX1OAxeGICXtGGLgUeHNtva2qZr3/M51iTZkGTDtm3b5lKeJGkWI4d+khcAnwY+UFXfmWnoFG01Q/vuDVWXV9Xyqlq+aNGiUcuTJI1gpNBP8jwGgf+pqvpMa/5mu2xD+/1Ea98KHDO0+dHAYzO0S5ImZJR37wS4EthYVX811HUTsOsdOKuAG4fa39nexXMy8FS7/PNF4LQkC9sN3NNamyRpQhaMMOZ1wG8C9ya5u7X9KXAJcEOS1cAjwLmt7/PAWcBm4HvAuwGqanuSDwFfaeM+WFXb52UvJEkjmTX0q+o/mPp6PMCpU4wv4LxpHusq4Kq5FChJmj9+IleSOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SerIxEM/yRlJHkyyOcn5k35+SerZREM/yUHAx4AzgeOAtyc5bpI1SFLPJn2mfxKwuaq2VNUPgOuAFROuQZK6tWDCz7cYeHRofSvwmuEBSdYAa9rq00ke3IvnOxL41l5sPy5jqSuX7vVDdDVf82Cf1DXCv7PzNTf7ZV25dK/qevl0HZMO/UzRVrutVF0OXD4vT5ZsqKrl8/FY88m65sa65sa65qa3uiZ9eWcrcMzQ+tHAYxOuQZK6NenQ/wqwLMnSJAcDK4GbJlyDJHVropd3qmpnkvcCXwQOAq6qqvvH+JTzcploDKxrbqxrbqxrbrqqK1U1+yhJ0k8EP5ErSR0x9CWpIwdk6M/2VQ5JDklyfetfn2TJUN8Frf3BJKdPuK4/SPJAknuS3Jzk5UN9zya5u/3M683tEep6V5JtQ8//20N9q5Jsaj+rJlzXZUM1fT3Jk0N945yvq5I8keS+afqT5KOt7nuSnDjUN875mq2ud7R67kny5SSvHup7OMm9bb42TLiuNyZ5aujf68+G+sb2tSwj1PVHQzXd146pI1rfOOfrmCS3JtmY5P4k759izPiOsao6oH4Y3AD+BnAscDDwVeC4Pcb8LvC3bXklcH1bPq6NPwRY2h7noAnW9Sbg0Lb8O7vqautP78P5ehfwN1NsewSwpf1e2JYXTqquPca/j8GN/7HOV3vsNwAnAvdN038W8AUGnzs5GVg/7vkasa5Tdj0fg686WT/U9zBw5D6arzcCn93bY2C+69pj7K8Ct0xovo4CTmzLLwS+PsV/k2M7xg7EM/1RvsphBXB1W14LnJokrf26qnqmqh4CNrfHm0hdVXVrVX2vrd7G4HMK47Y3X31xOrCuqrZX1Q5gHXDGPqrr7cC18/TcM6qqfwe2zzBkBXBNDdwGHJ7kKMY7X7PWVVVfbs8Lkzu+Rpmv6Yz1a1nmWNckj6/Hq+rOtvxdYCODbysYNrZj7EAM/am+ymHPCXtuTFXtBJ4CXjzituOsa9hqBq/kuzw/yYYktyU5Z55qmktdv97+jFybZNcH6PaL+WqXwZYCtww1j2u+RjFd7eOcr7na8/gq4F+T3JHBV51M2muTfDXJF5Ic39r2i/lKciiD4Pz0UPNE5iuDS88nAOv36BrbMTbpr2GYD7N+lcMMY0bZ9sc18mMn+Q1gOfDLQ80vq6rHkhwL3JLk3qr6xoTq+mfg2qp6Jsl7GPyV9OYRtx1nXbusBNZW1bNDbeOar1Hsi+NrZEnexCD0Xz/U/Lo2Xy8B1iX5WjsTnoQ7gZdX1dNJzgL+CVjGfjJfDC7t/GdVDf9VMPb5SvICBi80H6iq7+zZPcUm83KMHYhn+qN8lcNzY5IsAF7E4M+8cX4NxEiPneQtwIXAW6vqmV3tVfVY+70F+BKDV/+J1FVV3x6q5e+AXxp123HWNWQle/zpPcb5GsV0te/zrxlJ8ovAFcCKqvr2rvah+XoC+Efm77LmrKrqO1X1dFv+PPC8JEeyH8xXM9PxNZb5SvI8BoH/qar6zBRDxneMjeNGxTh/GPx1soXBn/u7bv4cv8eY89j9Ru4Nbfl4dr+Ru4X5u5E7Sl0nMLhxtWyP9oXAIW35SGAT83RDa8S6jhpa/jXgtvrRTaOHWn0L2/IRk6qrjXslg5tqmcR8DT3HEqa/MXk2u99ku33c8zViXS9jcJ/qlD3aDwNeOLT8ZeCMCdb1s7v+/RiE5yNt7kY6BsZVV+vfdUJ42KTmq+37NcBHZhgztmNs3iZ3kj8M7mx/nUGAXtjaPsjg7Bng+cA/tP8AbgeOHdr2wrbdg8CZE67r34BvAne3n5ta+ynAve2gvxdYPeG6/gK4vz3/rcCrhrb9rTaPm4F3T7Kutv7nwCV7bDfu+boWeBz4IYMzq9XAe4D3tP4w+J8BfaM9//IJzddsdV0B7Bg6vja09mPbXH21/TtfOOG63jt0fN3G0IvSVMfApOpqY97F4M0dw9uNe75ez+CSzD1D/1ZnTeoY82sYJKkjB+I1fUnSj8nQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR35f6MBUZdlxpO4AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Histogram of BUILDINGID\n",
    "plt.hist(trainingData['BUILDINGID'], bins=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([4369., 5002., 4416., 5048., 1102.]),\n",
       " array([0. , 0.8, 1.6, 2.4, 3.2, 4. ]),\n",
       " <a list of 5 Patch objects>)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAQpklEQVR4nO3db8yddX3H8fdHCmqmsyCVkbZYFvtAXKaypnQhWRwY/mkoySCp2aQSliYbyzRbosUHI6Ik+EQM29R10qy4KRDU0SGOdfyJ2QP+FEEEK+stMmlKbLVQNUyW4ncPzq94c3v/OTe9e07r7/1K7pzr+l6/c67vdbXnc677Otc5d6oKSVIfXjXuBiRJo2PoS1JHDH1J6oihL0kdMfQlqSOLxt3AbE488cRasWLFuNuQpKPKQw899KOqWjLdsiM69FesWMH27dvH3YYkHVWS/M9Myzy9I0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SerIUKGf5Kkk307ySJLtrXZCkm1Jdrbb41s9Sa5PMpHk0SSnT3qc9W38ziTrD88mSZJmMp9P5P5hVf1o0vxG4K6qujbJxjb/EeB8YGX7OQP4LHBGkhOAq4BVQAEPJdlaVc8uwHZI3Vix8WvjbmHknrr2PeNu4dfGoZzeWQtsadNbgIsm1W+sgfuAxUlOBs4FtlXVvhb024DzDmH9kqR5GvZIv4D/SFLAP1TVJuCkqnoGoKqeSfKmNnYp8PSk++5qtZnqL5NkA7AB4JRTTpnHpsgjQElzGTb0z6yq3S3YtyX57ixjM02tZqm/vDB4QdkEsGrVKv+AryQtoKFO71TV7na7B/gqsBr4YTttQ7vd04bvApZPuvsyYPcsdUnSiMwZ+kl+I8nrD04D5wCPAVuBg1fgrAdua9NbgUvbVTxrgP3tNNCdwDlJjm9X+pzTapKkERnm9M5JwFeTHBz/xar69yQPArckuRz4AXBJG38HcAEwATwPXAZQVfuSfBx4sI27uqr2LdiWSJLmNGfoV9WTwNunqf8YOHuaegFXzPBYm4HN829TkrQQ/ESuJHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SODPM3cqUj1oqNXxt3C9JRxSN9SerIr/WRvkeBkvRyHulLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdGTr0kxyT5OEkt7f5U5Pcn2RnkpuTHNfqr27zE235ikmPcWWrP5Hk3IXeGEnS7OZzpP9BYMek+U8C11XVSuBZ4PJWvxx4tqreAlzXxpHkNGAd8DbgPOAzSY45tPYlSfMxVOgnWQa8B/h8mw9wFnBrG7IFuKhNr23ztOVnt/FrgZuq6oWq+j4wAaxeiI2QJA1n2CP9TwMfBn7R5t8IPFdVB9r8LmBpm14KPA3Qlu9v41+qT3OflyTZkGR7ku179+6dx6ZIkuYyZ+gneS+wp6oemlyeZmjNsWy2+/yyULWpqlZV1aolS5bM1Z4kaR6G+SMqZwIXJrkAeA3wmwyO/BcnWdSO5pcBu9v4XcByYFeSRcAbgH2T6gdNvo8kaQTmPNKvqiurallVrWDwRuzdVfXHwD3AxW3YeuC2Nr21zdOW311V1err2tU9pwIrgQcWbEskSXM6lD+X+BHgpiSfAB4Gbmj1G4AvJJlgcIS/DqCqHk9yC/Ad4ABwRVW9eAjrlyTN07xCv6ruBe5t008yzdU3VfVz4JIZ7n8NcM18m5QkLQw/kStJHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqyJyhn+Q1SR5I8q0kjyf5WKufmuT+JDuT3JzkuFZ/dZufaMtXTHqsK1v9iSTnHq6NkiRNb5gj/ReAs6rq7cA7gPOSrAE+CVxXVSuBZ4HL2/jLgWer6i3AdW0cSU4D1gFvA84DPpPkmIXcGEnS7OYM/Rr4WZs9tv0UcBZwa6tvAS5q02vbPG352UnS6jdV1QtV9X1gAli9IFshSRrKUOf0kxyT5BFgD7AN+B7wXFUdaEN2AUvb9FLgaYC2fD/wxsn1ae4zeV0bkmxPsn3v3r3z3yJJ0oyGCv2qerGq3gEsY3B0/tbphrXbzLBspvrUdW2qqlVVtWrJkiXDtCdJGtK8rt6pqueAe4E1wOIki9qiZcDuNr0LWA7Qlr8B2De5Ps19JEkjMMzVO0uSLG7TrwXeDewA7gEubsPWA7e16a1tnrb87qqqVl/Xru45FVgJPLBQGyJJmtuiuYdwMrClXWnzKuCWqro9yXeAm5J8AngYuKGNvwH4QpIJBkf46wCq6vEktwDfAQ4AV1TViwu7OZKk2cwZ+lX1KPDOaepPMs3VN1X1c+CSGR7rGuCa+bcpSVoIfiJXkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1JE5Qz/J8iT3JNmR5PEkH2z1E5JsS7Kz3R7f6klyfZKJJI8mOX3SY61v43cmWX/4NkuSNJ1hjvQPAH9dVW8F1gBXJDkN2AjcVVUrgbvaPMD5wMr2swH4LAxeJICrgDOA1cBVB18oJEmjMWfoV9UzVfXNNv1TYAewFFgLbGnDtgAXtem1wI01cB+wOMnJwLnAtqraV1XPAtuA8xZ0ayRJs5rXOf0kK4B3AvcDJ1XVMzB4YQDe1IYtBZ6edLddrTZTfeo6NiTZnmT73r1759OeJGkOQ4d+ktcBXwY+VFU/mW3oNLWapf7yQtWmqlpVVauWLFkybHuSpCEMFfpJjmUQ+P9SVV9p5R+20za02z2tvgtYPunuy4Dds9QlSSMyzNU7AW4AdlTVpyYt2gocvAJnPXDbpPql7SqeNcD+dvrnTuCcJMe3N3DPaTVJ0ogsGmLMmcD7gW8neaTVPgpcC9yS5HLgB8AlbdkdwAXABPA8cBlAVe1L8nHgwTbu6qratyBbIUkaypyhX1X/xfTn4wHOnmZ8AVfM8Fibgc3zaVCStHD8RK4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR1ZNO4GJGkuKzZ+bdwtjNxT177nsDzunEf6STYn2ZPksUm1E5JsS7Kz3R7f6klyfZKJJI8mOX3Sfda38TuTrD8sWyNJmtUwp3f+CThvSm0jcFdVrQTuavMA5wMr288G4LMweJEArgLOAFYDVx18oZAkjc6coV9V3wD2TSmvBba06S3ARZPqN9bAfcDiJCcD5wLbqmpfVT0LbONXX0gkSYfZK30j96Sqegag3b6p1ZcCT08at6vVZqr/iiQbkmxPsn3v3r2vsD1J0nQW+uqdTFOrWeq/WqzaVFWrqmrVkiVLFrQ5SerdKw39H7bTNrTbPa2+C1g+adwyYPcsdUnSCL3S0N8KHLwCZz1w26T6pe0qnjXA/nb6507gnCTHtzdwz2k1SdIIzXmdfpIvAe8CTkyyi8FVONcCtyS5HPgBcEkbfgdwATABPA9cBlBV+5J8HHiwjbu6qqa+OSxJOszmDP2qet8Mi86eZmwBV8zwOJuBzfPqTpK0oPwaBknqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHRh76Sc5L8kSSiSQbR71+SerZSEM/yTHA3wPnA6cB70ty2ih7kKSejfpIfzUwUVVPVtX/ATcBa0fcgyR1a9GI17cUeHrS/C7gjMkDkmwANrTZnyV54hDWdyLwo0O4/+FiX/NjX/NjX/NzRPaVTx5SX2+eacGoQz/T1OplM1WbgE0LsrJke1WtWojHWkj2NT/2NT/2NT+99TXq0zu7gOWT5pcBu0fcgyR1a9Sh/yCwMsmpSY4D1gFbR9yDJHVrpKd3qupAkr8A7gSOATZX1eOHcZULcproMLCv+bGv+bGv+emqr1TV3KMkSb8W/ESuJHXE0Jekjhz1oT/X1zokeXWSm9vy+5OsOEL6+kCSvUkeaT9/OqK+NifZk+SxGZYnyfWt70eTnH6E9PWuJPsn7a+/GVFfy5Pck2RHkseTfHCaMSPfZ0P2NfJ9luQ1SR5I8q3W18emGTPy5+SQfY3rOXlMkoeT3D7NsoXfV1V11P4weDP4e8BvA8cB3wJOmzLmz4HPtel1wM1HSF8fAP5uDPvsD4DTgcdmWH4B8HUGn6lYA9x/hPT1LuD2Meyvk4HT2/Trgf+e5t9y5PtsyL5Gvs/aPnhdmz4WuB9YM2XMOJ6Tw/Q1rufkXwFfnO7f6nDsq6P9SH+Yr3VYC2xp07cCZyeZ7kNio+5rLKrqG8C+WYasBW6sgfuAxUlOPgL6GouqeqaqvtmmfwrsYPDJ8slGvs+G7Gvk2j74WZs9tv1MvVpk5M/JIfsauSTLgPcAn59hyILvq6M99Kf7Woep//FfGlNVB4D9wBuPgL4A/qidDrg1yfJplo/DsL2Pw++3X8+/nuRto155+9X6nQyOEicb6z6bpS8Ywz5rpyseAfYA26pqxv01wufkMH3B6J+TnwY+DPxihuULvq+O9tCf82sdhhyz0IZZ578BK6rqd4H/5Jev5uM2jv01jG8Cb66qtwN/C/zrKFee5HXAl4EPVdVPpi6e5i4j2Wdz9DWWfVZVL1bVOxh84n51kt+ZMmQs+2uIvkb6nEzyXmBPVT0027Bpaoe0r4720B/max1eGpNkEfAGDv9phDn7qqofV9ULbfYfgd87zD0N64j8qoyq+snBX8+r6g7g2CQnjmLdSY5lEKz/UlVfmWbIWPbZXH2Nc5+1dT4H3AucN2XROJ6Tc/Y1hufkmcCFSZ5icAr4rCT/PGXMgu+roz30h/lah63A+jZ9MXB3tXdFxtnXlHO+FzI4J3sk2Apc2q5IWQPsr6pnxt1Ukt86eC4zyWoG/3d/PIL1BrgB2FFVn5ph2Mj32TB9jWOfJVmSZHGbfi3wbuC7U4aN/Dk5TF+jfk5W1ZVVtayqVjDIiLur6k+mDFvwfTXqb9lcUDXD1zokuRrYXlVbGTwxvpBkgsEr5LojpK+/THIhcKD19YHD3RdAki8xuKrjxCS7gKsYvKlFVX0OuIPB1SgTwPPAZUdIXxcDf5bkAPC/wLoRvHjD4Gjs/cC32/lggI8Cp0zqbRz7bJi+xrHPTga2ZPAHk14F3FJVt4/7OTlkX2N5Tk51uPeVX8MgSR052k/vSJLmwdCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHfl/0vUJy/5QP+kAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Histogram of FLOOR\n",
    "plt.hist(trainingData['FLOOR'], bins=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 242.,  155.,  117.,  116.,  106.,   59.,   42.,   66.,   19.,\n",
       "           0.,   10.,   19.,   39.,   37.,   22.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,  418.,  833.,  805.,  944., 1010.,  636.,\n",
       "         523.,  440.,  522.,  521.,  593.,  426.,  561.,  557.,  539.,\n",
       "         384.,  445.,  414.,  326.,  508.,   96.,  160.,   40.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "           0.,    0.,    0.,    0.,    0.,    0.,    0.,  902.,  604.,\n",
       "         498.,  431.,  371.,  328.,  389.,  411.,  542.,  241.,  294.,\n",
       "         322.,  226.,  217.,  239.,   99.,  220.,  160.,   99.,   75.,\n",
       "          79.,  110.,  140.,  140.,   20.,   30.]),\n",
       " array([  1.        ,   3.05691057,   5.11382114,   7.17073171,\n",
       "          9.22764228,  11.28455285,  13.34146341,  15.39837398,\n",
       "         17.45528455,  19.51219512,  21.56910569,  23.62601626,\n",
       "         25.68292683,  27.7398374 ,  29.79674797,  31.85365854,\n",
       "         33.91056911,  35.96747967,  38.02439024,  40.08130081,\n",
       "         42.13821138,  44.19512195,  46.25203252,  48.30894309,\n",
       "         50.36585366,  52.42276423,  54.4796748 ,  56.53658537,\n",
       "         58.59349593,  60.6504065 ,  62.70731707,  64.76422764,\n",
       "         66.82113821,  68.87804878,  70.93495935,  72.99186992,\n",
       "         75.04878049,  77.10569106,  79.16260163,  81.2195122 ,\n",
       "         83.27642276,  85.33333333,  87.3902439 ,  89.44715447,\n",
       "         91.50406504,  93.56097561,  95.61788618,  97.67479675,\n",
       "         99.73170732, 101.78861789, 103.84552846, 105.90243902,\n",
       "        107.95934959, 110.01626016, 112.07317073, 114.1300813 ,\n",
       "        116.18699187, 118.24390244, 120.30081301, 122.35772358,\n",
       "        124.41463415, 126.47154472, 128.52845528, 130.58536585,\n",
       "        132.64227642, 134.69918699, 136.75609756, 138.81300813,\n",
       "        140.8699187 , 142.92682927, 144.98373984, 147.04065041,\n",
       "        149.09756098, 151.15447154, 153.21138211, 155.26829268,\n",
       "        157.32520325, 159.38211382, 161.43902439, 163.49593496,\n",
       "        165.55284553, 167.6097561 , 169.66666667, 171.72357724,\n",
       "        173.7804878 , 175.83739837, 177.89430894, 179.95121951,\n",
       "        182.00813008, 184.06504065, 186.12195122, 188.17886179,\n",
       "        190.23577236, 192.29268293, 194.3495935 , 196.40650407,\n",
       "        198.46341463, 200.5203252 , 202.57723577, 204.63414634,\n",
       "        206.69105691, 208.74796748, 210.80487805, 212.86178862,\n",
       "        214.91869919, 216.97560976, 219.03252033, 221.08943089,\n",
       "        223.14634146, 225.20325203, 227.2601626 , 229.31707317,\n",
       "        231.37398374, 233.43089431, 235.48780488, 237.54471545,\n",
       "        239.60162602, 241.65853659, 243.71544715, 245.77235772,\n",
       "        247.82926829, 249.88617886, 251.94308943, 254.        ]),\n",
       " <a list of 123 Patch objects>)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAP0ElEQVR4nO3df4ylV13H8ffHlhb52V/bpm43bpENSkyUdVKqGEKoAl2IWxMaUUNXsmb/KQhWIov8UaL/FKNUGkmTlVa3hIBYMN2kKDYFQkxsZVpLf7DWLqW2Q9fuYEshIVgqX/+4Z+2we2d2996Ze3fueb+SyX2e85w7zzn7TD733PP82FQVkqQ+/Ni0GyBJmhxDX5I6YuhLUkcMfUnqiKEvSR05ddoNWMk555xTmzdvnnYzJGldueuuu75VVRuGbTupQ3/z5s3Mz89PuxmStK4k+c/ltjm9I0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SerIMUM/yY1JDiW5f0nZWUluS/JQez2zlSfJdUkOJLk3ydYl79nR6j+UZMfadEeStJLjGen/DfCmI8p2A7dX1Rbg9rYOcCmwpf3sAq6HwYcEcDXwauAi4OrDHxTSWtm8+9b//5E0cMzQr6ovA08eUbwd2NuW9wKXLSm/qQbuAM5Icj7wRuC2qnqyqp4CbuPoDxJJ0hobdU7/vKo6CNBez23lG4HHltRbaGXLlR8lya4k80nmFxcXR2yeJGmY1T6RmyFltUL50YVVe6pqrqrmNmwY+pA4SdKIRg39J9q0De31UCtfADYtqXcB8PgK5ZKkCRo19PcBh6/A2QHcsqT8inYVz8XA02365/PAG5Kc2U7gvqGVSZIm6JjP00/ySeB1wDlJFhhchXMN8OkkO4FHgctb9c8B24ADwPeAdwBU1ZNJ/gT4Sqv3x1V15MlhSdIaO2boV9VvLrPpkiF1C7hymd9zI3DjCbVOkrSqvCNXkjpi6EtSRwx9SeqIoS9JHTH0Jakjx7x6R1pvfMCatDxH+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqSTkqbd9/qjXZrwNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKGvdc0nMUonxtCXpI4Y+pLUEUNfkjoyVugn+f0kDyS5P8knkzw/yYVJ7kzyUJK/TXJaq3t6Wz/Qtm9ejQ5Iko7fyKGfZCPwe8BcVf0scArwNuBDwLVVtQV4CtjZ3rITeKqqXg5c2+pJkibo1FV4/48n+QHwAuAg8Hrgt9r2vcAHgeuB7W0Z4GbgL5OkqmrMNkhewSMdp5FH+lX1TeDPgEcZhP3TwF3At6vq2VZtAdjYljcCj7X3Ptvqn33k702yK8l8kvnFxcVRmydJGmKc6Z0zGYzeLwR+AnghcOmQqodH8llh23MFVXuqaq6q5jZs2DBq8yRJQ4xzIvdXgG9U1WJV/QD4LPBLwBlJDk8bXQA83pYXgE0AbftLgSfH2L8k6QSNE/qPAhcneUGSAJcAXwO+CLy11dkB3NKW97V12vYvOJ8vSZM1zpz+nQxOyN4N3Nd+1x7gfcBVSQ4wmLO/ob3lBuDsVn4VsHuMdkuSRjDW1TtVdTVw9RHFDwMXDan7feDycfYnSRqPd+RKUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9NWFzbtvZfPuW6fdDGnqDH1J6oihL0kdMfQlqSOGviR1ZKzQT3JGkpuT/HuS/Ul+MclZSW5L8lB7PbPVTZLrkhxIcm+SravTBUnS8Rp3pP8R4B+r6qeBnwP2A7uB26tqC3B7Wwe4FNjSfnYB14+5b0nSCTp11DcmeQnwWuB3AKrqGeCZJNuB17Vqe4EvAe8DtgM3VVUBd7RvCedX1cGRWy9p5i291PaRa948xZbMhnFG+i8DFoG/TvJvST6W5IXAeYeDvL2e2+pvBB5b8v6FVvYjkuxKMp9kfnFxcYzmSZKONPJIv713K/CuqrozyUd4bipnmAwpq6MKqvYAewDm5uaO2i5NgqNLzapxRvoLwEJV3dnWb2bwIfBEkvMB2uuhJfU3LXn/BcDjY+xfknSCRg79qvov4LEkr2hFlwBfA/YBO1rZDuCWtrwPuKJdxXMx8LTz+ZI0WeNM7wC8C/hEktOAh4F3MPgg+XSSncCjwOWt7ueAbcAB4HutriRpgsYK/aq6B5gbsumSIXULuHKc/UmSxuMduZLUEUNfkjpi6EvHyWfyaxaMeyJX6o7X8Gs9c6QvSR0x9CWpI07vSGM4PNXjNM/JzSm55zjSl6SOGPqS1BFDX5I64py+ujJsbtdr79UTR/qS1BFDX5I64vSONEFeOqhpc6QvSR0x9CWtGz70bnyGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPrSKvNRATqZ+ZRNdctgVo8c6Utad/w2NTpH+tIxGC6aJY70JakjjvS17jjylkY3dugnOQWYB75ZVW9JciHwKeAs4G7g7VX1TJLTgZuAXwD+G/iNqnpk3P1LJyv/a0SdjFZjeufdwP4l6x8Crq2qLcBTwM5WvhN4qqpeDlzb6knSmvGE79HGCv0kFwBvBj7W1gO8Hri5VdkLXNaWt7d12vZLWn1J0oSMO9L/C+APgR+29bOBb1fVs219AdjYljcCjwG07U+3+j8iya4k80nmFxcXx2yeJGmpkUM/yVuAQ1V119LiIVXrOLY9V1C1p6rmqmpuw4YNozZPkjTEOCdyXwP8WpJtwPOBlzAY+Z+R5NQ2mr8AeLzVXwA2AQtJTgVeCjw5xv4l6SjO4a9s5NCvqvcD7wdI8jrgvVX120n+Dngrgyt4dgC3tLfsa+v/0rZ/oaqOGulL65FBo/ViLW7Oeh9wVZIDDObsb2jlNwBnt/KrgN1rsG9J0gpW5easqvoS8KW2/DBw0ZA63wcuX439SZJG4x25ktYtb4A7cT57R5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRb86SJsBn86w9/42PjyN9Sd3r6X/YMvQlqSOGviR1xNCXpI4Y+pLUEUNfkjriJZuSutTL1TpHcqQvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdmek7cg/fcffINW+ecksknSx6vRP3sJkOfUka19IPiVkYQDq9I0kdcaQvSc2sjeqHcaQvSR1xpC9JQ6x0wnc9fyMYeaSfZFOSLybZn+SBJO9u5WcluS3JQ+31zFaeJNclOZDk3iRbV6sTkqTjM870zrPAH1TVzwAXA1cmeSWwG7i9qrYAt7d1gEuBLe1nF3D9GPuWJI1g5NCvqoNVdXdb/i6wH9gIbAf2tmp7gcva8nbgphq4Azgjyfkjt1ySdMJW5URuks3Aq4A7gfOq6iAMPhiAc1u1jcBjS9620MqO/F27kswnmV9cXFyN5kmSmrFDP8mLgM8A76mq76xUdUhZHVVQtaeq5qpqbsOGDeM2T5K0xFihn+R5DAL/E1X12Vb8xOFpm/Z6qJUvAJuWvP0C4PFx9i9JOjHjXL0T4AZgf1V9eMmmfcCOtrwDuGVJ+RXtKp6LgacPTwNJkiZjnOv0XwO8HbgvyT2t7I+Aa4BPJ9kJPApc3rZ9DtgGHAC+B7xjjH1LkkYwcuhX1T8zfJ4e4JIh9Qu4ctT9SZLG52MYJKkjhr4kdcRn70hTtp6f46L19581dTHS37z71u7/txxJgk5CX5I0YOhLUkec05ekCRo21TzJ8wGO9CWpI4a+JHXE0Jekjhj6ktSRrk7kTvsEiiRNW1ehL0nTcrLcINp96HsLvKSeOKcvSR3pfqQvTcvJ8nVfx2+lY7ZeZg0c6UtSRwx9SeqIoS9JHXFOX5JW2cl8vsaRviR1xNA/Bv/XLUmzxNCXpI4Y+ks4qpc06wx9SeqIoS9JHfGSzSGc4pE0qwz9VeYz+zWOw38//s1orTi9I0kdcaQvSSeJSTyp09CfgPXyyFVJs8/QP07HCm5P/koa1STzY+Jz+knelOTBJAeS7J70/iWpZxMd6Sc5Bfgo8KvAAvCVJPuq6muTbMdqcXQvab2Z9Ej/IuBAVT1cVc8AnwK2T7gNktStVNXkdpa8FXhTVf1uW3878OqqeueSOruAXW31FcCDI+zqHOBbYzZ3Pemtv9Bfn+3vbFvt/v5kVW0YtmHSJ3IzpOxHPnWqag+wZ6ydJPNVNTfO71hPeusv9Ndn+zvbJtnfSU/vLACblqxfADw+4TZIUrcmHfpfAbYkuTDJacDbgH0TboMkdWui0ztV9WySdwKfB04BbqyqB9ZgV2NND61DvfUX+uuz/Z1tE+vvRE/kSpKmyweuSVJHDH1J6sjMhX4Pj3lI8kiS+5Lck2S+lZ2V5LYkD7XXM6fdzlEluTHJoST3Lykb2r8MXNeO971Jtk6v5aNZpr8fTPLNdozvSbJtybb3t/4+mOSN02n16JJsSvLFJPuTPJDk3a18Jo/xCv2dzjGuqpn5YXBy+OvAy4DTgK8Cr5x2u9agn48A5xxR9qfA7ra8G/jQtNs5Rv9eC2wF7j9W/4BtwD8wuAfkYuDOabd/lfr7QeC9Q+q+sv1dnw5c2P7eT5l2H06wv+cDW9vyi4H/aP2ayWO8Qn+ncoxnbaTf82MetgN72/Je4LIptmUsVfVl4Mkjipfr33bgphq4AzgjyfmTaenqWKa/y9kOfKqq/qeqvgEcYPB3v25U1cGqurstfxfYD2xkRo/xCv1dzpoe41kL/Y3AY0vWF1j5H3e9KuCfktzVHlsBcF5VHYTBHxlw7tRatzaW698sH/N3tumMG5dM181Uf5NsBl4F3EkHx/iI/sIUjvGshf4xH/MwI15TVVuBS4Erk7x22g2aolk95tcDPwX8PHAQ+PNWPjP9TfIi4DPAe6rqOytVHVK27vo8pL9TOcazFvpdPOahqh5vr4eAv2fw1e+Jw1952+uh6bVwTSzXv5k85lX1RFX9b1X9EPgrnvt6PxP9TfI8BgH4iar6bCue2WM8rL/TOsazFvoz/5iHJC9M8uLDy8AbgPsZ9HNHq7YDuGU6LVwzy/VvH3BFu8LjYuDpw1ME69kRc9a/zuAYw6C/b0tyepILgS3Av066feNIEuAGYH9VfXjJppk8xsv1d2rHeNpnttfgTPk2BmfHvw58YNrtWYP+vYzBmf2vAg8c7iNwNnA78FB7PWvabR2jj59k8HX3BwxGPTuX6x+Dr8Ifbcf7PmBu2u1fpf5+vPXn3hYC5y+p/4HW3weBS6fd/hH6+8sMpivuBe5pP9tm9Riv0N+pHGMfwyBJHZm16R1J0goMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktSR/wOMUfC6pnw6yAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Histogram of SPACEID\n",
    "plt.hist(trainingData['SPACEID'], bins=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "BuildingID = pd.DataFrame(trainingData.groupby(['BUILDINGID', 'FLOOR', 'SPACEID'])['SPACEID'].count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>SPACEID</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"10\" valign=\"top\">0</th>\n",
       "      <th rowspan=\"10\" valign=\"top\">0</th>\n",
       "      <th>102</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          SPACEID\n",
       "BUILDINGID FLOOR SPACEID         \n",
       "0          0     102           20\n",
       "                 106           10\n",
       "                 107           10\n",
       "                 110           10\n",
       "                 111           20\n",
       "                 112           20\n",
       "                 113           20\n",
       "                 114           19\n",
       "                 115           16\n",
       "                 116           13"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BuildingID.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: openpyxl in ./opt/anaconda3/lib/python3.7/site-packages (3.0.3)\n",
      "Requirement already satisfied: jdcal in ./opt/anaconda3/lib/python3.7/site-packages (from openpyxl) (1.4.1)\n",
      "Requirement already satisfied: et-xmlfile in ./opt/anaconda3/lib/python3.7/site-packages (from openpyxl) (1.0.1)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install openpyxl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Export to Excel Show Duplicative SpaceIDs by building and floors\n",
    "BuildingID.to_excel(r'/Users/JasonRodriguez/Documents/UT-Data-Analytics-Program/BuildingID.xlsx')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create unique ID for predicting specific campus location, the dep var\n",
    "trainingData['location'] = trainingData['BUILDINGID'].astype(str) + '' + trainingData['FLOOR'].astype(str) + '' + trainingData['SPACEID'].astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>106</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>106</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>102</td>\n",
       "      <td>12102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>122</td>\n",
       "      <td>00122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>105</td>\n",
       "      <td>12105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>101</td>\n",
       "      <td>12101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>112</td>\n",
       "      <td>12112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>104</td>\n",
       "      <td>12104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>104</td>\n",
       "      <td>12104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>110</td>\n",
       "      <td>12110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>108</td>\n",
       "      <td>12108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>109</td>\n",
       "      <td>12109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>111</td>\n",
       "      <td>12111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>107</td>\n",
       "      <td>12107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>1215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>29</td>\n",
       "      <td>1229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>117</td>\n",
       "      <td>12117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    BUILDINGID  FLOOR  SPACEID location\n",
       "0            1      2      106    12106\n",
       "1            1      2      106    12106\n",
       "2            1      2      103    12103\n",
       "3            1      2      102    12102\n",
       "4            0      0      122    00122\n",
       "5            1      2      105    12105\n",
       "6            1      2      103    12103\n",
       "7            1      2      101    12101\n",
       "8            1      2      112    12112\n",
       "9            1      2      103    12103\n",
       "10           1      2      104    12104\n",
       "11           1      2      104    12104\n",
       "12           1      2      110    12110\n",
       "13           1      2      108    12108\n",
       "14           1      2      109    12109\n",
       "15           1      2      111    12111\n",
       "16           1      2      107    12107\n",
       "17           1      2       15     1215\n",
       "18           1      2       29     1229\n",
       "19           1      2      117    12117"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Validate head to ensure CONCATENATED Correctly\n",
    "trainingData[['BUILDINGID', 'FLOOR', 'SPACEID', 'location']].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "735"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trainingData['location'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Note/Observation: there are 735 different classes or rooms locations, to predict. The WiFi Access Point will serve as the independent variables during algorithm training"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Feature Selection & Sampling"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Dataset 1: Out-Of-Box (oob)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "735"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "oob = trainingData.drop(trainingData.columns.to_series()['LONGITUDE':'TIMESTAMP'], axis=1)\n",
    "oob['location'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Data Type of DV is object\n",
    "oob['location'].dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00122</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 521 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "0     100     100     100     100     100     100     100     100     100   \n",
       "1     100     100     100     100     100     100     100     100     100   \n",
       "2     100     100     100     100     100     100     100     -97     100   \n",
       "3     100     100     100     100     100     100     100     100     100   \n",
       "4     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "   WAP010  ...  WAP512  WAP513  WAP514  WAP515  WAP516  WAP517  WAP518  \\\n",
       "0     100  ...     100     100     100     100     100     100     100   \n",
       "1     100  ...     100     100     100     100     100     100     100   \n",
       "2     100  ...     100     100     100     100     100     100     100   \n",
       "3     100  ...     100     100     100     100     100     100     100   \n",
       "4     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "   WAP519  WAP520  location  \n",
       "0     100     100     12106  \n",
       "1     100     100     12106  \n",
       "2     100     100     12103  \n",
       "3     100     100     12102  \n",
       "4     100     100     00122  \n",
       "\n",
       "[5 rows x 521 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "oob.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Sampling\n",
    "\n",
    "##### Sample by building to see if metrics can be improved versus full oob dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "#BuildingID 0 only\n",
    "Building0 = trainingData[trainingData['BUILDINGID']==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7119</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7120</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7121</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7122</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18492</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>03228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18493</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-75</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>03236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18494</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-88</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>03235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18496</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-66</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>03230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18497</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-70</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>03229</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5249 rows × 521 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "4         100     100     100     100     100     100     100     100     100   \n",
       "7119      100     100     100     100     100     100     100     100     100   \n",
       "7120      100     100     100     100     100     100     100     100     100   \n",
       "7121      100     100     100     100     100     100     100     100     100   \n",
       "7122      100     100     100     100     100     100     100     100     100   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "18492     100     100     100     100     100     100     100     100     100   \n",
       "18493     100     100     100     100     100     100     100     100     -75   \n",
       "18494     100     100     100     100     100     100     100     100     -88   \n",
       "18496     100     100     100     100     100     100     100     100     -66   \n",
       "18497     100     100     100     100     100     100     100     100     -70   \n",
       "\n",
       "       WAP010  ...  WAP512  WAP513  WAP514  WAP515  WAP516  WAP517  WAP518  \\\n",
       "4         100  ...     100     100     100     100     100     100     100   \n",
       "7119      100  ...     100     100     100     100     100     100     100   \n",
       "7120      100  ...     100     100     100     100     100     100     100   \n",
       "7121      100  ...     100     100     100     100     100     100     100   \n",
       "7122      100  ...     100     100     100     100     100     100     100   \n",
       "...       ...  ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "18492     100  ...     100     100     100     100     100     100     100   \n",
       "18493     100  ...     100     100     100     100     100     100     100   \n",
       "18494     100  ...     100     100     100     100     100     100     100   \n",
       "18496     100  ...     100     100     100     100     100     100     100   \n",
       "18497     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP519  WAP520  location  \n",
       "4         100     100     00122  \n",
       "7119      100     100     00102  \n",
       "7120      100     100     00110  \n",
       "7121      100     100     00111  \n",
       "7122      100     100     00107  \n",
       "...       ...     ...       ...  \n",
       "18492     100     100     03228  \n",
       "18493     100     100     03236  \n",
       "18494     100     100     03235  \n",
       "18496     100     100     03230  \n",
       "18497     100     100     03229  \n",
       "\n",
       "[5249 rows x 521 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Remove Non-Wap Columns\n",
    "Building0 = Building0.drop(Building0.columns.to_series()['LONGITUDE':'TIMESTAMP'], axis=1)\n",
    "Building0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "256"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building0['location'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 5249 entries, 4 to 18497\n",
      "Columns: 521 entries, WAP001 to location\n",
      "dtypes: int64(520), object(1)\n",
      "memory usage: 20.9+ MB\n"
     ]
    }
   ],
   "source": [
    "Building0.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Observations\n",
    "###### 1. There are variables w/ only a single value of 100, aka zero variance variables. The data description tells us a value of 100 indicates NO wifi signal detention, therefore, columns with a single observation or value (100 = no signal detection) are most likely useless for modeling\n",
    "###### 2. Direction is to remove zero variance variables from the sampled datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove Zero Variance Cols in Building 0 dataset\n",
    "nunique = Building0.apply(pd.Series.nunique)\n",
    "cols_to_drop = nunique[nunique == 1].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "Building0 = Building0.drop(cols_to_drop, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 5249 entries, 4 to 18497\n",
      "Columns: 201 entries, WAP001 to location\n",
      "dtypes: int64(200), object(1)\n",
      "memory usage: 8.1+ MB\n"
     ]
    }
   ],
   "source": [
    "Building0.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP013</th>\n",
       "      <th>WAP014</th>\n",
       "      <th>WAP017</th>\n",
       "      <th>WAP018</th>\n",
       "      <th>WAP019</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP447</th>\n",
       "      <th>WAP452</th>\n",
       "      <th>WAP459</th>\n",
       "      <th>WAP475</th>\n",
       "      <th>WAP494</th>\n",
       "      <th>WAP500</th>\n",
       "      <th>WAP508</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7119</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-80</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7120</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7121</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>-86</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7122</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>00107</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 201 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      WAP001  WAP002  WAP007  WAP008  WAP009  WAP013  WAP014  WAP017  WAP018  \\\n",
       "4        100     100     100     100     100     100     100     100     100   \n",
       "7119     100     100     100     100     100     100     100     100     100   \n",
       "7120     100     100     100     100     100     100     100     100     100   \n",
       "7121     100     100     100     100     100     100     100     100     100   \n",
       "7122     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "      WAP019  ...  WAP447  WAP452  WAP459  WAP475  WAP494  WAP500  WAP508  \\\n",
       "4        100  ...     100     100     100     100     100     100     100   \n",
       "7119     -80  ...     100     100     100     100     100     100     100   \n",
       "7120     100  ...     100     100     100     100     100     100     100   \n",
       "7121     100  ...     100     -86     100     100     100     100     100   \n",
       "7122     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "      WAP515  WAP519  location  \n",
       "4        100     100     00122  \n",
       "7119     100     100     00102  \n",
       "7120     100     100     00110  \n",
       "7121     100     100     00111  \n",
       "7122     100     100     00107  \n",
       "\n",
       "[5 rows x 201 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building0.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Notes: Building 0 has 5249 row observations with 200 WAPs columns (Independent Vars) and 1 Location Column (Dep Var)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataset for Building 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Building 1 Only\n",
    "Building1 = trainingData[trainingData['BUILDINGID']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7541.264300</td>\n",
       "      <td>4.864921e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713733</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7536.621200</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>106</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713691</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7519.152400</td>\n",
       "      <td>4.864950e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714095</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7524.570400</td>\n",
       "      <td>4.864934e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>102</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713807</td>\n",
       "      <td>12102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7533.896200</td>\n",
       "      <td>4.864939e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713841</td>\n",
       "      <td>12105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7519.152400</td>\n",
       "      <td>4.864950e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713883</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7527.451100</td>\n",
       "      <td>4.864929e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>101</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371713775</td>\n",
       "      <td>12101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7559.497300</td>\n",
       "      <td>4.864888e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>112</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714307</td>\n",
       "      <td>12112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7510.437173</td>\n",
       "      <td>4.864949e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>103</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714128</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-83</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7528.816402</td>\n",
       "      <td>4.864959e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>104</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714200</td>\n",
       "      <td>12104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-90</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7523.628200</td>\n",
       "      <td>4.864952e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>104</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714166</td>\n",
       "      <td>12104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7571.093400</td>\n",
       "      <td>4.864872e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714393</td>\n",
       "      <td>12110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7559.782000</td>\n",
       "      <td>4.864871e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>108</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714467</td>\n",
       "      <td>12108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7562.186200</td>\n",
       "      <td>4.864867e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>109</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714433</td>\n",
       "      <td>12109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7564.196300</td>\n",
       "      <td>4.864887e+06</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>111</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371714355</td>\n",
       "      <td>12111</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15 rows × 530 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "0      100     100     100     100     100     100     100     100     100   \n",
       "1      100     100     100     100     100     100     100     100     100   \n",
       "2      100     100     100     100     100     100     100     -97     100   \n",
       "3      100     100     100     100     100     100     100     100     100   \n",
       "5      100     100     100     100     100     100     100     100     100   \n",
       "6      100     100     100     100     100     100     100     100     100   \n",
       "7      100     100     100     100     100     100     100     100     100   \n",
       "8      100     100     100     100     100     100     100     100     100   \n",
       "9      100     100     100     100     100     100     100     100     100   \n",
       "10     100     100     100     100     100     100     100     -83     100   \n",
       "11     100     100     100     100     100     100     100     -90     100   \n",
       "12     100     100     100     100     100     100     100     100     100   \n",
       "13     100     100     100     100     100     100     100     100     100   \n",
       "14     100     100     100     100     100     100     100     100     100   \n",
       "15     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "    WAP010  ...    LONGITUDE      LATITUDE  FLOOR  BUILDINGID  SPACEID  \\\n",
       "0      100  ... -7541.264300  4.864921e+06      2           1      106   \n",
       "1      100  ... -7536.621200  4.864934e+06      2           1      106   \n",
       "2      100  ... -7519.152400  4.864950e+06      2           1      103   \n",
       "3      100  ... -7524.570400  4.864934e+06      2           1      102   \n",
       "5      100  ... -7533.896200  4.864939e+06      2           1      105   \n",
       "6      100  ... -7519.152400  4.864950e+06      2           1      103   \n",
       "7      100  ... -7527.451100  4.864929e+06      2           1      101   \n",
       "8      100  ... -7559.497300  4.864888e+06      2           1      112   \n",
       "9      100  ... -7510.437173  4.864949e+06      2           1      103   \n",
       "10     100  ... -7528.816402  4.864959e+06      2           1      104   \n",
       "11     100  ... -7523.628200  4.864952e+06      2           1      104   \n",
       "12     100  ... -7571.093400  4.864872e+06      2           1      110   \n",
       "13     100  ... -7559.782000  4.864871e+06      2           1      108   \n",
       "14     100  ... -7562.186200  4.864867e+06      2           1      109   \n",
       "15     100  ... -7564.196300  4.864887e+06      2           1      111   \n",
       "\n",
       "    RELATIVEPOSITION  USERID  PHONEID   TIMESTAMP  location  \n",
       "0                  2       2       23  1371713733     12106  \n",
       "1                  2       2       23  1371713691     12106  \n",
       "2                  2       2       23  1371714095     12103  \n",
       "3                  2       2       23  1371713807     12102  \n",
       "5                  2       2       23  1371713841     12105  \n",
       "6                  2       2       23  1371713883     12103  \n",
       "7                  2       2       23  1371713775     12101  \n",
       "8                  2       2       23  1371714307     12112  \n",
       "9                  1       2       23  1371714128     12103  \n",
       "10                 1       2       23  1371714200     12104  \n",
       "11                 2       2       23  1371714166     12104  \n",
       "12                 2       2       23  1371714393     12110  \n",
       "13                 2       2       23  1371714467     12108  \n",
       "14                 2       2       23  1371714433     12109  \n",
       "15                 2       2       23  1371714355     12111  \n",
       "\n",
       "[15 rows x 530 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building1.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19930</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19932</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19934</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>1313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19935</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>13113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19936</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>13112</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5196 rows × 521 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "0         100     100     100     100     100     100     100     100     100   \n",
       "1         100     100     100     100     100     100     100     100     100   \n",
       "2         100     100     100     100     100     100     100     -97     100   \n",
       "3         100     100     100     100     100     100     100     100     100   \n",
       "5         100     100     100     100     100     100     100     100     100   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "19930     100     100     100     100     100     100     100     100     100   \n",
       "19932     100     100     100     100     100     100     100     100     100   \n",
       "19934     100     100     100     100     100     100     100     100     100   \n",
       "19935     100     100     100     100     100     100     100     100     100   \n",
       "19936     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP010  ...  WAP512  WAP513  WAP514  WAP515  WAP516  WAP517  WAP518  \\\n",
       "0         100  ...     100     100     100     100     100     100     100   \n",
       "1         100  ...     100     100     100     100     100     100     100   \n",
       "2         100  ...     100     100     100     100     100     100     100   \n",
       "3         100  ...     100     100     100     100     100     100     100   \n",
       "5         100  ...     100     100     100     100     100     100     100   \n",
       "...       ...  ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "19930     100  ...     100     100     100     100     100     100     100   \n",
       "19932     100  ...     100     100     100     100     100     100     100   \n",
       "19934     100  ...     100     100     100     100     100     100     100   \n",
       "19935     100  ...     100     100     100     100     100     100     100   \n",
       "19936     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP519  WAP520  location  \n",
       "0         100     100     12106  \n",
       "1         100     100     12106  \n",
       "2         100     100     12103  \n",
       "3         100     100     12102  \n",
       "5         100     100     12105  \n",
       "...       ...     ...       ...  \n",
       "19930     100     100       134  \n",
       "19932     100     100       131  \n",
       "19934     100     100      1313  \n",
       "19935     100     100     13113  \n",
       "19936     100     100     13112  \n",
       "\n",
       "[5196 rows x 521 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Remove Unnecessary Columns\n",
    "Building1 = Building1.drop(Building1.columns.to_series()['LONGITUDE':'TIMESTAMP'], axis=1)\n",
    "Building1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "162"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building1['location'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove Zero Variance Columns in Building 1 dataset\n",
    "nunique = Building1.apply(pd.Series.nunique)\n",
    "cols_to_drop = nunique[nunique==1].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "Building1 = Building1.drop(cols_to_drop, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 5196 entries, 0 to 19936\n",
      "Columns: 208 entries, WAP006 to location\n",
      "dtypes: int64(207), object(1)\n",
      "memory usage: 8.3+ MB\n"
     ]
    }
   ],
   "source": [
    "Building1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>WAP011</th>\n",
       "      <th>WAP012</th>\n",
       "      <th>WAP015</th>\n",
       "      <th>WAP016</th>\n",
       "      <th>WAP017</th>\n",
       "      <th>WAP021</th>\n",
       "      <th>WAP022</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP446</th>\n",
       "      <th>WAP449</th>\n",
       "      <th>WAP454</th>\n",
       "      <th>WAP468</th>\n",
       "      <th>WAP470</th>\n",
       "      <th>WAP478</th>\n",
       "      <th>WAP489</th>\n",
       "      <th>WAP490</th>\n",
       "      <th>WAP503</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>12105</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 208 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   WAP006  WAP008  WAP010  WAP011  WAP012  WAP015  WAP016  WAP017  WAP021  \\\n",
       "0     100     100     100     100     100     100     100     100     100   \n",
       "1     100     100     100     100     100     100     100     100     100   \n",
       "2     100     -97     100     100     100     100     100     100     100   \n",
       "3     100     100     100     100     100     100     100     100     100   \n",
       "5     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "   WAP022  ...  WAP446  WAP449  WAP454  WAP468  WAP470  WAP478  WAP489  \\\n",
       "0     100  ...     100     100     100     100     100     100     100   \n",
       "1     100  ...     100     100     100     100     100     100     100   \n",
       "2     100  ...     100     100     100     100     100     100     100   \n",
       "3     100  ...     100     100     100     100     100     100     100   \n",
       "5     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "   WAP490  WAP503  location  \n",
       "0     100     100     12106  \n",
       "1     100     100     12106  \n",
       "2     100     100     12103  \n",
       "3     100     100     12102  \n",
       "5     100     100     12105  \n",
       "\n",
       "[5 rows x 208 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Notes: Building 1 dataset has 5196 rows/observations with 207 WAPS columns (independent vars) with 1 location column (dep var)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataset: Building 2 Only"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Building 2\n",
    "Building2=trainingData[trainingData['BUILDINGID']==2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>FLOOR</th>\n",
       "      <th>BUILDINGID</th>\n",
       "      <th>SPACEID</th>\n",
       "      <th>RELATIVEPOSITION</th>\n",
       "      <th>USERID</th>\n",
       "      <th>PHONEID</th>\n",
       "      <th>TIMESTAMP</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7331.748000</td>\n",
       "      <td>4.864767e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>247</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716690</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7331.400500</td>\n",
       "      <td>4.864768e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>248</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716637</td>\n",
       "      <td>23248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7327.492165</td>\n",
       "      <td>4.864767e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>247</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716719</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7336.700400</td>\n",
       "      <td>4.864764e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>246</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716762</td>\n",
       "      <td>23246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7337.394800</td>\n",
       "      <td>4.864763e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>245</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716797</td>\n",
       "      <td>23245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7340.524600</td>\n",
       "      <td>4.864758e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>244</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716826</td>\n",
       "      <td>23244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7341.215000</td>\n",
       "      <td>4.864756e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>243</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716857</td>\n",
       "      <td>23243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7339.153887</td>\n",
       "      <td>4.864749e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>242</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716935</td>\n",
       "      <td>23242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7337.232139</td>\n",
       "      <td>4.864753e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>243</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371716982</td>\n",
       "      <td>23243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>-7344.968400</td>\n",
       "      <td>4.864750e+06</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>241</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>1371717041</td>\n",
       "      <td>23241</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 530 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "46     100     100     100     100     100     100     100     100     100   \n",
       "47     100     100     100     100     100     100     100     100     100   \n",
       "49     100     100     100     100     100     100     100     100     100   \n",
       "50     100     100     100     100     100     100     100     100     100   \n",
       "51     100     100     100     100     100     100     100     100     100   \n",
       "52     100     100     100     100     100     100     100     100     100   \n",
       "53     100     100     100     100     100     100     100     100     100   \n",
       "54     100     100     100     100     100     100     100     100     100   \n",
       "55     100     100     100     100     100     100     100     100     100   \n",
       "56     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "    WAP010  ...    LONGITUDE      LATITUDE  FLOOR  BUILDINGID  SPACEID  \\\n",
       "46     100  ... -7331.748000  4.864767e+06      3           2      247   \n",
       "47     100  ... -7331.400500  4.864768e+06      3           2      248   \n",
       "49     100  ... -7327.492165  4.864767e+06      3           2      247   \n",
       "50     100  ... -7336.700400  4.864764e+06      3           2      246   \n",
       "51     100  ... -7337.394800  4.864763e+06      3           2      245   \n",
       "52     100  ... -7340.524600  4.864758e+06      3           2      244   \n",
       "53     100  ... -7341.215000  4.864756e+06      3           2      243   \n",
       "54     100  ... -7339.153887  4.864749e+06      3           2      242   \n",
       "55     100  ... -7337.232139  4.864753e+06      3           2      243   \n",
       "56     100  ... -7344.968400  4.864750e+06      3           2      241   \n",
       "\n",
       "    RELATIVEPOSITION  USERID  PHONEID   TIMESTAMP  location  \n",
       "46                 2       2       23  1371716690     23247  \n",
       "47                 2       2       23  1371716637     23248  \n",
       "49                 1       2       23  1371716719     23247  \n",
       "50                 2       2       23  1371716762     23246  \n",
       "51                 2       2       23  1371716797     23245  \n",
       "52                 2       2       23  1371716826     23244  \n",
       "53                 2       2       23  1371716857     23243  \n",
       "54                 1       2       23  1371716935     23242  \n",
       "55                 1       2       23  1371716982     23243  \n",
       "56                 2       2       23  1371717041     23241  \n",
       "\n",
       "[10 rows x 530 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building2.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>WAP520</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-93</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-89</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>23248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-91</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-90</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>23246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-92</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>23245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19926</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-87</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>21206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19927</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-84</td>\n",
       "      <td>-77</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>21141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19928</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-90</td>\n",
       "      <td>-87</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>21207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19931</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-91</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>21140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19933</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>21140</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9492 rows × 521 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "46        100     100     100     100     100     100     100     100     100   \n",
       "47        100     100     100     100     100     100     100     100     100   \n",
       "49        100     100     100     100     100     100     100     100     100   \n",
       "50        100     100     100     100     100     100     100     100     100   \n",
       "51        100     100     100     100     100     100     100     100     100   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "19926     100     100     100     100     100     100     100     100     100   \n",
       "19927     100     100     100     100     100     100     100     100     100   \n",
       "19928     100     100     100     100     100     100     100     100     100   \n",
       "19931     100     100     100     100     100     100     100     100     100   \n",
       "19933     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP010  ...  WAP512  WAP513  WAP514  WAP515  WAP516  WAP517  WAP518  \\\n",
       "46        100  ...     100     100     100     100     100     -93     100   \n",
       "47        100  ...     100     100     100     100     100     -89     100   \n",
       "49        100  ...     100     100     100     100     100     100     -91   \n",
       "50        100  ...     100     100     100     100     100     -90     100   \n",
       "51        100  ...     100     100     100     100     100     -92     100   \n",
       "...       ...  ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "19926     100  ...     100     100     100     100     100     -87     100   \n",
       "19927     100  ...     100     100     100     100     -84     -77     100   \n",
       "19928     100  ...     100     100     100     100     -90     -87     100   \n",
       "19931     100  ...     100     100     100     100     100     -91     100   \n",
       "19933     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP519  WAP520  location  \n",
       "46        100     100     23247  \n",
       "47        100     100     23248  \n",
       "49        100     100     23247  \n",
       "50        100     100     23246  \n",
       "51        100     100     23245  \n",
       "...       ...     ...       ...  \n",
       "19926     100     100     21206  \n",
       "19927     100     100     21141  \n",
       "19928     100     100     21207  \n",
       "19931     100     100     21140  \n",
       "19933     100     100     21140  \n",
       "\n",
       "[9492 rows x 521 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Remove Unnecessary Columns\n",
    "Building2 = Building2.drop(Building2.columns.to_series()['LONGITUDE':'TIMESTAMP'], axis=1)\n",
    "Building2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "317"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building2['location'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove zero variance columns in building 2 dataset\n",
    "nunique = Building2.apply(pd.Series.nunique)\n",
    "cols_to_drop = nunique[nunique == 1].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "Building2 = Building2.drop(cols_to_drop, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 9492 entries, 46 to 19933\n",
      "Columns: 204 entries, WAP005 to location\n",
      "dtypes: int64(203), object(1)\n",
      "memory usage: 14.8+ MB\n"
     ]
    }
   ],
   "source": [
    "Building2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP011</th>\n",
       "      <th>WAP012</th>\n",
       "      <th>WAP018</th>\n",
       "      <th>WAP059</th>\n",
       "      <th>WAP060</th>\n",
       "      <th>WAP061</th>\n",
       "      <th>WAP062</th>\n",
       "      <th>WAP063</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP509</th>\n",
       "      <th>WAP510</th>\n",
       "      <th>WAP511</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>-85</td>\n",
       "      <td>-90</td>\n",
       "      <td>-80</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-93</td>\n",
       "      <td>100</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-84</td>\n",
       "      <td>-84</td>\n",
       "      <td>-83</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-89</td>\n",
       "      <td>100</td>\n",
       "      <td>23248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-89</td>\n",
       "      <td>-90</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-91</td>\n",
       "      <td>23247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-97</td>\n",
       "      <td>100</td>\n",
       "      <td>-74</td>\n",
       "      <td>-72</td>\n",
       "      <td>-75</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-90</td>\n",
       "      <td>100</td>\n",
       "      <td>23246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-58</td>\n",
       "      <td>-58</td>\n",
       "      <td>-70</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-92</td>\n",
       "      <td>100</td>\n",
       "      <td>23245</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 204 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    WAP005  WAP006  WAP011  WAP012  WAP018  WAP059  WAP060  WAP061  WAP062  \\\n",
       "46     100     100     100     100     100     -97     100     -85     -90   \n",
       "47     100     100     100     100     100     100     100     -84     -84   \n",
       "49     100     100     100     100     100     100     100     -89     -90   \n",
       "50     100     100     100     100     100     -97     100     -74     -72   \n",
       "51     100     100     100     100     100     100     100     -58     -58   \n",
       "\n",
       "    WAP063  ...  WAP509  WAP510  WAP511  WAP512  WAP513  WAP514  WAP516  \\\n",
       "46     -80  ...     100     100     100     100     100     100     100   \n",
       "47     -83  ...     100     100     100     100     100     100     100   \n",
       "49     100  ...     100     100     100     100     100     100     100   \n",
       "50     -75  ...     100     100     100     100     100     100     100   \n",
       "51     -70  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "    WAP517  WAP518  location  \n",
       "46     -93     100     23247  \n",
       "47     -89     100     23248  \n",
       "49     100     -91     23247  \n",
       "50     -90     100     23246  \n",
       "51     -92     100     23245  \n",
       "\n",
       "[5 rows x 204 columns]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Building2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Notes: Building 2 dataset has 9492 observations w/ 203 WAP cols (indep var) and 1 location col (dep var)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Move Dependent Variable 'location' to front for easy x and y identification\n",
    "oob = oob[['location'] + [col for col in oob.columns if col != 'location']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Move Dependent Variable 'location' to front for easy x and y identification\n",
    "Building0 = Building0[['location'] + [col for col in Building0.columns if col != 'location']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Move Dependent Variable 'location' to front for easy x and y identification\n",
    "Building1 = Building1[['location'] + [col for col in Building1.columns if col != 'location']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Move Dependent Variable 'location' to front for easy x and y identification\n",
    "Building2 = Building2[['location'] + [col for col in Building2.columns if col != 'location']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***\n",
    "## Modeling\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Modeling OOB\n",
    "Try 4 non-linear based algorithms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Features\n",
    "X = oob.iloc[:,1:]\n",
    "\n",
    "#Target Var\n",
    "y = oob['location']\n",
    "\n",
    "#Train Test Split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP003</th>\n",
       "      <th>WAP004</th>\n",
       "      <th>WAP005</th>\n",
       "      <th>WAP006</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP010</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP511</th>\n",
       "      <th>WAP512</th>\n",
       "      <th>WAP513</th>\n",
       "      <th>WAP514</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP516</th>\n",
       "      <th>WAP517</th>\n",
       "      <th>WAP518</th>\n",
       "      <th>WAP519</th>\n",
       "      <th>WAP520</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7135</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10479</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15179</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4673</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2464</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-92</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 520 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP003  WAP004  WAP005  WAP006  WAP007  WAP008  WAP009  \\\n",
       "7135      100     100     100     100     100     100     100     100     100   \n",
       "10479     100     100     100     100     100     100     100     100     100   \n",
       "15179     100     100     100     100     100     100     100     100     100   \n",
       "4673      100     100     100     100     100     100     100     100     100   \n",
       "2464      100     100     100     100     -92     100     100     100     100   \n",
       "\n",
       "       WAP010  ...  WAP511  WAP512  WAP513  WAP514  WAP515  WAP516  WAP517  \\\n",
       "7135      100  ...     100     100     100     100     100     100     100   \n",
       "10479     100  ...     100     100     100     100     100     100     100   \n",
       "15179     100  ...     100     100     100     100     100     100     100   \n",
       "4673      100  ...     100     100     100     100     100     100     100   \n",
       "2464      100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP518  WAP519  WAP520  \n",
       "7135      100     100     100  \n",
       "10479     100     100     100  \n",
       "15179     100     100     100  \n",
       "4673      100     100     100  \n",
       "2464      100     100     100  \n",
       "\n",
       "[5 rows x 520 columns]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7135     00123\n",
       "10479    03127\n",
       "15179    10225\n",
       "4673     20122\n",
       "2464     24141\n",
       "Name: location, dtype: object"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Prepeare Model\n",
    "algos_Class = []\n",
    "algos_Class.append(('Decision Tree', DecisionTreeClassifier(criterion='entropy')))\n",
    "algos_Class.append(('Random Forest', RandomForestClassifier()))\n",
    "algos_Class.append(('Support Vector Machine', SVC(kernel='rbf')))\n",
    "algos_Class.append(('K Nearest Neighbors', KNeighborsClassifier()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Filter Warnings\n",
    "import sys\n",
    "import warnings\n",
    "\n",
    "if not sys.warnoptions:\n",
    "    warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Evaluate each model in turn on OOB\n",
    "results = []\n",
    "names = []\n",
    "for name, model in algos_Class:\n",
    "    result = cross_val_score(model, X, y, cv=3, scoring='accuracy')\n",
    "    names.append(name)\n",
    "    results.append(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree 0.4574923194936659 0.0658722684637514\n",
      "Random Forest 0.6730719859102722 0.07652017810471876\n",
      "Support Vector Machine 0.512967279076801 0.07101144891264868\n",
      "K Nearest Neighbors 0.4745471986483909 0.07392146035406237\n"
     ]
    }
   ],
   "source": [
    "#Cross Validation Results\n",
    "for i in range(len(names)):\n",
    "    print(names[i], results[i].mean(), results[i].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Boxplot Algorithm Comparison\n",
    "fig = plt.figure()\n",
    "fig.suptitle('Algorithm Comparison')\n",
    "ax = fig.add_subplot(111)\n",
    "plt.boxplot(results)\n",
    "ax.set_xticklabels(names)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " ## Model Tuning for OOB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'bootstrap': True,\n",
      " 'ccp_alpha': 0.0,\n",
      " 'class_weight': None,\n",
      " 'criterion': 'gini',\n",
      " 'max_depth': None,\n",
      " 'max_features': 'auto',\n",
      " 'max_leaf_nodes': None,\n",
      " 'max_samples': None,\n",
      " 'min_impurity_decrease': 0.0,\n",
      " 'min_impurity_split': None,\n",
      " 'min_samples_leaf': 1,\n",
      " 'min_samples_split': 2,\n",
      " 'min_weight_fraction_leaf': 0.0,\n",
      " 'n_estimators': 100,\n",
      " 'n_jobs': None,\n",
      " 'oob_score': False,\n",
      " 'random_state': None,\n",
      " 'verbose': 0,\n",
      " 'warm_start': False}\n"
     ]
    }
   ],
   "source": [
    "#Tune Random Forst\n",
    "rf = RandomForestClassifier()\n",
    "\n",
    "#parameters currently in use\n",
    "pprint(rf.get_params())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.8138415245737212)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Model Tuning\n",
    "rf = RandomForestClassifier(criterion='entropy',\n",
    "                           n_estimators = 200, \n",
    "                           n_jobs = -1, \n",
    "                           random_state=123)\n",
    "\n",
    "rf_oob = rf.fit(X_train, y_train)\n",
    "\n",
    "#predictions\n",
    "y_preds = rf_oob.predict(X_test)\n",
    "\n",
    "#assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       00102       1.00      0.67      0.80         3\n",
      "       00106       0.75      1.00      0.86         3\n",
      "       00107       1.00      0.50      0.67         4\n",
      "       00110       1.00      1.00      1.00         3\n",
      "       00111       1.00      0.70      0.82        10\n",
      "       00112       1.00      0.80      0.89         5\n",
      "       00113       1.00      1.00      1.00         4\n",
      "       00114       1.00      0.75      0.86         8\n",
      "       00115       0.67      1.00      0.80         2\n",
      "       00116       0.67      1.00      0.80         2\n",
      "       00117       0.50      0.50      0.50         2\n",
      "       00118       0.50      0.67      0.57         3\n",
      "       00119       1.00      0.67      0.80         6\n",
      "       00120       0.80      0.92      0.86        13\n",
      "       00121       0.67      1.00      0.80         4\n",
      "       00122       0.67      0.33      0.44         6\n",
      "       00123       0.80      0.57      0.67         7\n",
      "       00125       0.75      0.60      0.67         5\n",
      "       00126       1.00      1.00      1.00         3\n",
      "       00127       1.00      0.75      0.86         4\n",
      "       00128       0.75      0.75      0.75         4\n",
      "       00129       0.75      0.75      0.75         4\n",
      "       00130       0.50      1.00      0.67         1\n",
      "       00131       1.00      1.00      1.00         3\n",
      "       00132       1.00      0.88      0.93         8\n",
      "       00133       0.78      0.88      0.82         8\n",
      "       00134       0.53      1.00      0.70         8\n",
      "       00201       1.00      0.75      0.86         4\n",
      "       00202       0.67      1.00      0.80         2\n",
      "       00208       1.00      1.00      1.00         6\n",
      "       00209       1.00      1.00      1.00         4\n",
      "       00211       0.86      1.00      0.92         6\n",
      "       00212       1.00      1.00      1.00         4\n",
      "       00213       1.00      0.75      0.86         4\n",
      "       00214       0.83      0.83      0.83         6\n",
      "       00215       1.00      0.80      0.89         5\n",
      "       00216       1.00      0.75      0.86         4\n",
      "       00218       0.33      1.00      0.50         1\n",
      "       00219       1.00      0.86      0.92         7\n",
      "       00220       1.00      0.75      0.86         4\n",
      "       00222       0.88      1.00      0.93         7\n",
      "       00224       1.00      0.83      0.91         6\n",
      "       00225       0.71      1.00      0.83         5\n",
      "       00226       1.00      0.50      0.67         2\n",
      "       00227       0.80      1.00      0.89         4\n",
      "       00229       1.00      1.00      1.00         4\n",
      "       00230       1.00      0.75      0.86         4\n",
      "       00231       1.00      1.00      1.00         3\n",
      "       00232       1.00      0.80      0.89         5\n",
      "       00233       1.00      1.00      1.00         6\n",
      "       00234       1.00      0.67      0.80         3\n",
      "       00235       0.67      0.67      0.67         3\n",
      "       00236       0.33      1.00      0.50         1\n",
      "       00237       0.50      1.00      0.67         2\n",
      "       01101       0.57      1.00      0.73         4\n",
      "       01102       0.75      0.75      0.75         8\n",
      "       01103       1.00      0.50      0.67         6\n",
      "       01104       0.75      0.60      0.67         5\n",
      "       01105       0.83      0.62      0.71         8\n",
      "       01106       0.57      1.00      0.73         4\n",
      "       01107       0.88      0.88      0.88         8\n",
      "       01108       0.75      1.00      0.86         3\n",
      "       01109       1.00      1.00      1.00         7\n",
      "       01110       0.60      1.00      0.75         3\n",
      "       01111       1.00      0.38      0.55         8\n",
      "       01112       0.40      0.67      0.50         3\n",
      "       01113       0.86      0.86      0.86         7\n",
      "       01114       0.75      0.75      0.75         4\n",
      "       01115       1.00      1.00      1.00         5\n",
      "       01116       0.75      0.75      0.75         4\n",
      "       01117       1.00      0.88      0.93         8\n",
      "       01118       1.00      0.86      0.92         7\n",
      "       01119       0.50      1.00      0.67         1\n",
      "       01120       1.00      1.00      1.00         2\n",
      "       01121       1.00      0.50      0.67         6\n",
      "       01122       1.00      0.50      0.67         6\n",
      "       01123       0.60      0.75      0.67         4\n",
      "       01124       0.80      0.67      0.73         6\n",
      "       01125       1.00      0.80      0.89         5\n",
      "       01126       0.27      1.00      0.43         3\n",
      "       01127       1.00      0.67      0.80         3\n",
      "       01128       0.83      1.00      0.91         5\n",
      "       01129       1.00      1.00      1.00         3\n",
      "       01130       0.67      1.00      0.80         4\n",
      "       01136       1.00      0.50      0.67         2\n",
      "       01137       1.00      1.00      1.00         4\n",
      "       01138       0.83      1.00      0.91         5\n",
      "       01201       0.50      1.00      0.67         1\n",
      "       01202       0.75      1.00      0.86         3\n",
      "       01203       1.00      0.50      0.67         4\n",
      "       01204       0.67      1.00      0.80         4\n",
      "       01205       0.83      0.71      0.77         7\n",
      "       01206       1.00      1.00      1.00         6\n",
      "       01207       0.86      0.75      0.80         8\n",
      "       01208       0.80      1.00      0.89         8\n",
      "       01209       1.00      1.00      1.00         1\n",
      "       01210       0.83      1.00      0.91         5\n",
      "       01211       1.00      0.75      0.86         8\n",
      "       01212       1.00      0.80      0.89         5\n",
      "       01213       1.00      1.00      1.00         5\n",
      "       01214       0.86      1.00      0.92         6\n",
      "       01215       1.00      0.80      0.89         5\n",
      "       01216       1.00      1.00      1.00         7\n",
      "       01217       0.73      1.00      0.84         8\n",
      "       01218       0.80      0.80      0.80         5\n",
      "       01219       0.83      0.71      0.77         7\n",
      "       01220       0.86      0.86      0.86         7\n",
      "       01221       1.00      0.75      0.86         4\n",
      "       01222       0.67      1.00      0.80         4\n",
      "       01223       1.00      0.75      0.86         4\n",
      "       01224       1.00      1.00      1.00         4\n",
      "       01225       0.86      0.86      0.86         7\n",
      "       01226       1.00      0.86      0.92         7\n",
      "       01227       1.00      0.50      0.67         2\n",
      "       01228       0.80      0.80      0.80         5\n",
      "       01229       1.00      0.67      0.80         3\n",
      "       01230       1.00      1.00      1.00         6\n",
      "       01233       1.00      1.00      1.00         3\n",
      "       01234       0.67      1.00      0.80         4\n",
      "       01235       1.00      0.71      0.83         7\n",
      "       02101       0.75      0.50      0.60         6\n",
      "       02102       1.00      0.50      0.67         8\n",
      "       02103       0.60      0.43      0.50         7\n",
      "       02104       0.43      0.60      0.50         5\n",
      "       02105       0.50      1.00      0.67         4\n",
      "       02106       0.60      0.60      0.60         5\n",
      "       02107       1.00      1.00      1.00         6\n",
      "       02108       0.86      0.55      0.67        11\n",
      "       02109       1.00      0.80      0.89         5\n",
      "       02110       1.00      0.60      0.75         5\n",
      "       02111       0.44      0.57      0.50         7\n",
      "       02112       0.20      0.33      0.25         3\n",
      "       02113       0.80      1.00      0.89         4\n",
      "       02114       0.80      0.67      0.73         6\n",
      "       02115       0.33      0.50      0.40         4\n",
      "       02117       1.00      1.00      1.00         6\n",
      "       02118       1.00      0.60      0.75         5\n",
      "       02119       0.60      1.00      0.75         3\n",
      "       02120       1.00      0.50      0.67         4\n",
      "       02121       0.80      0.80      0.80         5\n",
      "       02122       0.67      0.67      0.67         6\n",
      "       02123       0.80      0.67      0.73         6\n",
      "       02124       1.00      1.00      1.00         7\n",
      "       02125       0.50      0.75      0.60         4\n",
      "       02126       0.62      0.62      0.62         8\n",
      "       02127       0.75      0.75      0.75         4\n",
      "       02128       0.75      0.86      0.80         7\n",
      "       02129       0.88      0.78      0.82         9\n",
      "       02130       0.44      0.80      0.57         5\n",
      "       02132       0.57      1.00      0.73         4\n",
      "       02133       0.75      0.60      0.67         5\n",
      "       02134       0.86      0.67      0.75         9\n",
      "       02138       1.00      1.00      1.00         6\n",
      "       02139       0.50      0.33      0.40         3\n",
      "       02140       0.62      0.83      0.71         6\n",
      "       02201       1.00      1.00      1.00         5\n",
      "       02202       0.50      0.33      0.40         6\n",
      "       02203       1.00      0.60      0.75         5\n",
      "       02204       1.00      0.33      0.50         3\n",
      "       02205       0.60      0.43      0.50         7\n",
      "       02206       0.83      0.83      0.83         6\n",
      "       02207       0.27      0.60      0.37         5\n",
      "       02208       1.00      0.50      0.67         6\n",
      "       02209       1.00      1.00      1.00         4\n",
      "       02210       0.57      1.00      0.73         4\n",
      "       02211       1.00      0.33      0.50         9\n",
      "       02212       0.60      0.60      0.60         5\n",
      "       02213       0.50      0.80      0.62         5\n",
      "       02214       0.38      0.86      0.52         7\n",
      "       02216       0.50      1.00      0.67         3\n",
      "       02217       0.43      1.00      0.60         3\n",
      "       02218       0.78      0.70      0.74        10\n",
      "       02219       0.83      0.62      0.71         8\n",
      "       02220       1.00      0.40      0.57         5\n",
      "       02221       0.67      0.67      0.67         3\n",
      "       02222       1.00      0.50      0.67         4\n",
      "       02223       0.58      0.88      0.70         8\n",
      "       02224       1.00      0.88      0.93         8\n",
      "       02225       0.67      0.67      0.67         3\n",
      "       02226       0.33      1.00      0.50         2\n",
      "       02227       0.67      0.50      0.57         8\n",
      "       02228       0.67      1.00      0.80         4\n",
      "       02229       0.75      0.43      0.55         7\n",
      "       02230       1.00      0.75      0.86         4\n",
      "       02231       0.86      1.00      0.92         6\n",
      "       02234       1.00      0.25      0.40         4\n",
      "       02235       1.00      0.67      0.80         9\n",
      "       02241       1.00      1.00      1.00         8\n",
      "       03101       0.33      0.33      0.33         3\n",
      "       03102       0.55      1.00      0.71         6\n",
      "       03103       0.50      0.40      0.44         5\n",
      "       03104       0.71      0.62      0.67         8\n",
      "       03105       0.67      0.40      0.50         5\n",
      "       03106       0.75      0.60      0.67         5\n",
      "       03107       0.75      0.75      0.75         4\n",
      "       03108       1.00      0.33      0.50         9\n",
      "       03109       1.00      1.00      1.00         2\n",
      "       03110       1.00      1.00      1.00         6\n",
      "       03111       0.33      1.00      0.50         3\n",
      "       03112       0.50      0.80      0.62         5\n",
      "       03113       0.83      1.00      0.91         5\n",
      "       03114       0.57      0.50      0.53         8\n",
      "       03115       0.38      1.00      0.55         3\n",
      "       03116       0.67      0.33      0.44         6\n",
      "       03117       0.88      0.78      0.82         9\n",
      "       03118       0.80      0.80      0.80         5\n",
      "       03119       0.40      1.00      0.57         2\n",
      "       03120       1.00      0.60      0.75         5\n",
      "       03121       0.60      0.75      0.67         4\n",
      "       03122       0.67      0.25      0.36         8\n",
      "       03123       0.71      0.83      0.77         6\n",
      "       03124       0.67      0.86      0.75         7\n",
      "       03125       0.75      0.38      0.50         8\n",
      "       03126       0.50      1.00      0.67         3\n",
      "       03127       0.25      0.50      0.33         2\n",
      "       03128       0.80      0.57      0.67         7\n",
      "       03129       1.00      1.00      1.00         6\n",
      "       03130       1.00      0.80      0.89         5\n",
      "       03131       0.89      1.00      0.94         8\n",
      "       03135       0.50      1.00      0.67         5\n",
      "       03136       0.00      0.00      0.00         6\n",
      "       03137       1.00      0.50      0.67         6\n",
      "       03201       0.78      0.70      0.74        10\n",
      "       03202       0.80      0.50      0.62         8\n",
      "       03203       1.00      0.57      0.73         7\n",
      "       03204       0.33      0.33      0.33         3\n",
      "       03205       1.00      1.00      1.00         4\n",
      "       03206       0.62      1.00      0.77         5\n",
      "       03207       0.83      1.00      0.91         5\n",
      "       03208       0.86      0.86      0.86         7\n",
      "       03209       1.00      0.83      0.91         6\n",
      "       03210       0.50      1.00      0.67         3\n",
      "       03211       0.50      0.67      0.57         3\n",
      "       03212       0.67      0.50      0.57         4\n",
      "       03213       0.83      0.56      0.67         9\n",
      "       03214       0.43      1.00      0.60         3\n",
      "       03215       0.40      0.67      0.50         3\n",
      "       03216       0.83      0.71      0.77         7\n",
      "       03217       1.00      1.00      1.00         3\n",
      "       03218       1.00      1.00      1.00        10\n",
      "       03219       0.80      0.67      0.73         6\n",
      "       03220       0.75      0.75      0.75         4\n",
      "       03221       0.67      1.00      0.80         2\n",
      "       03222       0.67      0.67      0.67         6\n",
      "       03223       0.75      1.00      0.86         6\n",
      "       03224       1.00      0.50      0.67         2\n",
      "       03225       1.00      1.00      1.00         2\n",
      "       03226       0.75      1.00      0.86         6\n",
      "       03227       1.00      0.50      0.67         6\n",
      "       03228       1.00      0.25      0.40         4\n",
      "       03229       1.00      0.67      0.80         9\n",
      "       03230       0.78      1.00      0.88         7\n",
      "       03231       0.75      1.00      0.86         3\n",
      "       03234       0.86      1.00      0.92         6\n",
      "       03235       0.78      1.00      0.88         7\n",
      "       03236       0.92      0.80      0.86        15\n",
      "         101       0.91      1.00      0.95        10\n",
      "        1010       0.67      0.55      0.60        11\n",
      "       10107       1.00      1.00      1.00         6\n",
      "       10108       0.60      1.00      0.75         3\n",
      "       10110       0.60      1.00      0.75         3\n",
      "       10111       1.00      0.83      0.91         6\n",
      "       10112       1.00      0.89      0.94         9\n",
      "       10113       0.80      0.67      0.73         6\n",
      "       10114       1.00      0.83      0.91         6\n",
      "       10115       1.00      1.00      1.00         2\n",
      "       10116       1.00      1.00      1.00         8\n",
      "       10117       1.00      1.00      1.00         5\n",
      "       10118       1.00      1.00      1.00         4\n",
      "       10119       1.00      1.00      1.00         3\n",
      "       10121       1.00      1.00      1.00         4\n",
      "       10122       1.00      1.00      1.00         6\n",
      "        1015       1.00      1.00      1.00         1\n",
      "        1016       1.00      1.00      1.00         3\n",
      "       10202       1.00      0.96      0.98        26\n",
      "       10203       1.00      1.00      1.00         8\n",
      "       10213       1.00      0.75      0.86         4\n",
      "       10216       1.00      0.93      0.96        14\n",
      "       10217       1.00      1.00      1.00         8\n",
      "       10218       1.00      1.00      1.00         4\n",
      "       10219       1.00      0.67      0.80         3\n",
      "       10220       1.00      1.00      1.00         3\n",
      "       10222       0.90      0.95      0.92        19\n",
      "       10224       0.83      1.00      0.91         5\n",
      "       10225       0.67      0.80      0.73         5\n",
      "       10226       1.00      0.78      0.88         9\n",
      "       10227       0.33      0.25      0.29         8\n",
      "       10228       0.50      0.50      0.50         2\n",
      "       10229       0.50      0.60      0.55         5\n",
      "       10230       0.33      0.50      0.40         2\n",
      "       10231       0.50      0.33      0.40         9\n",
      "       10235       0.83      0.62      0.71         8\n",
      "       10237       0.67      0.75      0.71         8\n",
      "       10238       0.27      0.50      0.35         8\n",
      "       10239       0.33      0.33      0.33         6\n",
      "       10243       1.00      0.67      0.80         3\n",
      "       10244       0.71      0.83      0.77        12\n",
      "       10245       0.83      0.56      0.67         9\n",
      "       10246       1.00      1.00      1.00         5\n",
      "       10247       1.00      1.00      1.00         9\n",
      "       10248       0.96      1.00      0.98        24\n",
      "       10249       0.57      0.57      0.57         7\n",
      "         103       1.00      0.75      0.86         4\n",
      "         106       1.00      1.00      1.00         3\n",
      "         109       0.65      1.00      0.79        11\n",
      "       11101       0.69      0.95      0.80        19\n",
      "       11102       0.88      0.78      0.82        18\n",
      "       11103       1.00      0.74      0.85        19\n",
      "       11104       1.00      0.83      0.91        24\n",
      "       11105       0.70      0.88      0.78        16\n",
      "       11106       0.87      0.87      0.87        30\n",
      "       11107       1.00      0.79      0.88        19\n",
      "       11108       0.89      1.00      0.94        17\n",
      "       11109       0.67      0.94      0.78        17\n",
      "       11110       0.95      1.00      0.97        18\n",
      "       11111       0.92      0.63      0.75        19\n",
      "       11117       1.00      1.00      1.00         7\n",
      "        1112       0.00      0.00      0.00         3\n",
      "        1113       0.24      1.00      0.38         5\n",
      "        1116       0.00      0.00      0.00         3\n",
      "        1117       1.00      0.50      0.67         2\n",
      "       11201       0.85      0.94      0.89        18\n",
      "       11202       0.91      1.00      0.95        10\n",
      "       11203       0.85      1.00      0.92        11\n",
      "       11204       1.00      0.50      0.67         4\n",
      "       11205       1.00      0.80      0.89        10\n",
      "       11206       1.00      0.86      0.92         7\n",
      "       11207       1.00      0.88      0.93         8\n",
      "       11208       0.75      0.75      0.75         4\n",
      "       11209       1.00      1.00      1.00         5\n",
      "       11210       0.89      1.00      0.94         8\n",
      "       11215       1.00      1.00      1.00         5\n",
      "        1125       0.00      0.00      0.00         9\n",
      "        1126       1.00      0.71      0.83         7\n",
      "        1127       0.00      0.00      0.00         1\n",
      "         113       1.00      0.67      0.80         3\n",
      "        1130       1.00      0.12      0.22         8\n",
      "         114       0.89      1.00      0.94         8\n",
      "         115       1.00      1.00      1.00         5\n",
      "         116       1.00      1.00      1.00         4\n",
      "         117       1.00      1.00      1.00         4\n",
      "         118       0.42      1.00      0.59         5\n",
      "        1210       1.00      1.00      1.00        15\n",
      "       12101       1.00      0.75      0.86        12\n",
      "       12102       1.00      1.00      1.00         5\n",
      "       12103       1.00      1.00      1.00        10\n",
      "       12104       1.00      1.00      1.00        12\n",
      "       12105       1.00      1.00      1.00         7\n",
      "       12106       0.82      1.00      0.90        14\n",
      "       12107       1.00      1.00      1.00         5\n",
      "       12108       1.00      0.83      0.91         6\n",
      "       12109       0.57      1.00      0.73         4\n",
      "       12110       1.00      0.50      0.67         6\n",
      "       12111       0.80      1.00      0.89         4\n",
      "       12112       1.00      1.00      1.00         7\n",
      "       12117       1.00      1.00      1.00         3\n",
      "        1215       0.75      1.00      0.86         6\n",
      "        1216       1.00      0.80      0.89         5\n",
      "        1217       0.83      1.00      0.91         5\n",
      "        1218       1.00      1.00      1.00         8\n",
      "         122       0.88      1.00      0.93         7\n",
      "       12201       0.95      0.95      0.95        21\n",
      "       12202       0.95      1.00      0.97        18\n",
      "       12203       1.00      1.00      1.00         7\n",
      "       12204       1.00      0.92      0.96        13\n",
      "       12205       1.00      1.00      1.00         4\n",
      "       12206       0.90      0.90      0.90        20\n",
      "       12207       1.00      1.00      1.00         3\n",
      "       12208       1.00      1.00      1.00         8\n",
      "       12209       1.00      1.00      1.00         5\n",
      "       12210       1.00      1.00      1.00         4\n",
      "       12211       1.00      1.00      1.00         6\n",
      "       12212       1.00      1.00      1.00         8\n",
      "       12216       0.88      1.00      0.93         7\n",
      "       12217       1.00      0.92      0.96        13\n",
      "        1222       1.00      1.00      1.00         3\n",
      "        1226       1.00      0.50      0.67         2\n",
      "        1227       1.00      1.00      1.00         2\n",
      "        1228       1.00      1.00      1.00         6\n",
      "        1229       1.00      0.75      0.86         8\n",
      "         123       1.00      0.71      0.83         7\n",
      "         124       0.91      1.00      0.95        10\n",
      "         125       1.00      1.00      1.00        12\n",
      "         126       0.86      1.00      0.92         6\n",
      "         127       1.00      0.83      0.91         6\n",
      "         128       0.73      1.00      0.84         8\n",
      "         129       1.00      0.73      0.84        11\n",
      "         131       1.00      1.00      1.00        12\n",
      "       13101       0.76      1.00      0.86        16\n",
      "       13102       1.00      0.83      0.90        23\n",
      "       13103       0.75      0.86      0.80         7\n",
      "       13104       1.00      0.75      0.86        20\n",
      "       13105       0.80      0.80      0.80         5\n",
      "       13106       0.83      0.83      0.83         6\n",
      "       13107       1.00      0.50      0.67         6\n",
      "       13108       0.67      1.00      0.80         2\n",
      "        1311       1.00      0.75      0.86         4\n",
      "       13112       0.80      0.80      0.80         5\n",
      "       13113       1.00      0.67      0.80         6\n",
      "       13116       1.00      0.90      0.95        10\n",
      "        1312       1.00      1.00      1.00         2\n",
      "        1313       0.43      0.75      0.55         4\n",
      "        1314       1.00      0.50      0.67         2\n",
      "         132       1.00      1.00      1.00         6\n",
      "       13201       1.00      1.00      1.00        17\n",
      "       13202       0.92      1.00      0.96        22\n",
      "       13203       1.00      0.76      0.86        21\n",
      "       13204       0.78      1.00      0.88        14\n",
      "       13205       1.00      1.00      1.00         3\n",
      "       13206       1.00      1.00      1.00         2\n",
      "       13214       0.00      0.00      0.00         1\n",
      "       13216       1.00      1.00      1.00         4\n",
      "       13217       1.00      1.00      1.00         4\n",
      "         133       0.57      0.80      0.67         5\n",
      "         134       0.79      0.79      0.79        14\n",
      "         135       0.75      0.75      0.75         4\n",
      "         136       1.00      0.40      0.57         5\n",
      "       20101       0.60      0.75      0.67         4\n",
      "       20103       0.89      1.00      0.94        16\n",
      "       20104       0.94      0.85      0.89        20\n",
      "       20106       1.00      0.88      0.93        16\n",
      "       20107       0.91      1.00      0.95        10\n",
      "       20108       0.60      0.75      0.67         8\n",
      "       20110       1.00      0.57      0.73         7\n",
      "       20111       1.00      0.73      0.84        11\n",
      "       20112       0.72      1.00      0.84        13\n",
      "       20113       1.00      0.67      0.80         6\n",
      "       20117       0.80      0.57      0.67         7\n",
      "       20118       0.75      0.60      0.67         5\n",
      "       20119       0.86      0.67      0.75         9\n",
      "       20120       0.78      0.58      0.67        12\n",
      "       20121       0.94      1.00      0.97        16\n",
      "       20122       1.00      1.00      1.00        20\n",
      "       20124       0.94      0.94      0.94        18\n",
      "       20125       0.73      0.89      0.80         9\n",
      "       20126       0.89      0.89      0.89         9\n",
      "       20127       0.89      0.89      0.89        19\n",
      "       20128       0.86      0.75      0.80        16\n",
      "       20129       1.00      0.89      0.94         9\n",
      "       20130       1.00      0.67      0.80        12\n",
      "       20132       0.89      0.80      0.84        10\n",
      "       20133       1.00      0.86      0.92         7\n",
      "       20134       0.82      0.69      0.75        13\n",
      "       20135       0.62      0.62      0.62         8\n",
      "       20136       0.50      1.00      0.67         2\n",
      "       20137       1.00      1.00      1.00         5\n",
      "       20138       1.00      0.70      0.82        10\n",
      "       20139       0.65      0.91      0.75        22\n",
      "       20140       0.82      0.92      0.87        25\n",
      "       20201       0.76      1.00      0.87        13\n",
      "       20202       0.86      0.86      0.86        14\n",
      "       20203       0.83      0.71      0.77         7\n",
      "       20204       1.00      0.80      0.89         5\n",
      "       20205       0.89      0.62      0.73        13\n",
      "       20206       1.00      1.00      1.00         2\n",
      "       20207       0.83      1.00      0.91        10\n",
      "       20208       0.86      1.00      0.92        12\n",
      "       20209       1.00      0.67      0.80         3\n",
      "       20211       0.50      0.83      0.62         6\n",
      "       20214       0.45      0.81      0.58        16\n",
      "       20215       1.00      0.75      0.86         4\n",
      "       21101       1.00      0.75      0.86         8\n",
      "       21102       1.00      0.70      0.82        10\n",
      "       21103       0.57      1.00      0.73         4\n",
      "       21104       1.00      0.33      0.50         3\n",
      "       21105       0.84      0.84      0.84        19\n",
      "       21106       0.73      1.00      0.84         8\n",
      "       21107       0.86      1.00      0.92        12\n",
      "       21108       0.93      0.87      0.90        15\n",
      "       21109       1.00      0.64      0.78        14\n",
      "       21110       0.71      1.00      0.83        10\n",
      "       21111       0.90      0.90      0.90        10\n",
      "       21112       0.75      0.90      0.82        10\n",
      "       21113       0.71      0.83      0.77        12\n",
      "       21114       1.00      0.94      0.97        18\n",
      "       21115       1.00      0.91      0.95        11\n",
      "       21116       0.71      0.71      0.71         7\n",
      "       21117       0.80      0.50      0.62         8\n",
      "       21118       0.78      0.88      0.82         8\n",
      "       21119       0.80      1.00      0.89         4\n",
      "       21120       1.00      1.00      1.00         4\n",
      "       21121       1.00      1.00      1.00         7\n",
      "       21122       1.00      1.00      1.00         6\n",
      "       21123       1.00      1.00      1.00         4\n",
      "       21124       1.00      0.88      0.93         8\n",
      "       21125       0.93      0.93      0.93        14\n",
      "       21126       0.83      0.77      0.80        13\n",
      "       21127       0.89      0.89      0.89         9\n",
      "       21128       1.00      0.90      0.95        10\n",
      "       21129       0.75      1.00      0.86         6\n",
      "       21130       0.89      0.73      0.80        11\n",
      "       21131       1.00      1.00      1.00         5\n",
      "       21132       0.89      1.00      0.94         8\n",
      "       21133       1.00      1.00      1.00         6\n",
      "       21134       0.87      0.93      0.90        14\n",
      "       21135       0.88      0.70      0.78        10\n",
      "       21136       0.82      1.00      0.90         9\n",
      "       21137       1.00      0.91      0.95        11\n",
      "       21140       0.79      1.00      0.88        15\n",
      "       21141       0.80      0.57      0.67         7\n",
      "       21143       0.89      0.89      0.89        18\n",
      "       21201       1.00      0.83      0.91         6\n",
      "       21202       1.00      1.00      1.00         4\n",
      "       21203       1.00      0.89      0.94         9\n",
      "       21204       1.00      1.00      1.00         6\n",
      "       21205       1.00      0.60      0.75         5\n",
      "       21206       1.00      1.00      1.00        10\n",
      "       21207       1.00      0.88      0.93         8\n",
      "       21209       1.00      1.00      1.00         4\n",
      "       21212       1.00      1.00      1.00         2\n",
      "       21214       0.75      1.00      0.86         6\n",
      "       21215       0.50      0.33      0.40         3\n",
      "       21216       1.00      0.86      0.92         7\n",
      "       21217       1.00      1.00      1.00         3\n",
      "       21218       1.00      1.00      1.00         8\n",
      "       21219       1.00      1.00      1.00         3\n",
      "       21220       1.00      1.00      1.00         3\n",
      "       21221       1.00      0.83      0.91         6\n",
      "       21223       0.83      1.00      0.91         5\n",
      "       21224       0.88      1.00      0.94        23\n",
      "       21225       1.00      1.00      1.00         2\n",
      "       22101       0.71      1.00      0.83         5\n",
      "       22102       0.73      0.79      0.76        14\n",
      "       22103       0.58      0.78      0.67         9\n",
      "       22104       0.75      0.67      0.71         9\n",
      "       22105       0.83      0.45      0.59        11\n",
      "       22106       0.86      0.86      0.86         7\n",
      "       22107       0.92      0.92      0.92        13\n",
      "       22108       0.67      0.50      0.57         4\n",
      "       22109       1.00      1.00      1.00         2\n",
      "       22110       0.67      1.00      0.80         4\n",
      "       22111       1.00      0.50      0.67         4\n",
      "       22112       0.80      1.00      0.89         4\n",
      "       22113       0.79      1.00      0.88        11\n",
      "       22114       1.00      0.83      0.91         6\n",
      "       22115       0.83      1.00      0.91         5\n",
      "       22116       0.71      1.00      0.83         5\n",
      "       22117       1.00      0.71      0.83         7\n",
      "       22118       1.00      1.00      1.00        18\n",
      "       22119       1.00      0.90      0.95        10\n",
      "       22120       0.89      1.00      0.94         8\n",
      "       22121       0.60      0.75      0.67         4\n",
      "       22122       0.70      0.94      0.80        17\n",
      "       22123       1.00      0.80      0.89         5\n",
      "       22124       1.00      0.57      0.73         7\n",
      "       22125       1.00      1.00      1.00         5\n",
      "       22126       0.86      0.86      0.86         7\n",
      "       22127       1.00      0.91      0.95        11\n",
      "       22128       0.88      0.88      0.88         8\n",
      "       22129       0.92      0.79      0.85        14\n",
      "       22130       0.83      0.83      0.83         6\n",
      "       22131       0.67      0.67      0.67         6\n",
      "       22132       0.92      0.86      0.89        14\n",
      "       22133       0.80      1.00      0.89         4\n",
      "       22134       0.83      0.83      0.83         6\n",
      "       22135       1.00      0.44      0.62         9\n",
      "       22136       0.75      0.92      0.83        13\n",
      "       22137       0.88      0.78      0.82         9\n",
      "       22138       0.69      1.00      0.82         9\n",
      "       22139       0.88      1.00      0.93        14\n",
      "       22140       1.00      0.50      0.67        10\n",
      "       22143       1.00      0.90      0.95        10\n",
      "       22144       0.80      0.80      0.80         5\n",
      "       22201       1.00      1.00      1.00         2\n",
      "       22202       1.00      1.00      1.00         2\n",
      "       22204       1.00      1.00      1.00         2\n",
      "       22205       0.00      0.00      0.00         6\n",
      "       22206       0.40      1.00      0.57         4\n",
      "       22207       1.00      1.00      1.00         1\n",
      "       22208       1.00      1.00      1.00         1\n",
      "       22209       1.00      0.67      0.80         3\n",
      "       22210       1.00      1.00      1.00         3\n",
      "       22211       0.00      0.00      0.00         0\n",
      "       22213       0.75      1.00      0.86         3\n",
      "       22214       1.00      0.67      0.80         6\n",
      "       22217       1.00      1.00      1.00         4\n",
      "       22220       1.00      1.00      1.00         2\n",
      "       23101       0.91      0.91      0.91        11\n",
      "       23102       0.85      1.00      0.92        11\n",
      "       23103       1.00      0.71      0.83         7\n",
      "       23104       0.80      0.57      0.67         7\n",
      "       23105       0.75      0.38      0.50         8\n",
      "       23106       0.58      1.00      0.73        11\n",
      "       23107       0.48      0.83      0.61        12\n",
      "       23108       0.85      0.73      0.79        15\n",
      "       23109       0.69      1.00      0.82         9\n",
      "       23110       0.80      0.73      0.76        11\n",
      "       23111       0.80      0.57      0.67         7\n",
      "       23112       0.50      0.33      0.40         3\n",
      "       23113       1.00      0.88      0.93         8\n",
      "       23114       0.67      0.67      0.67         9\n",
      "       23115       1.00      1.00      1.00        10\n",
      "       23116       1.00      1.00      1.00         5\n",
      "       23117       1.00      0.79      0.88        14\n",
      "       23118       0.50      0.50      0.50         4\n",
      "       23119       0.83      0.83      0.83         6\n",
      "       23120       1.00      0.75      0.86         4\n",
      "       23121       0.33      0.20      0.25         5\n",
      "       23122       0.77      0.71      0.74        14\n",
      "       23123       1.00      0.67      0.80         6\n",
      "       23124       0.90      0.90      0.90        10\n",
      "       23125       0.79      0.85      0.81        13\n",
      "       23126       0.75      1.00      0.86        15\n",
      "       23127       0.83      0.71      0.77         7\n",
      "       23128       0.56      0.83      0.67         6\n",
      "       23129       0.87      0.87      0.87        15\n",
      "       23130       0.90      0.82      0.86        11\n",
      "       23131       1.00      0.44      0.62         9\n",
      "       23132       0.50      0.83      0.62         6\n",
      "       23133       0.91      0.91      0.91        11\n",
      "       23134       1.00      1.00      1.00         4\n",
      "       23135       1.00      1.00      1.00         2\n",
      "       23136       0.89      1.00      0.94        17\n",
      "       23137       1.00      0.83      0.91        12\n",
      "       23140       0.71      0.94      0.81        18\n",
      "       23141       1.00      0.36      0.53        11\n",
      "       23143       1.00      0.60      0.75        10\n",
      "       23201       1.00      1.00      1.00        15\n",
      "       23202       1.00      1.00      1.00         1\n",
      "       23203       0.82      1.00      0.90         9\n",
      "       23204       1.00      0.67      0.80         6\n",
      "       23205       1.00      0.71      0.83         7\n",
      "       23206       0.71      1.00      0.83         5\n",
      "       23207       1.00      1.00      1.00         6\n",
      "       23208       1.00      0.80      0.89         5\n",
      "       23209       1.00      1.00      1.00         4\n",
      "       23210       0.67      0.80      0.73         5\n",
      "       23211       0.88      0.88      0.88         8\n",
      "       23212       0.67      0.50      0.57         4\n",
      "       23213       0.80      1.00      0.89         4\n",
      "       23214       1.00      1.00      1.00         7\n",
      "       23215       1.00      1.00      1.00         6\n",
      "       23216       1.00      1.00      1.00        10\n",
      "       23217       0.50      1.00      0.67         2\n",
      "       23218       0.60      0.75      0.67         4\n",
      "       23219       0.83      0.71      0.77         7\n",
      "       23220       1.00      0.75      0.86         4\n",
      "       23221       1.00      1.00      1.00         4\n",
      "       23222       1.00      1.00      1.00         5\n",
      "       23223       0.88      1.00      0.93         7\n",
      "       23224       1.00      1.00      1.00         1\n",
      "       23225       1.00      1.00      1.00         4\n",
      "       23226       0.75      1.00      0.86         6\n",
      "       23227       1.00      0.83      0.91         6\n",
      "       23228       1.00      0.83      0.91         6\n",
      "       23229       0.60      0.75      0.67         4\n",
      "       23230       0.86      0.86      0.86         7\n",
      "       23231       1.00      0.50      0.67         4\n",
      "       23232       0.80      1.00      0.89         4\n",
      "       23233       1.00      0.75      0.86         4\n",
      "       23234       0.86      1.00      0.92         6\n",
      "       23235       0.86      1.00      0.92         6\n",
      "       23236       1.00      0.88      0.93         8\n",
      "       23237       1.00      1.00      1.00         4\n",
      "       23238       1.00      1.00      1.00         4\n",
      "       23239       1.00      1.00      1.00         5\n",
      "       23240       1.00      1.00      1.00         2\n",
      "       23241       1.00      1.00      1.00         6\n",
      "       23242       1.00      0.90      0.95        10\n",
      "       23243       0.75      0.86      0.80         7\n",
      "       23244       0.86      0.86      0.86         7\n",
      "       23245       1.00      0.78      0.88         9\n",
      "       23246       0.67      0.80      0.73         5\n",
      "       23247       1.00      0.86      0.92         7\n",
      "       23248       0.75      1.00      0.86         3\n",
      "       23250       0.75      0.75      0.75         4\n",
      "       23253       1.00      0.83      0.91         6\n",
      "       23254       0.00      0.00      0.00         0\n",
      "       24101       0.06      1.00      0.12         4\n",
      "       24102       0.50      0.14      0.22         7\n",
      "       24103       1.00      0.17      0.29         6\n",
      "       24104       1.00      0.30      0.46        10\n",
      "       24105       1.00      0.50      0.67         4\n",
      "       24106       1.00      0.33      0.50         3\n",
      "       24107       0.75      0.75      0.75         4\n",
      "       24108       1.00      0.50      0.67         6\n",
      "       24109       1.00      0.50      0.67         4\n",
      "       24110       1.00      0.44      0.62         9\n",
      "       24111       1.00      0.50      0.67         6\n",
      "       24112       0.50      0.40      0.44         5\n",
      "       24113       1.00      0.67      0.80         6\n",
      "       24114       0.80      0.67      0.73         6\n",
      "       24115       1.00      0.38      0.55         8\n",
      "       24116       1.00      0.60      0.75         5\n",
      "       24117       1.00      0.75      0.86         4\n",
      "       24118       0.67      1.00      0.80         2\n",
      "       24119       1.00      0.40      0.57         5\n",
      "       24120       0.50      0.33      0.40         3\n",
      "       24121       0.50      0.40      0.44         5\n",
      "       24122       1.00      0.50      0.67         8\n",
      "       24123       1.00      0.67      0.80         3\n",
      "       24124       1.00      0.50      0.67         4\n",
      "       24125       1.00      0.75      0.86         4\n",
      "       24126       1.00      0.60      0.75         5\n",
      "       24127       0.75      0.50      0.60         6\n",
      "       24128       1.00      0.50      0.67         6\n",
      "       24129       0.60      0.50      0.55         6\n",
      "       24130       1.00      0.60      0.75         5\n",
      "       24131       1.00      0.25      0.40         8\n",
      "       24132       1.00      0.43      0.60         7\n",
      "       24133       1.00      0.67      0.80         3\n",
      "       24134       0.10      1.00      0.18         5\n",
      "       24135       1.00      0.57      0.73         7\n",
      "       24136       0.00      0.00      0.00         4\n",
      "       24137       1.00      0.83      0.91         6\n",
      "       24138       1.00      0.57      0.73         7\n",
      "       24139       0.50      0.33      0.40         3\n",
      "       24140       1.00      0.17      0.29         6\n",
      "       24141       1.00      1.00      1.00         4\n",
      "       24142       1.00      0.67      0.80         3\n",
      "       24143       1.00      0.62      0.77         8\n",
      "       24146       1.00      0.67      0.80         6\n",
      "       24147       1.00      0.40      0.57         5\n",
      "       24201       1.00      1.00      1.00         2\n",
      "       24202       1.00      1.00      1.00         1\n",
      "       24203       1.00      1.00      1.00         3\n",
      "       24204       1.00      1.00      1.00         2\n",
      "       24205       1.00      1.00      1.00         4\n",
      "       24206       1.00      1.00      1.00         1\n",
      "       24207       1.00      1.00      1.00         2\n",
      "       24208       1.00      1.00      1.00         2\n",
      "       24209       1.00      1.00      1.00         5\n",
      "       24210       1.00      1.00      1.00         2\n",
      "       24211       0.50      1.00      0.67         1\n",
      "       24212       1.00      0.75      0.86         4\n",
      "       24213       1.00      1.00      1.00         4\n",
      "       24215       1.00      1.00      1.00         2\n",
      "       24216       1.00      1.00      1.00         2\n",
      "       24218       1.00      1.00      1.00         3\n",
      "       24219       1.00      1.00      1.00         2\n",
      "\n",
      "    accuracy                           0.81      4985\n",
      "   macro avg       0.84      0.80      0.80      4985\n",
      "weighted avg       0.86      0.81      0.82      4985\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#Evaluate Metrics\n",
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.8138415245737212\n",
      "Precision:  0.8586923106396787\n",
      "Recall:  0.819264943457189\n",
      "F1:  0.8161600475081973\n"
     ]
    }
   ],
   "source": [
    "#Random Forest OOB Metrics Compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average = 'weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average = 'weighted', labels=np.unique(y_preds)))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Notes: \n",
    "Although accuracy is a useful metric, for this problem, recall is also important. Recall gauges how many spaces our model correctly classifies (True Positives) out of all Actual Positives within each class. There is a high cost associated with a False Negative (incorrect room prediction) when being considered for deploying in a Smart Phone app. To get another sense of how well our model did, we will sum the number of spaces that fall within Recall quartiles and compare at the very end."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_OOB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.813842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.858692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.819265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.816160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        RF_OOB\n",
       "Accuracy              0.813842\n",
       "Precision (weighted)  0.858692\n",
       "Recall (weighted)     0.819265\n",
       "F1 (weighted)         0.816160"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create Dataframe of metrics\n",
    "RF_OOB = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                      precision_score(y_test, y_preds, average='weighted'),\n",
    "                      recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)),\n",
    "                      f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "#Rename Col and Indexes\n",
    "RF_OOB = RF_OOB.rename(columns={0:'RF_OOB'}, \n",
    "                      index = {0:'Accuracy', 1: 'Precision (weighted)', 2: 'Recall (weighted)', 3: 'F1 (weighted)'})\n",
    "\n",
    "RF_OOB.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0  0.666667\n",
       "1  1.000000\n",
       "2  0.500000\n",
       "3  1.000000\n",
       "4  0.700000\n",
       "5  0.800000\n",
       "6  1.000000\n",
       "7  0.750000\n",
       "8  1.000000\n",
       "9  1.000000"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Compare RF Recall Count by Quartile\n",
    "rf_oob_recall = pd.DataFrame(recall_score(y_test, y_preds, average=None))\n",
    "rf_oob_recall.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>oob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-0.002, 0.25]</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.25, 0.5]</th>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.5, 0.75]</th>\n",
       "      <td>166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.75, 1.0]</th>\n",
       "      <td>456</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                oob\n",
       "(-0.002, 0.25]   20\n",
       "(0.25, 0.5]      88\n",
       "(0.5, 0.75]     166\n",
       "(0.75, 1.0]     456"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_oob_quartile = pd.DataFrame(rf_oob_recall[0].value_counts(bins=4, sort=False))\n",
    "\n",
    "#rename cols\n",
    "rf_oob_quartile = rf_oob_quartile.rename(columns={0: 'oob'})\n",
    "\n",
    "rf_oob_quartile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "      <th>RFpreds_oob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10837</th>\n",
       "      <td>02117</td>\n",
       "      <td>02117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1060</th>\n",
       "      <td>23215</td>\n",
       "      <td>23215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18242</th>\n",
       "      <td>00224</td>\n",
       "      <td>00224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7195</th>\n",
       "      <td>01225</td>\n",
       "      <td>01222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1227</th>\n",
       "      <td>24203</td>\n",
       "      <td>24203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2419</th>\n",
       "      <td>23253</td>\n",
       "      <td>23254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13951</th>\n",
       "      <td>11105</td>\n",
       "      <td>11105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4196</th>\n",
       "      <td>21130</td>\n",
       "      <td>21113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6495</th>\n",
       "      <td>12207</td>\n",
       "      <td>12207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18510</th>\n",
       "      <td>20138</td>\n",
       "      <td>20138</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      location RFpreds_oob\n",
       "10837    02117       02117\n",
       "1060     23215       23215\n",
       "18242    00224       00224\n",
       "7195     01225       01222\n",
       "1227     24203       24203\n",
       "2419     23253       23254\n",
       "13951    11105       11105\n",
       "4196     21130       21113\n",
       "6495     12207       12207\n",
       "18510    20138       20138"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe comparing predictions to y_test 'ground truth'\n",
    "y_test = pd.DataFrame(y_test)\n",
    "y_test.head()\n",
    "\n",
    "# predictions dataframe\n",
    "y_preds = pd.DataFrame(y_preds)\n",
    "# rename prediction column\n",
    "y_preds = y_preds.rename(columns={0: 'RFpreds_oob'})\n",
    "\n",
    "# comparison dataframe\n",
    "rf_compare = pd.concat([y_test, y_preds.set_index(y_test.index)], axis=1)\n",
    "rf_compare.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'C': 1.0,\n",
      " 'break_ties': False,\n",
      " 'cache_size': 200,\n",
      " 'class_weight': None,\n",
      " 'coef0': 0.0,\n",
      " 'decision_function_shape': 'ovr',\n",
      " 'degree': 3,\n",
      " 'gamma': 'scale',\n",
      " 'kernel': 'rbf',\n",
      " 'max_iter': -1,\n",
      " 'probability': False,\n",
      " 'random_state': None,\n",
      " 'shrinking': True,\n",
      " 'tol': 0.001,\n",
      " 'verbose': False}\n"
     ]
    }
   ],
   "source": [
    "# tune SVC on oob2\n",
    "svc = SVC()\n",
    "\n",
    "# parameters currently in use\n",
    "pprint(svc.get_params())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "# manual tuning\n",
    "param_grid = {\n",
    "    'C': [1, 10, 100, 1000]\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, error_score=nan,\n",
       "             estimator=SVC(C=1.0, break_ties=False, cache_size=200,\n",
       "                           class_weight=None, coef0=0.0,\n",
       "                           decision_function_shape='ovr', degree=3,\n",
       "                           gamma='scale', kernel='rbf', max_iter=-1,\n",
       "                           probability=False, random_state=None, shrinking=True,\n",
       "                           tol=0.001, verbose=False),\n",
       "             iid='deprecated', n_jobs=-1, param_grid={'C': [1, 10, 100, 1000]},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring=None, verbose=0)"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svc = GridSearchCV(estimator=svc, param_grid=param_grid, cv=3, n_jobs=-1)\n",
    "gs_svc.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 10}"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svc.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.6906720160481444)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning\n",
    "svc = SVC(C=10, random_state=123)\n",
    "svc_oob = svc.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = svc_oob.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       00102       0.67      0.67      0.67         3\n",
      "       00106       0.67      0.67      0.67         3\n",
      "       00107       0.67      0.50      0.57         4\n",
      "       00110       1.00      1.00      1.00         3\n",
      "       00111       1.00      0.40      0.57        10\n",
      "       00112       0.33      0.40      0.36         5\n",
      "       00113       0.38      0.75      0.50         4\n",
      "       00114       1.00      0.62      0.77         8\n",
      "       00115       1.00      1.00      1.00         2\n",
      "       00116       0.67      1.00      0.80         2\n",
      "       00117       0.25      0.50      0.33         2\n",
      "       00118       1.00      0.33      0.50         3\n",
      "       00119       0.75      0.50      0.60         6\n",
      "       00120       0.50      0.77      0.61        13\n",
      "       00121       0.50      0.50      0.50         4\n",
      "       00122       0.00      0.00      0.00         6\n",
      "       00123       0.75      0.43      0.55         7\n",
      "       00125       1.00      0.40      0.57         5\n",
      "       00126       0.43      1.00      0.60         3\n",
      "       00127       1.00      0.50      0.67         4\n",
      "       00128       0.60      0.75      0.67         4\n",
      "       00129       1.00      0.75      0.86         4\n",
      "       00130       0.25      1.00      0.40         1\n",
      "       00131       0.50      0.33      0.40         3\n",
      "       00132       1.00      0.88      0.93         8\n",
      "       00133       0.75      0.75      0.75         8\n",
      "       00134       0.47      0.88      0.61         8\n",
      "       00201       0.60      0.75      0.67         4\n",
      "       00202       0.50      0.50      0.50         2\n",
      "       00208       1.00      0.83      0.91         6\n",
      "       00209       1.00      0.50      0.67         4\n",
      "       00211       0.50      0.67      0.57         6\n",
      "       00212       0.67      0.50      0.57         4\n",
      "       00213       1.00      0.75      0.86         4\n",
      "       00214       0.80      0.67      0.73         6\n",
      "       00215       0.80      0.80      0.80         5\n",
      "       00216       0.67      0.50      0.57         4\n",
      "       00218       0.50      1.00      0.67         1\n",
      "       00219       1.00      0.57      0.73         7\n",
      "       00220       1.00      0.50      0.67         4\n",
      "       00222       0.43      0.43      0.43         7\n",
      "       00224       1.00      0.67      0.80         6\n",
      "       00225       0.75      0.60      0.67         5\n",
      "       00226       1.00      0.50      0.67         2\n",
      "       00227       0.75      0.75      0.75         4\n",
      "       00229       0.33      0.50      0.40         4\n",
      "       00230       0.40      0.50      0.44         4\n",
      "       00231       0.25      0.33      0.29         3\n",
      "       00232       0.50      0.40      0.44         5\n",
      "       00233       0.45      0.83      0.59         6\n",
      "       00234       1.00      0.67      0.80         3\n",
      "       00235       0.00      0.00      0.00         3\n",
      "       00236       0.17      1.00      0.29         1\n",
      "       00237       0.33      1.00      0.50         2\n",
      "       01101       0.50      0.75      0.60         4\n",
      "       01102       0.50      0.75      0.60         8\n",
      "       01103       1.00      0.33      0.50         6\n",
      "       01104       0.33      0.40      0.36         5\n",
      "       01105       1.00      0.62      0.77         8\n",
      "       01106       1.00      1.00      1.00         4\n",
      "       01107       0.58      0.88      0.70         8\n",
      "       01108       0.50      0.67      0.57         3\n",
      "       01109       0.83      0.71      0.77         7\n",
      "       01110       0.50      1.00      0.67         3\n",
      "       01111       1.00      0.50      0.67         8\n",
      "       01112       0.67      0.67      0.67         3\n",
      "       01113       0.43      0.43      0.43         7\n",
      "       01114       0.75      0.75      0.75         4\n",
      "       01115       0.00      0.00      0.00         5\n",
      "       01116       0.29      0.50      0.36         4\n",
      "       01117       1.00      0.62      0.77         8\n",
      "       01118       0.75      0.43      0.55         7\n",
      "       01119       0.00      0.00      0.00         1\n",
      "       01120       0.50      1.00      0.67         2\n",
      "       01121       0.50      0.33      0.40         6\n",
      "       01122       1.00      0.33      0.50         6\n",
      "       01123       0.33      0.75      0.46         4\n",
      "       01124       1.00      0.33      0.50         6\n",
      "       01125       0.33      0.20      0.25         5\n",
      "       01126       0.33      1.00      0.50         3\n",
      "       01127       0.67      0.67      0.67         3\n",
      "       01128       0.83      1.00      0.91         5\n",
      "       01129       1.00      1.00      1.00         3\n",
      "       01130       0.80      1.00      0.89         4\n",
      "       01136       1.00      0.50      0.67         2\n",
      "       01137       1.00      0.75      0.86         4\n",
      "       01138       0.50      0.60      0.55         5\n",
      "       01201       0.20      1.00      0.33         1\n",
      "       01202       0.20      0.33      0.25         3\n",
      "       01203       0.22      0.50      0.31         4\n",
      "       01204       0.40      0.50      0.44         4\n",
      "       01205       0.36      0.57      0.44         7\n",
      "       01206       0.86      1.00      0.92         6\n",
      "       01207       0.67      0.50      0.57         8\n",
      "       01208       0.88      0.88      0.88         8\n",
      "       01209       1.00      1.00      1.00         1\n",
      "       01210       0.50      0.60      0.55         5\n",
      "       01211       0.67      0.75      0.71         8\n",
      "       01212       0.00      0.00      0.00         5\n",
      "       01213       0.60      0.60      0.60         5\n",
      "       01214       0.67      0.33      0.44         6\n",
      "       01215       0.50      0.40      0.44         5\n",
      "       01216       0.80      0.57      0.67         7\n",
      "       01217       0.56      0.62      0.59         8\n",
      "       01218       0.43      0.60      0.50         5\n",
      "       01219       0.80      0.57      0.67         7\n",
      "       01220       0.80      0.57      0.67         7\n",
      "       01221       0.60      0.75      0.67         4\n",
      "       01222       0.80      1.00      0.89         4\n",
      "       01223       0.75      0.75      0.75         4\n",
      "       01224       0.75      0.75      0.75         4\n",
      "       01225       0.71      0.71      0.71         7\n",
      "       01226       0.71      0.71      0.71         7\n",
      "       01227       1.00      0.50      0.67         2\n",
      "       01228       1.00      0.80      0.89         5\n",
      "       01229       1.00      0.67      0.80         3\n",
      "       01230       0.83      0.83      0.83         6\n",
      "       01233       0.67      0.67      0.67         3\n",
      "       01234       0.25      0.25      0.25         4\n",
      "       01235       0.67      0.29      0.40         7\n",
      "       02101       0.20      0.17      0.18         6\n",
      "       02102       0.57      0.50      0.53         8\n",
      "       02103       0.80      0.57      0.67         7\n",
      "       02104       0.25      0.20      0.22         5\n",
      "       02105       0.36      1.00      0.53         4\n",
      "       02106       0.50      0.40      0.44         5\n",
      "       02107       0.62      0.83      0.71         6\n",
      "       02108       0.83      0.45      0.59        11\n",
      "       02109       0.50      0.40      0.44         5\n",
      "       02110       0.60      0.60      0.60         5\n",
      "       02111       0.38      0.43      0.40         7\n",
      "       02112       0.20      0.33      0.25         3\n",
      "       02113       0.33      0.50      0.40         4\n",
      "       02114       0.57      0.67      0.62         6\n",
      "       02115       0.12      0.25      0.17         4\n",
      "       02117       1.00      0.50      0.67         6\n",
      "       02118       0.33      0.60      0.43         5\n",
      "       02119       0.50      0.33      0.40         3\n",
      "       02120       1.00      0.75      0.86         4\n",
      "       02121       1.00      0.80      0.89         5\n",
      "       02122       0.71      0.83      0.77         6\n",
      "       02123       0.80      0.67      0.73         6\n",
      "       02124       0.86      0.86      0.86         7\n",
      "       02125       0.50      0.75      0.60         4\n",
      "       02126       0.57      0.50      0.53         8\n",
      "       02127       0.80      1.00      0.89         4\n",
      "       02128       0.62      0.71      0.67         7\n",
      "       02129       0.86      0.67      0.75         9\n",
      "       02130       0.38      0.60      0.46         5\n",
      "       02132       0.80      1.00      0.89         4\n",
      "       02133       0.71      1.00      0.83         5\n",
      "       02134       1.00      0.67      0.80         9\n",
      "       02138       1.00      1.00      1.00         6\n",
      "       02139       0.50      0.33      0.40         3\n",
      "       02140       1.00      0.67      0.80         6\n",
      "       02201       0.80      0.80      0.80         5\n",
      "       02202       0.67      0.33      0.44         6\n",
      "       02203       0.75      0.60      0.67         5\n",
      "       02204       0.00      0.00      0.00         3\n",
      "       02205       0.50      0.43      0.46         7\n",
      "       02206       1.00      0.33      0.50         6\n",
      "       02207       0.38      0.60      0.46         5\n",
      "       02208       1.00      0.67      0.80         6\n",
      "       02209       1.00      0.75      0.86         4\n",
      "       02210       0.75      0.75      0.75         4\n",
      "       02211       1.00      0.33      0.50         9\n",
      "       02212       0.25      0.20      0.22         5\n",
      "       02213       0.30      0.60      0.40         5\n",
      "       02214       0.23      0.71      0.34         7\n",
      "       02216       0.25      0.33      0.29         3\n",
      "       02217       0.40      0.67      0.50         3\n",
      "       02218       0.78      0.70      0.74        10\n",
      "       02219       0.50      0.50      0.50         8\n",
      "       02220       0.60      0.60      0.60         5\n",
      "       02221       0.40      0.67      0.50         3\n",
      "       02222       0.25      0.25      0.25         4\n",
      "       02223       0.56      0.62      0.59         8\n",
      "       02224       0.80      0.50      0.62         8\n",
      "       02225       0.67      0.67      0.67         3\n",
      "       02226       0.33      0.50      0.40         2\n",
      "       02227       0.67      0.25      0.36         8\n",
      "       02228       0.57      1.00      0.73         4\n",
      "       02229       0.75      0.43      0.55         7\n",
      "       02230       0.75      0.75      0.75         4\n",
      "       02231       0.71      0.83      0.77         6\n",
      "       02234       0.33      0.25      0.29         4\n",
      "       02235       0.83      0.56      0.67         9\n",
      "       02241       1.00      0.88      0.93         8\n",
      "       03101       0.50      0.33      0.40         3\n",
      "       03102       0.00      0.00      0.00         6\n",
      "       03103       0.29      0.40      0.33         5\n",
      "       03104       0.38      0.38      0.38         8\n",
      "       03105       0.25      0.20      0.22         5\n",
      "       03106       1.00      0.20      0.33         5\n",
      "       03107       0.40      0.50      0.44         4\n",
      "       03108       0.50      0.44      0.47         9\n",
      "       03109       1.00      0.50      0.67         2\n",
      "       03110       0.86      1.00      0.92         6\n",
      "       03111       1.00      0.67      0.80         3\n",
      "       03112       0.33      0.40      0.36         5\n",
      "       03113       0.38      1.00      0.56         5\n",
      "       03114       0.67      0.25      0.36         8\n",
      "       03115       0.38      1.00      0.55         3\n",
      "       03116       0.75      0.50      0.60         6\n",
      "       03117       0.83      0.56      0.67         9\n",
      "       03118       0.80      0.80      0.80         5\n",
      "       03119       0.29      1.00      0.44         2\n",
      "       03120       0.60      0.60      0.60         5\n",
      "       03121       0.33      0.50      0.40         4\n",
      "       03122       0.67      0.25      0.36         8\n",
      "       03123       0.50      0.67      0.57         6\n",
      "       03124       0.71      0.71      0.71         7\n",
      "       03125       1.00      0.25      0.40         8\n",
      "       03126       0.67      0.67      0.67         3\n",
      "       03127       0.20      0.50      0.29         2\n",
      "       03128       0.33      0.14      0.20         7\n",
      "       03129       1.00      0.83      0.91         6\n",
      "       03130       0.62      1.00      0.77         5\n",
      "       03131       1.00      0.62      0.77         8\n",
      "       03135       0.62      1.00      0.77         5\n",
      "       03136       0.00      0.00      0.00         6\n",
      "       03137       0.71      0.83      0.77         6\n",
      "       03201       0.54      0.70      0.61        10\n",
      "       03202       0.50      0.38      0.43         8\n",
      "       03203       0.67      0.29      0.40         7\n",
      "       03204       0.50      0.67      0.57         3\n",
      "       03205       0.50      0.75      0.60         4\n",
      "       03206       0.50      0.80      0.62         5\n",
      "       03207       0.62      1.00      0.77         5\n",
      "       03208       1.00      0.57      0.73         7\n",
      "       03209       0.50      0.50      0.50         6\n",
      "       03210       0.43      1.00      0.60         3\n",
      "       03211       0.50      0.67      0.57         3\n",
      "       03212       0.50      0.25      0.33         4\n",
      "       03213       0.71      0.56      0.63         9\n",
      "       03214       0.50      1.00      0.67         3\n",
      "       03215       0.50      0.33      0.40         3\n",
      "       03216       0.75      0.43      0.55         7\n",
      "       03217       0.50      0.67      0.57         3\n",
      "       03218       1.00      0.70      0.82        10\n",
      "       03219       0.67      0.67      0.67         6\n",
      "       03220       0.50      0.50      0.50         4\n",
      "       03221       0.40      1.00      0.57         2\n",
      "       03222       0.80      0.67      0.73         6\n",
      "       03223       0.71      0.83      0.77         6\n",
      "       03224       0.50      0.50      0.50         2\n",
      "       03225       0.50      0.50      0.50         2\n",
      "       03226       1.00      0.83      0.91         6\n",
      "       03227       1.00      0.67      0.80         6\n",
      "       03228       0.50      0.25      0.33         4\n",
      "       03229       1.00      0.56      0.71         9\n",
      "       03230       0.86      0.86      0.86         7\n",
      "       03231       0.50      1.00      0.67         3\n",
      "       03234       0.86      1.00      0.92         6\n",
      "       03235       0.88      1.00      0.93         7\n",
      "       03236       0.79      0.73      0.76        15\n",
      "         101       0.83      1.00      0.91        10\n",
      "        1010       0.70      0.64      0.67        11\n",
      "       10107       1.00      1.00      1.00         6\n",
      "       10108       0.60      1.00      0.75         3\n",
      "       10110       0.33      1.00      0.50         3\n",
      "       10111       1.00      0.50      0.67         6\n",
      "       10112       0.67      0.22      0.33         9\n",
      "       10113       0.50      0.33      0.40         6\n",
      "       10114       0.80      0.67      0.73         6\n",
      "       10115       1.00      1.00      1.00         2\n",
      "       10116       0.00      0.00      0.00         8\n",
      "       10117       0.29      1.00      0.45         5\n",
      "       10118       0.67      0.50      0.57         4\n",
      "       10119       1.00      0.67      0.80         3\n",
      "       10121       0.67      0.50      0.57         4\n",
      "       10122       0.75      0.50      0.60         6\n",
      "        1015       0.50      1.00      0.67         1\n",
      "        1016       1.00      1.00      1.00         3\n",
      "       10202       0.95      0.73      0.83        26\n",
      "       10203       0.75      0.38      0.50         8\n",
      "       10213       1.00      0.75      0.86         4\n",
      "       10216       0.52      0.79      0.63        14\n",
      "       10217       0.80      1.00      0.89         8\n",
      "       10218       1.00      1.00      1.00         4\n",
      "       10219       0.50      0.67      0.57         3\n",
      "       10220       1.00      1.00      1.00         3\n",
      "       10222       0.86      0.63      0.73        19\n",
      "       10224       1.00      0.80      0.89         5\n",
      "       10225       1.00      0.80      0.89         5\n",
      "       10226       1.00      1.00      1.00         9\n",
      "       10227       0.14      0.25      0.18         8\n",
      "       10228       0.00      0.00      0.00         2\n",
      "       10229       0.33      0.40      0.36         5\n",
      "       10230       0.10      0.50      0.17         2\n",
      "       10231       0.75      0.33      0.46         9\n",
      "       10235       0.50      0.12      0.20         8\n",
      "       10237       0.42      0.62      0.50         8\n",
      "       10238       0.22      0.25      0.24         8\n",
      "       10239       0.12      0.17      0.14         6\n",
      "       10243       0.33      0.33      0.33         3\n",
      "       10244       0.58      0.58      0.58        12\n",
      "       10245       1.00      0.56      0.71         9\n",
      "       10246       1.00      0.60      0.75         5\n",
      "       10247       0.45      1.00      0.62         9\n",
      "       10248       0.74      0.71      0.72        24\n",
      "       10249       0.00      0.00      0.00         7\n",
      "         103       1.00      0.50      0.67         4\n",
      "         106       1.00      1.00      1.00         3\n",
      "         109       0.73      1.00      0.85        11\n",
      "       11101       0.44      0.74      0.55        19\n",
      "       11102       0.67      0.56      0.61        18\n",
      "       11103       0.86      0.63      0.73        19\n",
      "       11104       0.83      0.62      0.71        24\n",
      "       11105       0.52      0.69      0.59        16\n",
      "       11106       0.89      0.80      0.84        30\n",
      "       11107       1.00      0.74      0.85        19\n",
      "       11108       0.67      0.82      0.74        17\n",
      "       11109       0.52      0.71      0.60        17\n",
      "       11110       0.68      0.72      0.70        18\n",
      "       11111       0.78      0.74      0.76        19\n",
      "       11117       1.00      0.71      0.83         7\n",
      "        1112       0.00      0.00      0.00         3\n",
      "        1113       0.25      1.00      0.40         5\n",
      "        1116       0.00      0.00      0.00         3\n",
      "        1117       1.00      0.50      0.67         2\n",
      "       11201       0.76      0.89      0.82        18\n",
      "       11202       0.59      1.00      0.74        10\n",
      "       11203       0.62      0.45      0.53        11\n",
      "       11204       0.33      0.25      0.29         4\n",
      "       11205       1.00      0.50      0.67        10\n",
      "       11206       0.80      0.57      0.67         7\n",
      "       11207       1.00      0.75      0.86         8\n",
      "       11208       0.75      0.75      0.75         4\n",
      "       11209       1.00      1.00      1.00         5\n",
      "       11210       0.80      1.00      0.89         8\n",
      "       11215       1.00      1.00      1.00         5\n",
      "        1125       0.00      0.00      0.00         9\n",
      "        1126       1.00      0.71      0.83         7\n",
      "        1127       0.00      0.00      0.00         1\n",
      "         113       0.50      0.33      0.40         3\n",
      "        1130       1.00      0.12      0.22         8\n",
      "         114       0.67      1.00      0.80         8\n",
      "         115       1.00      0.20      0.33         5\n",
      "         116       1.00      1.00      1.00         4\n",
      "         117       1.00      1.00      1.00         4\n",
      "         118       0.38      1.00      0.56         5\n",
      "        1210       0.78      0.93      0.85        15\n",
      "       12101       1.00      0.42      0.59        12\n",
      "       12102       0.62      1.00      0.77         5\n",
      "       12103       0.82      0.90      0.86        10\n",
      "       12104       1.00      0.92      0.96        12\n",
      "       12105       0.71      0.71      0.71         7\n",
      "       12106       0.72      0.93      0.81        14\n",
      "       12107       1.00      0.40      0.57         5\n",
      "       12108       1.00      0.83      0.91         6\n",
      "       12109       0.57      1.00      0.73         4\n",
      "       12110       1.00      0.50      0.67         6\n",
      "       12111       0.80      1.00      0.89         4\n",
      "       12112       0.67      0.86      0.75         7\n",
      "       12117       1.00      1.00      1.00         3\n",
      "        1215       0.75      1.00      0.86         6\n",
      "        1216       0.80      0.80      0.80         5\n",
      "        1217       0.75      0.60      0.67         5\n",
      "        1218       0.89      1.00      0.94         8\n",
      "         122       0.78      1.00      0.88         7\n",
      "       12201       0.90      0.90      0.90        21\n",
      "       12202       1.00      1.00      1.00        18\n",
      "       12203       0.88      1.00      0.93         7\n",
      "       12204       1.00      0.85      0.92        13\n",
      "       12205       0.80      1.00      0.89         4\n",
      "       12206       0.85      0.85      0.85        20\n",
      "       12207       1.00      1.00      1.00         3\n",
      "       12208       1.00      1.00      1.00         8\n",
      "       12209       1.00      1.00      1.00         5\n",
      "       12210       1.00      1.00      1.00         4\n",
      "       12211       1.00      0.83      0.91         6\n",
      "       12212       0.89      1.00      0.94         8\n",
      "       12216       1.00      1.00      1.00         7\n",
      "       12217       1.00      1.00      1.00        13\n",
      "        1222       0.75      1.00      0.86         3\n",
      "        1226       1.00      0.50      0.67         2\n",
      "        1227       0.67      1.00      0.80         2\n",
      "        1228       1.00      1.00      1.00         6\n",
      "        1229       1.00      0.50      0.67         8\n",
      "         123       0.80      0.57      0.67         7\n",
      "         124       0.82      0.90      0.86        10\n",
      "         125       1.00      0.83      0.91        12\n",
      "         126       0.57      0.67      0.62         6\n",
      "         127       0.71      0.83      0.77         6\n",
      "         128       0.58      0.88      0.70         8\n",
      "         129       0.83      0.45      0.59        11\n",
      "         131       0.80      0.67      0.73        12\n",
      "       13101       0.48      0.81      0.60        16\n",
      "       13102       0.83      0.83      0.83        23\n",
      "       13103       0.50      0.71      0.59         7\n",
      "       13104       0.80      0.40      0.53        20\n",
      "       13105       1.00      1.00      1.00         5\n",
      "       13106       1.00      0.83      0.91         6\n",
      "       13107       1.00      0.67      0.80         6\n",
      "       13108       0.50      1.00      0.67         2\n",
      "        1311       0.60      0.75      0.67         4\n",
      "       13112       0.75      0.60      0.67         5\n",
      "       13113       1.00      0.50      0.67         6\n",
      "       13116       1.00      0.40      0.57        10\n",
      "        1312       0.00      0.00      0.00         2\n",
      "        1313       0.40      1.00      0.57         4\n",
      "        1314       1.00      0.50      0.67         2\n",
      "         132       0.75      0.50      0.60         6\n",
      "       13201       0.85      1.00      0.92        17\n",
      "       13202       0.90      0.86      0.88        22\n",
      "       13203       0.94      0.76      0.84        21\n",
      "       13204       0.76      0.93      0.84        14\n",
      "       13205       1.00      0.67      0.80         3\n",
      "       13206       0.67      1.00      0.80         2\n",
      "       13214       0.00      0.00      0.00         1\n",
      "       13216       1.00      1.00      1.00         4\n",
      "       13217       1.00      1.00      1.00         4\n",
      "         133       0.50      0.80      0.62         5\n",
      "         134       0.83      0.71      0.77        14\n",
      "         135       1.00      0.25      0.40         4\n",
      "         136       0.67      0.40      0.50         5\n",
      "       20101       0.14      0.25      0.18         4\n",
      "       20103       0.75      0.56      0.64        16\n",
      "       20104       0.68      0.85      0.76        20\n",
      "       20106       1.00      0.81      0.90        16\n",
      "       20107       0.82      0.90      0.86        10\n",
      "       20108       0.62      0.62      0.62         8\n",
      "       20110       1.00      0.57      0.73         7\n",
      "       20111       1.00      0.73      0.84        11\n",
      "       20112       0.69      0.85      0.76        13\n",
      "       20113       0.80      0.67      0.73         6\n",
      "       20117       0.83      0.71      0.77         7\n",
      "       20118       0.60      0.60      0.60         5\n",
      "       20119       0.71      0.56      0.63         9\n",
      "       20120       0.67      0.50      0.57        12\n",
      "       20121       0.82      0.88      0.85        16\n",
      "       20122       0.90      0.90      0.90        20\n",
      "       20124       0.86      1.00      0.92        18\n",
      "       20125       0.70      0.78      0.74         9\n",
      "       20126       0.88      0.78      0.82         9\n",
      "       20127       0.78      0.74      0.76        19\n",
      "       20128       0.57      0.50      0.53        16\n",
      "       20129       0.89      0.89      0.89         9\n",
      "       20130       1.00      0.58      0.74        12\n",
      "       20132       0.75      0.60      0.67        10\n",
      "       20133       0.80      0.57      0.67         7\n",
      "       20134       0.80      0.62      0.70        13\n",
      "       20135       0.25      0.12      0.17         8\n",
      "       20136       0.00      0.00      0.00         2\n",
      "       20137       0.43      0.60      0.50         5\n",
      "       20138       0.56      0.50      0.53        10\n",
      "       20139       0.59      0.73      0.65        22\n",
      "       20140       0.71      0.88      0.79        25\n",
      "       20201       0.76      1.00      0.87        13\n",
      "       20202       0.79      0.79      0.79        14\n",
      "       20203       0.75      0.43      0.55         7\n",
      "       20204       0.50      0.40      0.44         5\n",
      "       20205       0.90      0.69      0.78        13\n",
      "       20206       1.00      0.50      0.67         2\n",
      "       20207       0.77      1.00      0.87        10\n",
      "       20208       0.75      1.00      0.86        12\n",
      "       20209       0.67      0.67      0.67         3\n",
      "       20211       0.40      0.67      0.50         6\n",
      "       20214       0.41      0.75      0.53        16\n",
      "       20215       0.40      0.50      0.44         4\n",
      "       21101       0.88      0.88      0.88         8\n",
      "       21102       0.86      0.60      0.71        10\n",
      "       21103       0.50      0.75      0.60         4\n",
      "       21104       0.00      0.00      0.00         3\n",
      "       21105       0.77      0.53      0.62        19\n",
      "       21106       0.86      0.75      0.80         8\n",
      "       21107       0.83      0.83      0.83        12\n",
      "       21108       0.82      0.60      0.69        15\n",
      "       21109       0.69      0.64      0.67        14\n",
      "       21110       0.69      0.90      0.78        10\n",
      "       21111       0.80      0.80      0.80        10\n",
      "       21112       0.82      0.90      0.86        10\n",
      "       21113       0.80      0.67      0.73        12\n",
      "       21114       0.94      0.89      0.91        18\n",
      "       21115       0.91      0.91      0.91        11\n",
      "       21116       0.88      1.00      0.93         7\n",
      "       21117       0.60      0.38      0.46         8\n",
      "       21118       0.67      0.75      0.71         8\n",
      "       21119       0.50      0.75      0.60         4\n",
      "       21120       1.00      0.50      0.67         4\n",
      "       21121       0.86      0.86      0.86         7\n",
      "       21122       0.86      1.00      0.92         6\n",
      "       21123       0.75      0.75      0.75         4\n",
      "       21124       0.88      0.88      0.88         8\n",
      "       21125       0.86      0.86      0.86        14\n",
      "       21126       0.85      0.85      0.85        13\n",
      "       21127       0.88      0.78      0.82         9\n",
      "       21128       0.82      0.90      0.86        10\n",
      "       21129       0.40      0.67      0.50         6\n",
      "       21130       0.82      0.82      0.82        11\n",
      "       21131       0.80      0.80      0.80         5\n",
      "       21132       0.78      0.88      0.82         8\n",
      "       21133       0.75      1.00      0.86         6\n",
      "       21134       0.80      0.86      0.83        14\n",
      "       21135       1.00      0.60      0.75        10\n",
      "       21136       0.67      0.89      0.76         9\n",
      "       21137       1.00      0.82      0.90        11\n",
      "       21140       0.70      0.93      0.80        15\n",
      "       21141       0.67      0.57      0.62         7\n",
      "       21143       0.75      0.83      0.79        18\n",
      "       21201       1.00      0.83      0.91         6\n",
      "       21202       1.00      0.75      0.86         4\n",
      "       21203       1.00      0.89      0.94         9\n",
      "       21204       1.00      0.83      0.91         6\n",
      "       21205       1.00      1.00      1.00         5\n",
      "       21206       1.00      0.80      0.89        10\n",
      "       21207       1.00      0.75      0.86         8\n",
      "       21209       1.00      1.00      1.00         4\n",
      "       21212       0.67      1.00      0.80         2\n",
      "       21214       0.83      0.83      0.83         6\n",
      "       21215       0.50      0.33      0.40         3\n",
      "       21216       0.83      0.71      0.77         7\n",
      "       21217       1.00      1.00      1.00         3\n",
      "       21218       0.73      1.00      0.84         8\n",
      "       21219       1.00      1.00      1.00         3\n",
      "       21220       1.00      1.00      1.00         3\n",
      "       21221       1.00      0.50      0.67         6\n",
      "       21223       0.71      1.00      0.83         5\n",
      "       21224       0.92      0.96      0.94        23\n",
      "       21225       1.00      1.00      1.00         2\n",
      "       22101       0.44      0.80      0.57         5\n",
      "       22102       0.50      0.50      0.50        14\n",
      "       22103       0.60      0.67      0.63         9\n",
      "       22104       0.75      0.67      0.71         9\n",
      "       22105       0.67      0.55      0.60        11\n",
      "       22106       0.67      0.86      0.75         7\n",
      "       22107       0.91      0.77      0.83        13\n",
      "       22108       1.00      0.50      0.67         4\n",
      "       22109       0.50      1.00      0.67         2\n",
      "       22110       1.00      1.00      1.00         4\n",
      "       22111       0.75      0.75      0.75         4\n",
      "       22112       0.67      1.00      0.80         4\n",
      "       22113       1.00      0.82      0.90        11\n",
      "       22114       1.00      0.67      0.80         6\n",
      "       22115       0.57      0.80      0.67         5\n",
      "       22116       0.38      0.60      0.46         5\n",
      "       22117       0.67      0.57      0.62         7\n",
      "       22118       0.79      0.61      0.69        18\n",
      "       22119       0.80      0.80      0.80        10\n",
      "       22120       0.70      0.88      0.78         8\n",
      "       22121       0.40      0.50      0.44         4\n",
      "       22122       0.63      0.71      0.67        17\n",
      "       22123       0.67      0.80      0.73         5\n",
      "       22124       0.83      0.71      0.77         7\n",
      "       22125       0.71      1.00      0.83         5\n",
      "       22126       0.67      0.57      0.62         7\n",
      "       22127       0.90      0.82      0.86        11\n",
      "       22128       0.86      0.75      0.80         8\n",
      "       22129       0.75      0.64      0.69        14\n",
      "       22130       0.50      0.67      0.57         6\n",
      "       22131       0.50      0.50      0.50         6\n",
      "       22132       0.69      0.79      0.73        14\n",
      "       22133       0.67      1.00      0.80         4\n",
      "       22134       1.00      0.83      0.91         6\n",
      "       22135       1.00      0.44      0.62         9\n",
      "       22136       0.69      0.69      0.69        13\n",
      "       22137       0.78      0.78      0.78         9\n",
      "       22138       0.73      0.89      0.80         9\n",
      "       22139       0.93      1.00      0.97        14\n",
      "       22140       0.88      0.70      0.78        10\n",
      "       22143       1.00      0.80      0.89        10\n",
      "       22144       0.75      0.60      0.67         5\n",
      "       22201       1.00      1.00      1.00         2\n",
      "       22202       1.00      1.00      1.00         2\n",
      "       22204       1.00      1.00      1.00         2\n",
      "       22205       1.00      0.33      0.50         6\n",
      "       22206       0.50      1.00      0.67         4\n",
      "       22207       1.00      1.00      1.00         1\n",
      "       22208       1.00      1.00      1.00         1\n",
      "       22209       1.00      0.67      0.80         3\n",
      "       22210       1.00      1.00      1.00         3\n",
      "       22213       0.75      1.00      0.86         3\n",
      "       22214       1.00      0.67      0.80         6\n",
      "       22217       1.00      1.00      1.00         4\n",
      "       22220       1.00      1.00      1.00         2\n",
      "       23101       0.90      0.82      0.86        11\n",
      "       23102       0.75      0.82      0.78        11\n",
      "       23103       0.67      0.57      0.62         7\n",
      "       23104       0.67      0.29      0.40         7\n",
      "       23105       0.50      0.38      0.43         8\n",
      "       23106       0.53      0.73      0.62        11\n",
      "       23107       0.43      0.83      0.57        12\n",
      "       23108       0.91      0.67      0.77        15\n",
      "       23109       0.82      1.00      0.90         9\n",
      "       23110       0.73      0.73      0.73        11\n",
      "       23111       0.62      0.71      0.67         7\n",
      "       23112       0.50      0.33      0.40         3\n",
      "       23113       0.75      0.75      0.75         8\n",
      "       23114       0.56      0.56      0.56         9\n",
      "       23115       1.00      0.60      0.75        10\n",
      "       23116       0.80      0.80      0.80         5\n",
      "       23117       0.79      0.79      0.79        14\n",
      "       23118       0.43      0.75      0.55         4\n",
      "       23119       0.60      0.50      0.55         6\n",
      "       23120       0.50      0.75      0.60         4\n",
      "       23121       0.33      0.40      0.36         5\n",
      "       23122       0.75      0.64      0.69        14\n",
      "       23123       1.00      0.67      0.80         6\n",
      "       23124       0.70      0.70      0.70        10\n",
      "       23125       0.61      0.85      0.71        13\n",
      "       23126       0.62      0.67      0.65        15\n",
      "       23127       0.75      0.86      0.80         7\n",
      "       23128       0.83      0.83      0.83         6\n",
      "       23129       0.79      0.73      0.76        15\n",
      "       23130       0.75      0.55      0.63        11\n",
      "       23131       0.75      0.67      0.71         9\n",
      "       23132       0.60      0.50      0.55         6\n",
      "       23133       0.82      0.82      0.82        11\n",
      "       23134       1.00      1.00      1.00         4\n",
      "       23135       1.00      1.00      1.00         2\n",
      "       23136       0.89      0.94      0.91        17\n",
      "       23137       1.00      0.83      0.91        12\n",
      "       23140       0.68      0.83      0.75        18\n",
      "       23141       0.83      0.45      0.59        11\n",
      "       23143       1.00      0.80      0.89        10\n",
      "       23201       0.93      0.93      0.93        15\n",
      "       23202       1.00      1.00      1.00         1\n",
      "       23203       0.64      0.78      0.70         9\n",
      "       23204       1.00      0.50      0.67         6\n",
      "       23205       1.00      1.00      1.00         7\n",
      "       23206       1.00      1.00      1.00         5\n",
      "       23207       1.00      0.67      0.80         6\n",
      "       23208       0.60      0.60      0.60         5\n",
      "       23209       0.57      1.00      0.73         4\n",
      "       23210       0.50      0.60      0.55         5\n",
      "       23211       0.86      0.75      0.80         8\n",
      "       23212       0.67      0.50      0.57         4\n",
      "       23213       0.50      1.00      0.67         4\n",
      "       23214       0.62      0.71      0.67         7\n",
      "       23215       1.00      0.67      0.80         6\n",
      "       23216       1.00      0.60      0.75        10\n",
      "       23217       0.50      1.00      0.67         2\n",
      "       23218       0.33      0.50      0.40         4\n",
      "       23219       0.83      0.71      0.77         7\n",
      "       23220       0.67      0.50      0.57         4\n",
      "       23221       0.60      0.75      0.67         4\n",
      "       23222       0.80      0.80      0.80         5\n",
      "       23223       0.86      0.86      0.86         7\n",
      "       23224       1.00      1.00      1.00         1\n",
      "       23225       1.00      1.00      1.00         4\n",
      "       23226       0.86      1.00      0.92         6\n",
      "       23227       0.80      0.67      0.73         6\n",
      "       23228       0.83      0.83      0.83         6\n",
      "       23229       0.67      1.00      0.80         4\n",
      "       23230       0.83      0.71      0.77         7\n",
      "       23231       1.00      0.50      0.67         4\n",
      "       23232       0.80      1.00      0.89         4\n",
      "       23233       1.00      0.50      0.67         4\n",
      "       23234       0.57      0.67      0.62         6\n",
      "       23235       0.60      0.50      0.55         6\n",
      "       23236       0.70      0.88      0.78         8\n",
      "       23237       1.00      1.00      1.00         4\n",
      "       23238       1.00      0.75      0.86         4\n",
      "       23239       0.62      1.00      0.77         5\n",
      "       23240       1.00      0.50      0.67         2\n",
      "       23241       0.86      1.00      0.92         6\n",
      "       23242       1.00      0.80      0.89        10\n",
      "       23243       0.56      0.71      0.63         7\n",
      "       23244       0.75      0.86      0.80         7\n",
      "       23245       1.00      0.56      0.71         9\n",
      "       23246       0.57      0.80      0.67         5\n",
      "       23247       1.00      0.86      0.92         7\n",
      "       23248       0.75      1.00      0.86         3\n",
      "       23250       1.00      0.75      0.86         4\n",
      "       23253       1.00      0.83      0.91         6\n",
      "       23254       0.00      0.00      0.00         0\n",
      "       24101       0.50      0.75      0.60         4\n",
      "       24102       0.00      0.00      0.00         7\n",
      "       24103       1.00      0.17      0.29         6\n",
      "       24104       1.00      0.30      0.46        10\n",
      "       24105       1.00      0.50      0.67         4\n",
      "       24106       1.00      0.33      0.50         3\n",
      "       24107       0.60      0.75      0.67         4\n",
      "       24108       1.00      0.50      0.67         6\n",
      "       24109       1.00      0.50      0.67         4\n",
      "       24110       0.80      0.44      0.57         9\n",
      "       24111       0.03      0.33      0.06         6\n",
      "       24112       0.50      0.40      0.44         5\n",
      "       24113       1.00      0.67      0.80         6\n",
      "       24114       0.80      0.67      0.73         6\n",
      "       24115       1.00      0.38      0.55         8\n",
      "       24116       0.67      0.40      0.50         5\n",
      "       24117       0.67      0.50      0.57         4\n",
      "       24118       1.00      1.00      1.00         2\n",
      "       24119       1.00      0.40      0.57         5\n",
      "       24120       0.50      0.33      0.40         3\n",
      "       24121       0.43      0.60      0.50         5\n",
      "       24122       1.00      0.25      0.40         8\n",
      "       24123       1.00      0.67      0.80         3\n",
      "       24124       1.00      0.50      0.67         4\n",
      "       24125       1.00      0.75      0.86         4\n",
      "       24126       1.00      0.60      0.75         5\n",
      "       24127       0.75      0.50      0.60         6\n",
      "       24128       1.00      0.67      0.80         6\n",
      "       24129       0.75      0.50      0.60         6\n",
      "       24130       1.00      0.60      0.75         5\n",
      "       24131       1.00      0.25      0.40         8\n",
      "       24132       1.00      0.43      0.60         7\n",
      "       24133       1.00      0.67      0.80         3\n",
      "       24134       0.10      1.00      0.18         5\n",
      "       24135       1.00      0.57      0.73         7\n",
      "       24136       0.00      0.00      0.00         4\n",
      "       24137       1.00      0.83      0.91         6\n",
      "       24138       1.00      0.57      0.73         7\n",
      "       24139       0.50      0.33      0.40         3\n",
      "       24140       1.00      0.17      0.29         6\n",
      "       24141       1.00      1.00      1.00         4\n",
      "       24142       1.00      0.67      0.80         3\n",
      "       24143       1.00      0.62      0.77         8\n",
      "       24146       1.00      0.67      0.80         6\n",
      "       24147       1.00      0.40      0.57         5\n",
      "       24201       1.00      1.00      1.00         2\n",
      "       24202       1.00      1.00      1.00         1\n",
      "       24203       1.00      1.00      1.00         3\n",
      "       24204       1.00      1.00      1.00         2\n",
      "       24205       1.00      1.00      1.00         4\n",
      "       24206       0.50      1.00      0.67         1\n",
      "       24207       1.00      0.50      0.67         2\n",
      "       24208       0.67      1.00      0.80         2\n",
      "       24209       1.00      1.00      1.00         5\n",
      "       24210       1.00      0.50      0.67         2\n",
      "       24211       0.50      1.00      0.67         1\n",
      "       24212       0.75      0.75      0.75         4\n",
      "       24213       1.00      0.75      0.86         4\n",
      "       24215       1.00      1.00      1.00         2\n",
      "       24216       1.00      1.00      1.00         2\n",
      "       24218       0.75      1.00      0.86         3\n",
      "       24219       1.00      0.50      0.67         2\n",
      "\n",
      "    accuracy                           0.69      4985\n",
      "   macro avg       0.72      0.68      0.67      4985\n",
      "weighted avg       0.75      0.69      0.69      4985\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.6906720160481444\n",
      "Precision:  0.7465028557128497\n",
      "Recall:  0.6952746365105008\n",
      "F1:  0.6935610161362135\n"
     ]
    }
   ],
   "source": [
    "# svc oob metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SVC_oob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.690672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.746503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.695275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.693561</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       SVC_oob\n",
       "Accuracy              0.690672\n",
       "Precision (weighted)  0.746503\n",
       "Recall (weighted)     0.695275\n",
       "F1 (weighted)         0.693561"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "SVC_oob = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                       precision_score(y_test, y_preds, average='weighted'),\n",
    "                       recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)),\n",
    "                       f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "SVC_oob = SVC_oob.rename(columns={0: 'SVC_oob'},\n",
    "                        index={0: 'Accuracy', 1: 'Precision (weighted)', 2: 'Recall (weighted)', 3: 'F1 (weighted)'})\n",
    "\n",
    "SVC_oob.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "      <th>SVCpreds_oob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10837</th>\n",
       "      <td>02117</td>\n",
       "      <td>02118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1060</th>\n",
       "      <td>23215</td>\n",
       "      <td>23215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18242</th>\n",
       "      <td>00224</td>\n",
       "      <td>00224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7195</th>\n",
       "      <td>01225</td>\n",
       "      <td>01224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1227</th>\n",
       "      <td>24203</td>\n",
       "      <td>24203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2419</th>\n",
       "      <td>23253</td>\n",
       "      <td>23254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13951</th>\n",
       "      <td>11105</td>\n",
       "      <td>11103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4196</th>\n",
       "      <td>21130</td>\n",
       "      <td>21129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6495</th>\n",
       "      <td>12207</td>\n",
       "      <td>12207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18510</th>\n",
       "      <td>20138</td>\n",
       "      <td>20138</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      location SVCpreds_oob\n",
       "10837    02117        02118\n",
       "1060     23215        23215\n",
       "18242    00224        00224\n",
       "7195     01225        01224\n",
       "1227     24203        24203\n",
       "2419     23253        23254\n",
       "13951    11105        11103\n",
       "4196     21130        21129\n",
       "6495     12207        12207\n",
       "18510    20138        20138"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe comparing predictions to y_test 'ground truth'\n",
    "y_test = pd.DataFrame(y_test)\n",
    "y_test.head()\n",
    "\n",
    "# predictions dataframe\n",
    "y_preds = pd.DataFrame(y_preds)\n",
    "# rename prediction column\n",
    "y_preds = y_preds.rename(columns={0: 'SVCpreds_oob'})\n",
    "\n",
    "# comparison dataframe\n",
    "svc_oob_compare = pd.concat([y_test, y_preds.set_index(y_test.index)], axis=1)\n",
    "svc_oob_compare.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Results\n",
    "Random Forest\n",
    "Accuracy: 0.8138415245737212\n",
    "Precision: 0.8586923106396787\n",
    "Recall: 0.819264943457189\n",
    "F1: 0.8161600475081973\n",
    "\n",
    "SVC\n",
    "Accuracy: 0.6906720160481444\n",
    "Precision: 0.7465028557128497\n",
    "Recall: 0.6952746365105008\n",
    "F1: 0.6935610161362135\n",
    "\n",
    "Random Forest is top model for oob dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model for Individual Buildings\n",
    "\n",
    "-BUILDING 0-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "# features\n",
    "X = Building0.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building0['location']\n",
    "\n",
    "# train test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state = 123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>WAP001</th>\n",
       "      <th>WAP002</th>\n",
       "      <th>WAP007</th>\n",
       "      <th>WAP008</th>\n",
       "      <th>WAP009</th>\n",
       "      <th>WAP013</th>\n",
       "      <th>WAP014</th>\n",
       "      <th>WAP017</th>\n",
       "      <th>WAP018</th>\n",
       "      <th>WAP019</th>\n",
       "      <th>...</th>\n",
       "      <th>WAP443</th>\n",
       "      <th>WAP447</th>\n",
       "      <th>WAP452</th>\n",
       "      <th>WAP459</th>\n",
       "      <th>WAP475</th>\n",
       "      <th>WAP494</th>\n",
       "      <th>WAP500</th>\n",
       "      <th>WAP508</th>\n",
       "      <th>WAP515</th>\n",
       "      <th>WAP519</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8620</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-93</td>\n",
       "      <td>100</td>\n",
       "      <td>-75</td>\n",
       "      <td>-72</td>\n",
       "      <td>-67</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9048</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-92</td>\n",
       "      <td>100</td>\n",
       "      <td>-88</td>\n",
       "      <td>-75</td>\n",
       "      <td>-73</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8226</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-96</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-71</td>\n",
       "      <td>-71</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17929</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>-63</td>\n",
       "      <td>-63</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16670</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 200 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       WAP001  WAP002  WAP007  WAP008  WAP009  WAP013  WAP014  WAP017  WAP018  \\\n",
       "8620      100     100     -93     100     -75     -72     -67     100     100   \n",
       "9048      100     100     -92     100     -88     -75     -73     100     100   \n",
       "8226      100     100     -96     100     100     -71     -71     100     100   \n",
       "17929     100     100     100     100     100     -63     -63     100     100   \n",
       "16670     100     100     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP019  ...  WAP443  WAP447  WAP452  WAP459  WAP475  WAP494  WAP500  \\\n",
       "8620      100  ...     100     100     100     100     100     100     100   \n",
       "9048      100  ...     100     100     100     100     100     100     100   \n",
       "8226      100  ...     100     100     100     100     100     100     100   \n",
       "17929     100  ...     100     100     100     100     100     100     100   \n",
       "16670     100  ...     100     100     100     100     100     100     100   \n",
       "\n",
       "       WAP508  WAP515  WAP519  \n",
       "8620      100     100     100  \n",
       "9048      100     100     100  \n",
       "8226      100     100     100  \n",
       "17929     100     100     100  \n",
       "16670     100     100     100  \n",
       "\n",
       "[5 rows x 200 columns]"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 3936 entries, 8620 to 16829\n",
      "Columns: 200 entries, WAP001 to WAP519\n",
      "dtypes: int64(200)\n",
      "memory usage: 6.0 MB\n"
     ]
    }
   ],
   "source": [
    "X_train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "# prepare models\n",
    "algos_Class = []\n",
    "algos_Class.append(('Decision Tree', DecisionTreeClassifier()))\n",
    "algos_Class.append(('Random Forest', RandomForestClassifier()))\n",
    "algos_Class.append(('Support Vector', SVC(kernel='rbf')))\n",
    "algos_Class.append(('K Nearest Neighbors', KNeighborsClassifier()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "# evaluate each model in turn on Building0\n",
    "results = []\n",
    "names = []\n",
    "for name, model in algos_Class:\n",
    "    result = cross_val_score(model, X, y, cv=3, scoring='accuracy')\n",
    "    names.append(name)\n",
    "    results.append(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree 0.4374513871872363 0.16193319558130936\n",
      "Random Forest 0.6736977320373546 0.20866486547227314\n",
      "Support Vector 0.4557439625364153 0.18261042239650624\n",
      "K Nearest Neighbors 0.43422200441068365 0.19887551867467318\n"
     ]
    }
   ],
   "source": [
    "# cross validation results\n",
    "for i in range(len(names)):\n",
    "    print(names[i], results[i].mean(), results[i].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# boxplot algorithm comparison\n",
    "fig = plt.figure()\n",
    "fig.suptitle('Algorithm Comparison')\n",
    "ax = fig.add_subplot(111)\n",
    "plt.boxplot(results)\n",
    "ax.set_xticklabels(names)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.7677075399847677)"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning random forest Building 0\n",
    "rfB0 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=200,\n",
    "                              n_jobs=-1,\n",
    "                             random_state=123)\n",
    "rf_B0 = rfB0.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = rf_B0.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       00102       1.00      1.00      1.00         5\n",
      "       00106       1.00      1.00      1.00         1\n",
      "       00107       1.00      1.00      1.00         1\n",
      "       00110       1.00      0.75      0.86         4\n",
      "       00111       0.75      0.75      0.75         4\n",
      "       00112       1.00      0.75      0.86         4\n",
      "       00113       1.00      0.88      0.93         8\n",
      "       00114       1.00      0.67      0.80         3\n",
      "       00115       0.50      0.75      0.60         4\n",
      "       00116       0.67      0.40      0.50         5\n",
      "       00117       0.00      0.00      0.00         0\n",
      "       00118       0.75      0.60      0.67         5\n",
      "       00119       1.00      0.62      0.77         8\n",
      "       00120       0.62      1.00      0.76         8\n",
      "       00121       1.00      0.62      0.77         8\n",
      "       00122       1.00      0.67      0.80         6\n",
      "       00123       0.57      1.00      0.73         4\n",
      "       00125       0.00      0.00      0.00         3\n",
      "       00126       1.00      1.00      1.00         3\n",
      "       00127       0.83      1.00      0.91         5\n",
      "       00128       0.86      1.00      0.92         6\n",
      "       00129       1.00      0.75      0.86         4\n",
      "       00130       0.67      1.00      0.80         2\n",
      "       00131       1.00      0.25      0.40         4\n",
      "       00132       0.62      1.00      0.77         5\n",
      "       00133       0.90      0.82      0.86        11\n",
      "       00134       0.62      0.89      0.73         9\n",
      "       00201       1.00      0.38      0.55         8\n",
      "       00202       0.67      1.00      0.80         8\n",
      "       00208       1.00      0.67      0.80         6\n",
      "       00209       1.00      1.00      1.00         7\n",
      "       00211       1.00      1.00      1.00         3\n",
      "       00212       1.00      1.00      1.00         3\n",
      "       00213       1.00      0.83      0.91         6\n",
      "       00214       0.75      1.00      0.86         3\n",
      "       00215       1.00      1.00      1.00         2\n",
      "       00216       1.00      0.50      0.67         4\n",
      "       00218       0.50      1.00      0.67         2\n",
      "       00219       1.00      0.50      0.67         6\n",
      "       00220       1.00      1.00      1.00         7\n",
      "       00222       0.75      1.00      0.86         6\n",
      "       00224       1.00      0.57      0.73         7\n",
      "       00225       0.86      1.00      0.92         6\n",
      "       00226       1.00      0.67      0.80         3\n",
      "       00227       0.67      1.00      0.80         2\n",
      "       00229       0.75      0.60      0.67         5\n",
      "       00230       0.40      0.67      0.50         3\n",
      "       00231       0.80      1.00      0.89         4\n",
      "       00232       0.80      1.00      0.89         4\n",
      "       00233       1.00      0.60      0.75         5\n",
      "       00234       0.83      0.83      0.83         6\n",
      "       00235       1.00      0.86      0.92         7\n",
      "       00236       0.57      1.00      0.73         4\n",
      "       00237       0.50      1.00      0.67         3\n",
      "       01101       0.33      0.67      0.44         3\n",
      "       01102       0.80      0.80      0.80        10\n",
      "       01103       0.33      0.50      0.40         2\n",
      "       01104       1.00      0.86      0.92         7\n",
      "       01105       1.00      0.67      0.80         6\n",
      "       01106       0.50      1.00      0.67         6\n",
      "       01107       0.90      0.82      0.86        11\n",
      "       01108       0.82      0.90      0.86        10\n",
      "       01109       0.83      0.71      0.77         7\n",
      "       01110       0.62      0.83      0.71         6\n",
      "       01111       1.00      0.75      0.86         4\n",
      "       01112       0.60      0.60      0.60         5\n",
      "       01113       0.80      0.50      0.62         8\n",
      "       01114       1.00      0.50      0.67         4\n",
      "       01115       0.50      1.00      0.67         1\n",
      "       01116       0.83      1.00      0.91         5\n",
      "       01117       1.00      1.00      1.00         6\n",
      "       01118       0.83      1.00      0.91         5\n",
      "       01119       1.00      0.86      0.92         7\n",
      "       01120       0.91      1.00      0.95        10\n",
      "       01121       1.00      0.75      0.86         4\n",
      "       01122       0.67      1.00      0.80         4\n",
      "       01123       0.71      0.62      0.67         8\n",
      "       01124       0.56      0.83      0.67         6\n",
      "       01125       0.50      0.40      0.44         5\n",
      "       01126       1.00      0.50      0.67         6\n",
      "       01127       1.00      0.67      0.80         3\n",
      "       01128       1.00      1.00      1.00         6\n",
      "       01129       1.00      1.00      1.00         3\n",
      "       01130       1.00      1.00      1.00         4\n",
      "       01136       1.00      1.00      1.00         2\n",
      "       01137       1.00      1.00      1.00         1\n",
      "       01138       1.00      0.60      0.75         5\n",
      "       01201       0.83      1.00      0.91         5\n",
      "       01202       1.00      1.00      1.00         4\n",
      "       01203       1.00      0.83      0.91         6\n",
      "       01204       1.00      1.00      1.00         6\n",
      "       01205       0.86      1.00      0.92         6\n",
      "       01206       1.00      0.83      0.91         6\n",
      "       01207       1.00      0.83      0.91         6\n",
      "       01208       0.60      1.00      0.75         3\n",
      "       01209       1.00      0.83      0.91         6\n",
      "       01210       0.80      1.00      0.89         4\n",
      "       01211       1.00      1.00      1.00         5\n",
      "       01212       1.00      0.80      0.89         5\n",
      "       01213       1.00      1.00      1.00         5\n",
      "       01214       1.00      1.00      1.00         5\n",
      "       01215       1.00      0.83      0.91         6\n",
      "       01216       1.00      1.00      1.00         4\n",
      "       01217       0.55      1.00      0.71         6\n",
      "       01218       1.00      0.50      0.67         6\n",
      "       01219       1.00      0.88      0.93         8\n",
      "       01220       0.80      1.00      0.89         4\n",
      "       01221       0.80      0.67      0.73         6\n",
      "       01222       0.58      1.00      0.74         7\n",
      "       01223       0.50      0.25      0.33         4\n",
      "       01224       0.80      0.40      0.53        10\n",
      "       01225       0.58      0.78      0.67         9\n",
      "       01226       1.00      0.83      0.91         6\n",
      "       01227       1.00      0.67      0.80         3\n",
      "       01228       0.67      0.29      0.40         7\n",
      "       01229       0.83      1.00      0.91         5\n",
      "       01230       0.71      0.83      0.77         6\n",
      "       01233       1.00      1.00      1.00         5\n",
      "       01234       1.00      0.80      0.89         5\n",
      "       01235       0.75      1.00      0.86         6\n",
      "       02101       0.43      1.00      0.60         3\n",
      "       02102       0.62      0.62      0.62         8\n",
      "       02103       0.67      1.00      0.80         2\n",
      "       02104       0.80      0.80      0.80         5\n",
      "       02105       0.67      0.50      0.57         8\n",
      "       02106       0.60      1.00      0.75         6\n",
      "       02107       1.00      0.60      0.75         5\n",
      "       02108       0.50      1.00      0.67         2\n",
      "       02109       0.50      1.00      0.67         1\n",
      "       02110       1.00      0.60      0.75         5\n",
      "       02111       0.60      0.50      0.55         6\n",
      "       02112       0.50      0.60      0.55         5\n",
      "       02113       1.00      0.50      0.67         4\n",
      "       02114       0.33      0.25      0.29         4\n",
      "       02115       0.60      0.60      0.60         5\n",
      "       02117       0.75      0.50      0.60         6\n",
      "       02118       0.60      0.60      0.60         5\n",
      "       02119       0.56      1.00      0.71         5\n",
      "       02120       1.00      0.29      0.44         7\n",
      "       02121       0.67      0.50      0.57         4\n",
      "       02122       0.45      1.00      0.62         5\n",
      "       02123       0.83      0.71      0.77         7\n",
      "       02124       0.44      0.67      0.53         6\n",
      "       02125       0.40      0.67      0.50         3\n",
      "       02126       0.29      0.40      0.33         5\n",
      "       02127       0.50      0.29      0.36         7\n",
      "       02128       0.71      0.38      0.50        13\n",
      "       02129       0.80      0.80      0.80         5\n",
      "       02130       0.67      0.57      0.62         7\n",
      "       02132       1.00      1.00      1.00         5\n",
      "       02133       1.00      1.00      1.00         3\n",
      "       02134       1.00      1.00      1.00         7\n",
      "       02138       1.00      1.00      1.00         6\n",
      "       02139       0.50      0.40      0.44         5\n",
      "       02140       0.91      0.83      0.87        12\n",
      "       02201       0.83      0.83      0.83         6\n",
      "       02202       0.60      0.60      0.60         5\n",
      "       02203       0.75      0.50      0.60         6\n",
      "       02204       0.83      0.71      0.77         7\n",
      "       02205       0.83      0.62      0.71         8\n",
      "       02206       0.80      1.00      0.89         8\n",
      "       02207       0.25      0.50      0.33         2\n",
      "       02208       1.00      1.00      1.00         1\n",
      "       02209       1.00      0.88      0.93         8\n",
      "       02210       1.00      0.75      0.86         4\n",
      "       02211       1.00      0.50      0.67         6\n",
      "       02212       1.00      1.00      1.00         2\n",
      "       02213       0.57      1.00      0.73         4\n",
      "       02214       0.45      0.71      0.56         7\n",
      "       02216       0.50      0.33      0.40         3\n",
      "       02217       0.83      0.83      0.83         6\n",
      "       02218       1.00      0.75      0.86         4\n",
      "       02219       0.75      0.75      0.75         4\n",
      "       02220       1.00      0.67      0.80         3\n",
      "       02221       0.80      1.00      0.89         4\n",
      "       02222       1.00      0.40      0.57         5\n",
      "       02223       0.71      0.83      0.77         6\n",
      "       02224       0.67      0.80      0.73         5\n",
      "       02225       1.00      0.40      0.57         5\n",
      "       02226       0.30      0.75      0.43         4\n",
      "       02227       0.50      0.50      0.50         6\n",
      "       02228       1.00      0.60      0.75         5\n",
      "       02229       1.00      0.67      0.80         6\n",
      "       02230       0.57      1.00      0.73         4\n",
      "       02231       1.00      0.83      0.91         6\n",
      "       02234       1.00      0.80      0.89         5\n",
      "       02235       0.57      1.00      0.73         4\n",
      "       02241       1.00      1.00      1.00         4\n",
      "       03101       1.00      0.40      0.57         5\n",
      "       03102       1.00      0.71      0.83         7\n",
      "       03103       0.67      0.67      0.67         3\n",
      "       03104       0.50      0.50      0.50         2\n",
      "       03105       0.67      0.67      0.67         3\n",
      "       03106       0.60      1.00      0.75         3\n",
      "       03107       1.00      0.71      0.83         7\n",
      "       03108       0.33      1.00      0.50         1\n",
      "       03109       0.50      0.67      0.57         6\n",
      "       03110       0.67      0.50      0.57         8\n",
      "       03111       1.00      0.67      0.80         6\n",
      "       03112       0.57      0.80      0.67         5\n",
      "       03113       0.88      0.70      0.78        10\n",
      "       03114       1.00      0.80      0.89         5\n",
      "       03115       1.00      1.00      1.00         6\n",
      "       03116       0.80      0.80      0.80         5\n",
      "       03117       0.67      0.80      0.73         5\n",
      "       03118       1.00      1.00      1.00         5\n",
      "       03119       1.00      0.43      0.60         7\n",
      "       03120       0.50      1.00      0.67         3\n",
      "       03121       1.00      0.33      0.50         3\n",
      "       03122       0.43      0.75      0.55         4\n",
      "       03123       1.00      1.00      1.00         6\n",
      "       03124       0.75      1.00      0.86         3\n",
      "       03125       0.75      0.75      0.75         4\n",
      "       03126       1.00      1.00      1.00         2\n",
      "       03127       0.67      0.50      0.57         4\n",
      "       03128       0.33      0.50      0.40         2\n",
      "       03129       1.00      1.00      1.00         7\n",
      "       03130       1.00      1.00      1.00         2\n",
      "       03131       1.00      0.91      0.95        11\n",
      "       03135       0.70      1.00      0.82         7\n",
      "       03136       0.56      1.00      0.71         5\n",
      "       03137       0.67      0.40      0.50         5\n",
      "       03201       0.75      0.75      0.75         4\n",
      "       03202       0.67      0.67      0.67         3\n",
      "       03203       0.88      1.00      0.93         7\n",
      "       03204       0.75      0.75      0.75         4\n",
      "       03205       1.00      0.67      0.80         6\n",
      "       03206       0.60      0.75      0.67         4\n",
      "       03207       1.00      1.00      1.00         4\n",
      "       03208       1.00      1.00      1.00         3\n",
      "       03209       0.57      1.00      0.73         4\n",
      "       03210       1.00      0.40      0.57         5\n",
      "       03211       0.75      1.00      0.86         3\n",
      "       03212       1.00      1.00      1.00         5\n",
      "       03213       1.00      1.00      1.00         2\n",
      "       03214       0.50      0.67      0.57         3\n",
      "       03215       0.71      0.83      0.77         6\n",
      "       03216       1.00      0.78      0.88         9\n",
      "       03217       0.86      0.75      0.80         8\n",
      "       03218       0.83      1.00      0.91        10\n",
      "       03219       0.60      0.60      0.60         5\n",
      "       03220       0.78      0.88      0.82         8\n",
      "       03221       0.38      1.00      0.55         3\n",
      "       03222       0.83      0.71      0.77         7\n",
      "       03223       0.86      0.86      0.86         7\n",
      "       03224       0.50      0.67      0.57         3\n",
      "       03225       0.80      0.44      0.57         9\n",
      "       03226       0.67      0.67      0.67         3\n",
      "       03227       0.75      0.60      0.67         5\n",
      "       03228       1.00      0.33      0.50         3\n",
      "       03229       0.50      1.00      0.67         1\n",
      "       03230       1.00      0.67      0.80         3\n",
      "       03231       1.00      1.00      1.00         5\n",
      "       03234       1.00      1.00      1.00         4\n",
      "       03235       0.67      1.00      0.80         2\n",
      "       03236       1.00      0.88      0.93         8\n",
      "\n",
      "    accuracy                           0.77      1313\n",
      "   macro avg       0.79      0.78      0.76      1313\n",
      "weighted avg       0.82      0.77      0.77      1313\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.7677075399847677\n",
      "Precision:  0.815282760313225\n",
      "Recall:  0.7694656488549618\n",
      "F1:  0.766309817116171\n"
     ]
    }
   ],
   "source": [
    "# Random Forest Building 0 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_B0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.767708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.815283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.767708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.766310</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         RF_B0\n",
       "Accuracy              0.767708\n",
       "Precision (weighted)  0.815283\n",
       "Recall (weighted)     0.767708\n",
       "F1 (weighted)         0.766310"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "RF_B0 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                      precision_score(y_test, y_preds, average='weighted'),\n",
    "                      recall_score(y_test, y_preds, average='weighted', zero_division=1),\n",
    "                     f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "RF_B0 = RF_B0.rename(columns={0: 'RF_B0'},\n",
    "                     index={0: 'Accuracy',\n",
    "                            1: 'Precision (weighted)',\n",
    "                            2: 'Recall (weighted)',\n",
    "                            3: 'F1 (weighted)'})\n",
    "\n",
    "RF_B0.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.400000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0  1.000000\n",
       "1  1.000000\n",
       "2  1.000000\n",
       "3  0.750000\n",
       "4  0.750000\n",
       "5  0.750000\n",
       "6  0.875000\n",
       "7  0.666667\n",
       "8  0.750000\n",
       "9  0.400000"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compare RF recall counts by quartile\n",
    "rf_B0_recall = pd.DataFrame(recall_score(y_test, y_preds, average=None))\n",
    "rf_B0_recall.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Building 0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-0.002, 0.25]</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.25, 0.5]</th>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.5, 0.75]</th>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.75, 1.0]</th>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Building 0\n",
       "(-0.002, 0.25]           5\n",
       "(0.25, 0.5]             40\n",
       "(0.5, 0.75]             70\n",
       "(0.75, 1.0]            141"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_B0_quartile = pd.DataFrame(rf_B0_recall[0].value_counts(bins=4, sort=False))\n",
    "\n",
    "# rename column\n",
    "rf_B0_quartile = rf_B0_quartile.rename(columns={0: 'Building 0'})\n",
    "\n",
    "rf_B0_quartile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "# manual tuning support vector Building 0\n",
    "param_grid = {\n",
    "    'C': [1, 10, 100, 1000]\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, error_score=nan,\n",
       "             estimator=SVC(C=10, break_ties=False, cache_size=200,\n",
       "                           class_weight=None, coef0=0.0,\n",
       "                           decision_function_shape='ovr', degree=3,\n",
       "                           gamma='scale', kernel='rbf', max_iter=-1,\n",
       "                           probability=False, random_state=123, shrinking=True,\n",
       "                           tol=0.001, verbose=False),\n",
       "             iid='deprecated', n_jobs=-1, param_grid={'C': [1, 10, 100, 1000]},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring=None, verbose=0)"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB0 = GridSearchCV(estimator=svc, param_grid=param_grid, cv=3, n_jobs=-1)\n",
    "gs_svcB0.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 1000}"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB0.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.6153846153846154)"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning support vector Building 0\n",
    "svcB0 = SVC(C=1000, random_state=123)\n",
    "svc_B0 = svcB0.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = svc_B0.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       00102       1.00      0.80      0.89         5\n",
      "       00106       0.50      1.00      0.67         1\n",
      "       00107       0.00      0.00      0.00         1\n",
      "       00110       0.67      1.00      0.80         4\n",
      "       00111       0.25      0.25      0.25         4\n",
      "       00112       0.60      0.75      0.67         4\n",
      "       00113       0.83      0.62      0.71         8\n",
      "       00114       0.67      0.67      0.67         3\n",
      "       00115       0.43      0.75      0.55         4\n",
      "       00116       0.50      0.40      0.44         5\n",
      "       00117       0.00      0.00      0.00         0\n",
      "       00118       1.00      0.40      0.57         5\n",
      "       00119       0.86      0.75      0.80         8\n",
      "       00120       0.70      0.88      0.78         8\n",
      "       00121       1.00      0.38      0.55         8\n",
      "       00122       0.25      0.17      0.20         6\n",
      "       00123       0.33      0.50      0.40         4\n",
      "       00125       0.00      0.00      0.00         3\n",
      "       00126       0.50      0.67      0.57         3\n",
      "       00127       0.75      0.60      0.67         5\n",
      "       00128       0.45      0.83      0.59         6\n",
      "       00129       0.50      0.50      0.50         4\n",
      "       00130       0.40      1.00      0.57         2\n",
      "       00131       0.00      0.00      0.00         4\n",
      "       00132       0.57      0.80      0.67         5\n",
      "       00133       0.75      0.55      0.63        11\n",
      "       00134       0.54      0.78      0.64         9\n",
      "       00201       1.00      0.50      0.67         8\n",
      "       00202       0.73      1.00      0.84         8\n",
      "       00208       1.00      0.50      0.67         6\n",
      "       00209       1.00      0.29      0.44         7\n",
      "       00211       0.50      0.33      0.40         3\n",
      "       00212       0.33      0.67      0.44         3\n",
      "       00213       1.00      0.67      0.80         6\n",
      "       00214       0.50      0.67      0.57         3\n",
      "       00215       0.33      0.50      0.40         2\n",
      "       00216       0.67      0.50      0.57         4\n",
      "       00218       0.50      0.50      0.50         2\n",
      "       00219       1.00      0.67      0.80         6\n",
      "       00220       0.60      0.43      0.50         7\n",
      "       00222       0.33      0.67      0.44         6\n",
      "       00224       1.00      0.57      0.73         7\n",
      "       00225       1.00      0.50      0.67         6\n",
      "       00226       0.50      0.67      0.57         3\n",
      "       00227       0.50      0.50      0.50         2\n",
      "       00229       0.50      0.60      0.55         5\n",
      "       00230       0.50      0.67      0.57         3\n",
      "       00231       0.33      0.50      0.40         4\n",
      "       00232       0.67      1.00      0.80         4\n",
      "       00233       0.00      0.00      0.00         5\n",
      "       00234       0.50      0.83      0.62         6\n",
      "       00235       0.60      0.43      0.50         7\n",
      "       00236       0.57      1.00      0.73         4\n",
      "       00237       0.60      1.00      0.75         3\n",
      "       01101       0.40      0.67      0.50         3\n",
      "       01102       0.78      0.70      0.74        10\n",
      "       01103       0.25      0.50      0.33         2\n",
      "       01104       0.83      0.71      0.77         7\n",
      "       01105       0.50      0.33      0.40         6\n",
      "       01106       0.56      0.83      0.67         6\n",
      "       01107       0.88      0.64      0.74        11\n",
      "       01108       0.86      0.60      0.71        10\n",
      "       01109       0.62      0.71      0.67         7\n",
      "       01110       0.71      0.83      0.77         6\n",
      "       01111       0.75      0.75      0.75         4\n",
      "       01112       0.50      0.80      0.62         5\n",
      "       01113       0.71      0.62      0.67         8\n",
      "       01114       1.00      0.25      0.40         4\n",
      "       01115       0.00      0.00      0.00         1\n",
      "       01116       0.75      0.60      0.67         5\n",
      "       01117       1.00      0.50      0.67         6\n",
      "       01118       0.57      0.80      0.67         5\n",
      "       01119       0.75      0.43      0.55         7\n",
      "       01120       0.58      0.70      0.64        10\n",
      "       01121       0.50      0.75      0.60         4\n",
      "       01122       1.00      0.25      0.40         4\n",
      "       01123       0.80      0.50      0.62         8\n",
      "       01124       0.57      0.67      0.62         6\n",
      "       01125       0.20      0.20      0.20         5\n",
      "       01126       0.25      0.33      0.29         6\n",
      "       01127       1.00      0.67      0.80         3\n",
      "       01128       1.00      1.00      1.00         6\n",
      "       01129       1.00      1.00      1.00         3\n",
      "       01130       1.00      1.00      1.00         4\n",
      "       01136       1.00      1.00      1.00         2\n",
      "       01137       1.00      1.00      1.00         1\n",
      "       01138       0.50      0.60      0.55         5\n",
      "       01201       0.75      0.60      0.67         5\n",
      "       01202       0.33      0.75      0.46         4\n",
      "       01203       0.71      0.83      0.77         6\n",
      "       01204       0.83      0.83      0.83         6\n",
      "       01205       0.56      0.83      0.67         6\n",
      "       01206       0.75      0.50      0.60         6\n",
      "       01207       0.57      0.67      0.62         6\n",
      "       01208       0.75      1.00      0.86         3\n",
      "       01209       1.00      0.83      0.91         6\n",
      "       01210       0.67      1.00      0.80         4\n",
      "       01211       1.00      0.60      0.75         5\n",
      "       01212       1.00      0.80      0.89         5\n",
      "       01213       0.80      0.80      0.80         5\n",
      "       01214       0.80      0.80      0.80         5\n",
      "       01215       0.60      0.50      0.55         6\n",
      "       01216       1.00      0.50      0.67         4\n",
      "       01217       0.43      1.00      0.60         6\n",
      "       01218       0.50      0.50      0.50         6\n",
      "       01219       0.78      0.88      0.82         8\n",
      "       01220       0.50      0.50      0.50         4\n",
      "       01221       0.50      0.67      0.57         6\n",
      "       01222       0.71      0.71      0.71         7\n",
      "       01223       0.00      0.00      0.00         4\n",
      "       01224       0.60      0.30      0.40        10\n",
      "       01225       0.57      0.44      0.50         9\n",
      "       01226       0.67      0.67      0.67         6\n",
      "       01227       1.00      0.67      0.80         3\n",
      "       01228       1.00      0.71      0.83         7\n",
      "       01229       0.71      1.00      0.83         5\n",
      "       01230       0.83      0.83      0.83         6\n",
      "       01233       0.80      0.80      0.80         5\n",
      "       01234       0.75      0.60      0.67         5\n",
      "       01235       0.83      0.83      0.83         6\n",
      "       02101       0.25      0.33      0.29         3\n",
      "       02102       0.36      0.50      0.42         8\n",
      "       02103       0.29      1.00      0.44         2\n",
      "       02104       0.67      0.80      0.73         5\n",
      "       02105       1.00      0.50      0.67         8\n",
      "       02106       0.55      1.00      0.71         6\n",
      "       02107       0.00      0.00      0.00         5\n",
      "       02108       0.50      1.00      0.67         2\n",
      "       02109       0.33      1.00      0.50         1\n",
      "       02110       1.00      0.40      0.57         5\n",
      "       02111       0.50      0.33      0.40         6\n",
      "       02112       0.38      0.60      0.46         5\n",
      "       02113       0.50      0.50      0.50         4\n",
      "       02114       0.33      0.25      0.29         4\n",
      "       02115       0.20      0.20      0.20         5\n",
      "       02117       0.67      0.33      0.44         6\n",
      "       02118       0.29      0.40      0.33         5\n",
      "       02119       0.67      0.80      0.73         5\n",
      "       02120       1.00      0.29      0.44         7\n",
      "       02121       0.67      0.50      0.57         4\n",
      "       02122       0.45      1.00      0.62         5\n",
      "       02123       0.86      0.86      0.86         7\n",
      "       02124       0.50      0.50      0.50         6\n",
      "       02125       0.50      0.33      0.40         3\n",
      "       02126       0.27      0.60      0.37         5\n",
      "       02127       0.50      0.29      0.36         7\n",
      "       02128       0.86      0.46      0.60        13\n",
      "       02129       0.67      0.80      0.73         5\n",
      "       02130       0.75      0.43      0.55         7\n",
      "       02132       1.00      1.00      1.00         5\n",
      "       02133       1.00      1.00      1.00         3\n",
      "       02134       1.00      1.00      1.00         7\n",
      "       02138       1.00      1.00      1.00         6\n",
      "       02139       0.67      0.40      0.50         5\n",
      "       02140       0.71      0.83      0.77        12\n",
      "       02201       0.42      0.83      0.56         6\n",
      "       02202       0.40      0.40      0.40         5\n",
      "       02203       1.00      0.50      0.67         6\n",
      "       02204       0.83      0.71      0.77         7\n",
      "       02205       0.71      0.62      0.67         8\n",
      "       02206       0.88      0.88      0.88         8\n",
      "       02207       0.25      0.50      0.33         2\n",
      "       02208       0.33      1.00      0.50         1\n",
      "       02209       1.00      0.50      0.67         8\n",
      "       02210       0.50      0.25      0.33         4\n",
      "       02211       1.00      0.33      0.50         6\n",
      "       02212       0.25      0.50      0.33         2\n",
      "       02213       0.60      0.75      0.67         4\n",
      "       02214       0.40      0.29      0.33         7\n",
      "       02216       0.50      0.33      0.40         3\n",
      "       02217       0.80      0.67      0.73         6\n",
      "       02218       0.60      0.75      0.67         4\n",
      "       02219       0.60      0.75      0.67         4\n",
      "       02220       0.60      1.00      0.75         3\n",
      "       02221       0.67      1.00      0.80         4\n",
      "       02222       0.67      0.40      0.50         5\n",
      "       02223       0.62      0.83      0.71         6\n",
      "       02224       0.40      0.40      0.40         5\n",
      "       02225       0.67      0.40      0.50         5\n",
      "       02226       0.50      0.50      0.50         4\n",
      "       02227       0.60      0.50      0.55         6\n",
      "       02228       1.00      0.40      0.57         5\n",
      "       02229       0.44      0.67      0.53         6\n",
      "       02230       1.00      0.50      0.67         4\n",
      "       02231       0.86      1.00      0.92         6\n",
      "       02234       0.50      0.60      0.55         5\n",
      "       02235       0.40      0.50      0.44         4\n",
      "       02241       1.00      0.75      0.86         4\n",
      "       03101       1.00      0.40      0.57         5\n",
      "       03102       0.71      0.71      0.71         7\n",
      "       03103       0.25      0.33      0.29         3\n",
      "       03104       0.17      0.50      0.25         2\n",
      "       03105       0.00      0.00      0.00         3\n",
      "       03106       0.25      0.33      0.29         3\n",
      "       03107       0.60      0.43      0.50         7\n",
      "       03108       0.17      1.00      0.29         1\n",
      "       03109       0.60      0.50      0.55         6\n",
      "       03110       0.80      0.50      0.62         8\n",
      "       03111       1.00      0.83      0.91         6\n",
      "       03112       0.25      0.20      0.22         5\n",
      "       03113       0.62      0.50      0.56        10\n",
      "       03114       0.50      0.60      0.55         5\n",
      "       03115       0.83      0.83      0.83         6\n",
      "       03116       0.60      0.60      0.60         5\n",
      "       03117       0.50      0.60      0.55         5\n",
      "       03118       0.75      0.60      0.67         5\n",
      "       03119       0.60      0.43      0.50         7\n",
      "       03120       0.17      0.33      0.22         3\n",
      "       03121       0.50      0.33      0.40         3\n",
      "       03122       0.50      0.75      0.60         4\n",
      "       03123       0.80      0.67      0.73         6\n",
      "       03124       0.67      0.67      0.67         3\n",
      "       03125       0.50      0.25      0.33         4\n",
      "       03126       0.20      0.50      0.29         2\n",
      "       03127       0.50      0.25      0.33         4\n",
      "       03128       0.00      0.00      0.00         2\n",
      "       03129       1.00      1.00      1.00         7\n",
      "       03130       0.67      1.00      0.80         2\n",
      "       03131       1.00      0.82      0.90        11\n",
      "       03135       0.78      1.00      0.88         7\n",
      "       03136       1.00      0.80      0.89         5\n",
      "       03137       0.60      0.60      0.60         5\n",
      "       03201       0.75      0.75      0.75         4\n",
      "       03202       0.50      0.67      0.57         3\n",
      "       03203       1.00      0.71      0.83         7\n",
      "       03204       0.50      0.50      0.50         4\n",
      "       03205       0.38      0.50      0.43         6\n",
      "       03206       0.60      0.75      0.67         4\n",
      "       03207       0.44      1.00      0.62         4\n",
      "       03208       1.00      0.67      0.80         3\n",
      "       03209       0.60      0.75      0.67         4\n",
      "       03210       1.00      0.40      0.57         5\n",
      "       03211       0.33      0.33      0.33         3\n",
      "       03212       0.50      0.60      0.55         5\n",
      "       03213       0.40      1.00      0.57         2\n",
      "       03214       0.00      0.00      0.00         3\n",
      "       03215       1.00      0.83      0.91         6\n",
      "       03216       0.80      0.44      0.57         9\n",
      "       03217       0.50      0.38      0.43         8\n",
      "       03218       0.70      0.70      0.70        10\n",
      "       03219       0.25      0.20      0.22         5\n",
      "       03220       0.50      0.62      0.56         8\n",
      "       03221       0.38      1.00      0.55         3\n",
      "       03222       0.86      0.86      0.86         7\n",
      "       03223       0.86      0.86      0.86         7\n",
      "       03224       0.50      0.67      0.57         3\n",
      "       03225       0.75      0.33      0.46         9\n",
      "       03226       0.33      0.67      0.44         3\n",
      "       03227       0.67      0.40      0.50         5\n",
      "       03228       1.00      0.33      0.50         3\n",
      "       03229       0.33      1.00      0.50         1\n",
      "       03230       1.00      1.00      1.00         3\n",
      "       03231       1.00      0.80      0.89         5\n",
      "       03234       1.00      1.00      1.00         4\n",
      "       03235       0.50      0.50      0.50         2\n",
      "       03236       0.86      0.75      0.80         8\n",
      "\n",
      "    accuracy                           0.62      1313\n",
      "   macro avg       0.62      0.61      0.59      1313\n",
      "weighted avg       0.67      0.62      0.61      1313\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.6153846153846154\n",
      "Precision:  0.6702198622229086\n",
      "Recall:  0.6210607225211375\n",
      "F1:  0.6141644927115418\n"
     ]
    }
   ],
   "source": [
    "# svc B0 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SVC_B0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.615385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.670220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.621061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.614164</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        SVC_B0\n",
       "Accuracy              0.615385\n",
       "Precision (weighted)  0.670220\n",
       "Recall (weighted)     0.621061\n",
       "F1 (weighted)         0.614164"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "SVC_B0 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                       precision_score(y_test, y_preds, average='weighted'),\n",
    "                       recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)),\n",
    "                       f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "SVC_B0 = SVC_B0.rename(columns={0: 'SVC_B0'},\n",
    "                        index={0: 'Accuracy', 1: 'Precision (weighted)', 2: 'Recall (weighted)', 3: 'F1 (weighted)'})\n",
    "\n",
    "SVC_B0.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "      <th>SVCpreds_B0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18076</th>\n",
       "      <td>01136</td>\n",
       "      <td>01136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15848</th>\n",
       "      <td>01124</td>\n",
       "      <td>01124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16153</th>\n",
       "      <td>01130</td>\n",
       "      <td>01130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18150</th>\n",
       "      <td>03106</td>\n",
       "      <td>03106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8069</th>\n",
       "      <td>01235</td>\n",
       "      <td>00222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18006</th>\n",
       "      <td>01108</td>\n",
       "      <td>01108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17902</th>\n",
       "      <td>03131</td>\n",
       "      <td>03131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15958</th>\n",
       "      <td>02140</td>\n",
       "      <td>02140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10271</th>\n",
       "      <td>00118</td>\n",
       "      <td>00116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9883</th>\n",
       "      <td>01221</td>\n",
       "      <td>01224</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      location SVCpreds_B0\n",
       "18076    01136       01136\n",
       "15848    01124       01124\n",
       "16153    01130       01130\n",
       "18150    03106       03106\n",
       "8069     01235       00222\n",
       "18006    01108       01108\n",
       "17902    03131       03131\n",
       "15958    02140       02140\n",
       "10271    00118       00116\n",
       "9883     01221       01224"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe comparing predictions to y_test 'ground truth'\n",
    "y_test = pd.DataFrame(y_test)\n",
    "y_test.head()\n",
    "\n",
    "# predictions dataframe\n",
    "y_preds = pd.DataFrame(y_preds)\n",
    "# rename prediction column\n",
    "y_preds = y_preds.rename(columns={0: 'SVCpreds_B0'})\n",
    "\n",
    "# comparison dataframe\n",
    "svc_B0_compare = pd.concat([y_test, y_preds.set_index(y_test.index)], axis=1)\n",
    "svc_B0_compare.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Building 0 Results\n",
    "Random Forest\n",
    "Accuracy: 0.7677075399847677\n",
    "Precision: 0.815282760313225\n",
    "Recall: 0.7694656488549618\n",
    "F1: 0.766309817116171\n",
    "SVC\n",
    "Accuracy: 0.6153846153846154\n",
    "Precision: 0.6702198622229086\n",
    "Recall: 0.6210607225211375\n",
    "F1: 0.6141644927115418\n",
    "Random Forest is top model for Building 0 dataset\n",
    "Metrics are not quite as high as metrics for oob2 dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building: Building 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "# features\n",
    "X = Building1.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building1['location']\n",
    "\n",
    "# train test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state = 123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [],
   "source": [
    "# prepare models\n",
    "algos_Class = []\n",
    "algos_Class.append(('Decision Tree', DecisionTreeClassifier(criterion='entropy')))\n",
    "algos_Class.append(('Random Forest', RandomForestClassifier()))\n",
    "algos_Class.append(('Support Vector', SVC(kernel='rbf')))\n",
    "algos_Class.append(('K Nearest Neighbors', KNeighborsClassifier()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [],
   "source": [
    " #evaluate each model in turn on Building1\n",
    "results = []\n",
    "names = []\n",
    "for name, model in algos_Class:\n",
    "    result = cross_val_score(model, X, y, cv=3, scoring='accuracy')\n",
    "    names.append(name)\n",
    "    results.append(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree 0.6185527328714396 0.03742460002581406\n",
      "Random Forest 0.7888760585065434 0.041872282535711805\n",
      "Support Vector 0.6272132409545804 0.04136768763909716\n",
      "K Nearest Neighbors 0.5919938414164743 0.05318119966197883\n"
     ]
    }
   ],
   "source": [
    "# cross validation results\n",
    "for i in range(len(names)):\n",
    "    print(names[i], results[i].mean(), results[i].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# boxplot algorithm comparison\n",
    "fig = plt.figure()\n",
    "fig.suptitle('Algorithm Comparison')\n",
    "ax = fig.add_subplot(111)\n",
    "plt.boxplot(results)\n",
    "ax.set_xticklabels(names)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Notes: RF is again best model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.8791377983063895)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning\n",
    "rfB1 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=400,\n",
    "                              n_jobs=-1,\n",
    "                             random_state=123)\n",
    "rf_B1 = rfB1.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = rf_B1.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         101       0.89      1.00      0.94         8\n",
      "        1010       1.00      0.88      0.93         8\n",
      "       10107       1.00      1.00      1.00         5\n",
      "       10108       0.83      1.00      0.91         5\n",
      "       10110       1.00      0.75      0.86         4\n",
      "       10111       1.00      1.00      1.00         2\n",
      "       10112       0.70      1.00      0.82         7\n",
      "       10113       0.75      0.50      0.60         6\n",
      "       10114       1.00      0.83      0.91         6\n",
      "       10115       1.00      1.00      1.00         2\n",
      "       10116       0.86      1.00      0.92         6\n",
      "       10117       1.00      0.80      0.89         5\n",
      "       10118       1.00      1.00      1.00         3\n",
      "       10119       1.00      1.00      1.00         6\n",
      "       10121       1.00      1.00      1.00         2\n",
      "       10122       1.00      1.00      1.00         5\n",
      "        1015       1.00      1.00      1.00         3\n",
      "        1016       1.00      0.50      0.67         2\n",
      "       10202       0.97      0.97      0.97        30\n",
      "       10203       1.00      1.00      1.00         8\n",
      "       10213       1.00      1.00      1.00         3\n",
      "       10216       0.80      1.00      0.89        12\n",
      "       10217       1.00      1.00      1.00        10\n",
      "       10218       0.67      1.00      0.80         4\n",
      "       10219       1.00      0.57      0.73         7\n",
      "       10220       0.67      1.00      0.80         2\n",
      "       10222       1.00      1.00      1.00        12\n",
      "       10224       1.00      1.00      1.00         5\n",
      "       10225       1.00      1.00      1.00         5\n",
      "       10226       1.00      1.00      1.00         4\n",
      "       10227       0.38      0.43      0.40         7\n",
      "       10228       0.33      1.00      0.50         1\n",
      "       10229       0.80      0.67      0.73         6\n",
      "       10230       0.57      0.80      0.67         5\n",
      "       10231       0.60      0.75      0.67         4\n",
      "       10235       0.25      0.50      0.33         2\n",
      "       10237       1.00      0.67      0.80         6\n",
      "       10238       0.53      0.77      0.62        13\n",
      "       10239       0.67      0.33      0.44         6\n",
      "       10243       0.83      0.71      0.77         7\n",
      "       10244       1.00      0.73      0.84        11\n",
      "       10245       0.50      0.33      0.40         3\n",
      "       10246       1.00      0.43      0.60         7\n",
      "       10247       0.93      0.93      0.93        14\n",
      "       10248       0.94      1.00      0.97        16\n",
      "       10249       0.83      0.62      0.71         8\n",
      "         103       1.00      0.86      0.92         7\n",
      "         106       1.00      1.00      1.00         1\n",
      "         109       0.80      1.00      0.89         8\n",
      "       11101       0.90      0.45      0.60        20\n",
      "       11102       0.95      0.75      0.84        24\n",
      "       11103       0.63      0.89      0.74        19\n",
      "       11104       0.90      0.63      0.75        30\n",
      "       11105       0.67      1.00      0.80        22\n",
      "       11106       0.82      0.97      0.89        29\n",
      "       11107       0.97      0.90      0.93        31\n",
      "       11108       0.95      1.00      0.97        18\n",
      "       11109       0.92      1.00      0.96        22\n",
      "       11110       0.90      0.95      0.93        20\n",
      "       11111       1.00      0.90      0.95        10\n",
      "       11117       1.00      0.90      0.95        10\n",
      "        1112       0.00      0.00      0.00         1\n",
      "        1113       0.33      1.00      0.50         3\n",
      "        1117       1.00      1.00      1.00         2\n",
      "         112       1.00      1.00      1.00         3\n",
      "       11201       0.89      1.00      0.94        17\n",
      "       11202       1.00      0.80      0.89        10\n",
      "       11203       0.88      1.00      0.93         7\n",
      "       11204       1.00      0.91      0.95        11\n",
      "       11205       1.00      1.00      1.00         6\n",
      "       11206       1.00      1.00      1.00         6\n",
      "       11207       1.00      0.91      0.95        11\n",
      "       11208       0.86      1.00      0.92         6\n",
      "       11209       1.00      1.00      1.00         3\n",
      "       11210       1.00      0.88      0.93         8\n",
      "       11215       1.00      1.00      1.00         2\n",
      "        1125       0.00      0.00      0.00         4\n",
      "        1126       1.00      1.00      1.00         2\n",
      "        1127       0.00      0.00      0.00         1\n",
      "         113       1.00      0.33      0.50         3\n",
      "        1130       0.40      0.40      0.40         5\n",
      "         114       0.78      1.00      0.88         7\n",
      "         115       1.00      1.00      1.00         1\n",
      "         116       1.00      1.00      1.00         4\n",
      "         117       1.00      1.00      1.00         2\n",
      "         118       0.57      0.57      0.57         7\n",
      "        1210       1.00      1.00      1.00        11\n",
      "       12101       1.00      1.00      1.00        12\n",
      "       12102       1.00      1.00      1.00         7\n",
      "       12103       1.00      1.00      1.00        13\n",
      "       12104       1.00      1.00      1.00        12\n",
      "       12105       1.00      1.00      1.00         9\n",
      "       12106       1.00      1.00      1.00        10\n",
      "       12107       1.00      0.88      0.93         8\n",
      "       12108       1.00      0.57      0.73         7\n",
      "       12109       0.83      1.00      0.91         5\n",
      "       12110       0.80      1.00      0.89         4\n",
      "       12111       0.88      1.00      0.93         7\n",
      "       12112       0.75      1.00      0.86         3\n",
      "       12117       1.00      1.00      1.00         2\n",
      "        1215       1.00      1.00      1.00         4\n",
      "        1216       1.00      0.71      0.83         7\n",
      "        1217       1.00      1.00      1.00         3\n",
      "        1218       1.00      1.00      1.00         4\n",
      "         122       1.00      1.00      1.00         7\n",
      "       12201       0.95      0.95      0.95        21\n",
      "       12202       1.00      1.00      1.00        23\n",
      "       12203       1.00      1.00      1.00        11\n",
      "       12204       1.00      1.00      1.00         9\n",
      "       12205       1.00      1.00      1.00         3\n",
      "       12206       0.95      0.95      0.95        19\n",
      "       12207       1.00      1.00      1.00         3\n",
      "       12208       1.00      1.00      1.00         6\n",
      "       12209       1.00      1.00      1.00         3\n",
      "       12210       1.00      1.00      1.00         6\n",
      "       12211       0.75      1.00      0.86         3\n",
      "       12212       1.00      0.92      0.96        12\n",
      "       12216       1.00      1.00      1.00        14\n",
      "       12217       1.00      1.00      1.00         8\n",
      "        1222       1.00      1.00      1.00         2\n",
      "        1227       1.00      0.50      0.67         2\n",
      "        1228       1.00      1.00      1.00         5\n",
      "        1229       0.57      1.00      0.73         4\n",
      "         123       1.00      1.00      1.00         7\n",
      "         124       1.00      0.90      0.95        10\n",
      "         125       1.00      1.00      1.00        10\n",
      "         126       1.00      1.00      1.00        10\n",
      "         127       1.00      1.00      1.00         6\n",
      "         128       0.78      0.88      0.82         8\n",
      "         129       0.80      0.80      0.80         5\n",
      "         131       1.00      0.91      0.95        11\n",
      "       13101       0.71      0.81      0.76        21\n",
      "       13102       0.67      0.92      0.77        13\n",
      "       13103       0.89      0.89      0.89         9\n",
      "       13104       0.85      0.58      0.69        19\n",
      "       13105       0.50      1.00      0.67         3\n",
      "       13106       1.00      0.86      0.92         7\n",
      "       13107       0.50      1.00      0.67         1\n",
      "       13108       1.00      0.57      0.73         7\n",
      "        1311       0.80      0.80      0.80         5\n",
      "       13112       0.80      0.80      0.80         5\n",
      "       13113       0.90      0.82      0.86        11\n",
      "       13116       0.91      0.91      0.91        11\n",
      "        1312       0.00      0.00      0.00         3\n",
      "        1313       0.40      0.67      0.50         3\n",
      "        1314       1.00      0.50      0.67         2\n",
      "         132       0.89      1.00      0.94         8\n",
      "       13201       1.00      1.00      1.00         9\n",
      "       13202       0.95      0.95      0.95        21\n",
      "       13203       0.94      0.81      0.87        21\n",
      "       13204       0.60      0.86      0.71         7\n",
      "       13205       1.00      0.67      0.80         3\n",
      "       13206       0.50      1.00      0.67         2\n",
      "       13214       1.00      1.00      1.00         2\n",
      "       13216       1.00      1.00      1.00         7\n",
      "       13217       1.00      0.86      0.92         7\n",
      "         133       0.86      0.86      0.86         7\n",
      "         134       0.88      0.88      0.88        17\n",
      "         135       0.25      0.50      0.33         2\n",
      "         136       1.00      0.75      0.86         4\n",
      "\n",
      "    accuracy                           0.88      1299\n",
      "   macro avg       0.86      0.86      0.85      1299\n",
      "weighted avg       0.90      0.88      0.88      1299\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.8791377983063895\n",
      "Precision:  0.8950421538198201\n",
      "Recall:  0.8852713178294573\n",
      "F1:  0.8766795872718322\n"
     ]
    }
   ],
   "source": [
    "# Random Forest Building 1 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create dataframe of metrics\n",
    "RF_B1 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                      precision_score(y_test, y_preds, average='weighted'),\n",
    "                      recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1),\n",
    "                     f1_score(y_test, y_preds, average='weighted')])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_B1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.879138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.895042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.885271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.876680</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         RF_B1\n",
       "Accuracy              0.879138\n",
       "Precision (weighted)  0.895042\n",
       "Recall (weighted)     0.885271\n",
       "F1 (weighted)         0.876680"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# rename column and indexes\n",
    "RF_B1 = RF_B1.rename(columns={0: 'RF_B1'},\n",
    "                     index={0: 'Accuracy',\n",
    "                            1: 'Precision (weighted)',\n",
    "                            2: 'Recall (weighted)',\n",
    "                            3: 'F1 (weighted)'})\n",
    "\n",
    "RF_B1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0  1.000000\n",
       "1  0.875000\n",
       "2  1.000000\n",
       "3  1.000000\n",
       "4  0.750000\n",
       "5  1.000000\n",
       "6  1.000000\n",
       "7  0.500000\n",
       "8  0.833333\n",
       "9  1.000000"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compare RF recall counts by quartile\n",
    "rf_B1_recall = pd.DataFrame(recall_score(y_test, y_preds, average=None))\n",
    "rf_B1_recall.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Building 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-0.002, 0.25]</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.25, 0.5]</th>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.5, 0.75]</th>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.75, 1.0]</th>\n",
       "      <td>125</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Building 1\n",
       "(-0.002, 0.25]           4\n",
       "(0.25, 0.5]             13\n",
       "(0.5, 0.75]             18\n",
       "(0.75, 1.0]            125"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_B1_quartile = pd.DataFrame(rf_B1_recall[0].value_counts(bins=4, sort=False))\n",
    "\n",
    "# rename column\n",
    "rf_B1_quartile = rf_B1_quartile.rename(columns={0: 'Building 1'})\n",
    "\n",
    "rf_B1_quartile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [],
   "source": [
    "# manual tuning SVC Building 1\n",
    "param_grid = {\n",
    "    'C': [1, 10, 100, 1000]\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, error_score=nan,\n",
       "             estimator=SVC(C=10, break_ties=False, cache_size=200,\n",
       "                           class_weight=None, coef0=0.0,\n",
       "                           decision_function_shape='ovr', degree=3,\n",
       "                           gamma='scale', kernel='rbf', max_iter=-1,\n",
       "                           probability=False, random_state=123, shrinking=True,\n",
       "                           tol=0.001, verbose=False),\n",
       "             iid='deprecated', n_jobs=-1, param_grid={'C': [1, 10, 100, 1000]},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring=None, verbose=0)"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB1 = GridSearchCV(estimator=svc, param_grid=param_grid, cv=3, n_jobs=-1)\n",
    "gs_svcB1.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 1000}"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB1.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.7428791377983064)"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning\n",
    "svcB1 = SVC(C=1000, random_state=123)\n",
    "svc_B1 = svcB1.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = svc_B1.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         101       0.89      1.00      0.94         8\n",
      "        1010       0.75      0.75      0.75         8\n",
      "       10107       0.80      0.80      0.80         5\n",
      "       10108       1.00      0.40      0.57         5\n",
      "       10110       1.00      0.50      0.67         4\n",
      "       10111       0.40      1.00      0.57         2\n",
      "       10112       0.36      0.57      0.44         7\n",
      "       10113       0.75      0.50      0.60         6\n",
      "       10114       0.67      1.00      0.80         6\n",
      "       10115       1.00      1.00      1.00         2\n",
      "       10116       1.00      1.00      1.00         6\n",
      "       10117       1.00      1.00      1.00         5\n",
      "       10118       0.75      1.00      0.86         3\n",
      "       10119       0.86      1.00      0.92         6\n",
      "       10121       1.00      0.50      0.67         2\n",
      "       10122       0.83      1.00      0.91         5\n",
      "        1015       1.00      1.00      1.00         3\n",
      "        1016       1.00      0.50      0.67         2\n",
      "       10202       0.71      0.67      0.69        30\n",
      "       10203       0.60      0.38      0.46         8\n",
      "       10213       1.00      0.67      0.80         3\n",
      "       10216       0.60      0.50      0.55        12\n",
      "       10217       0.83      1.00      0.91        10\n",
      "       10218       0.67      0.50      0.57         4\n",
      "       10219       0.80      0.57      0.67         7\n",
      "       10220       0.67      1.00      0.80         2\n",
      "       10222       0.64      0.75      0.69        12\n",
      "       10224       1.00      1.00      1.00         5\n",
      "       10225       1.00      1.00      1.00         5\n",
      "       10226       1.00      1.00      1.00         4\n",
      "       10227       0.40      0.29      0.33         7\n",
      "       10228       0.17      1.00      0.29         1\n",
      "       10229       0.40      0.33      0.36         6\n",
      "       10230       0.50      0.40      0.44         5\n",
      "       10231       0.40      0.50      0.44         4\n",
      "       10235       0.11      1.00      0.20         2\n",
      "       10237       0.71      0.83      0.77         6\n",
      "       10238       0.50      0.23      0.32        13\n",
      "       10239       0.00      0.00      0.00         6\n",
      "       10243       0.25      0.14      0.18         7\n",
      "       10244       0.50      0.45      0.48        11\n",
      "       10245       1.00      0.67      0.80         3\n",
      "       10246       0.67      0.29      0.40         7\n",
      "       10247       0.67      0.71      0.69        14\n",
      "       10248       0.57      0.75      0.65        16\n",
      "       10249       0.00      0.00      0.00         8\n",
      "         103       1.00      0.86      0.92         7\n",
      "         106       1.00      1.00      1.00         1\n",
      "         109       0.67      0.75      0.71         8\n",
      "       11101       0.53      0.45      0.49        20\n",
      "       11102       0.80      0.50      0.62        24\n",
      "       11103       0.48      0.84      0.62        19\n",
      "       11104       0.76      0.43      0.55        30\n",
      "       11105       0.55      0.77      0.64        22\n",
      "       11106       0.90      0.93      0.92        29\n",
      "       11107       0.81      0.81      0.81        31\n",
      "       11108       0.76      0.72      0.74        18\n",
      "       11109       0.76      0.73      0.74        22\n",
      "       11110       0.80      0.80      0.80        20\n",
      "       11111       0.82      0.90      0.86        10\n",
      "       11117       1.00      0.90      0.95        10\n",
      "        1112       0.00      0.00      0.00         1\n",
      "        1113       0.33      1.00      0.50         3\n",
      "        1117       1.00      1.00      1.00         2\n",
      "         112       1.00      1.00      1.00         3\n",
      "       11201       0.89      1.00      0.94        17\n",
      "       11202       0.80      0.40      0.53        10\n",
      "       11203       0.56      0.71      0.63         7\n",
      "       11204       0.82      0.82      0.82        11\n",
      "       11205       1.00      0.83      0.91         6\n",
      "       11206       0.67      0.67      0.67         6\n",
      "       11207       0.83      0.91      0.87        11\n",
      "       11208       0.83      0.83      0.83         6\n",
      "       11209       0.75      1.00      0.86         3\n",
      "       11210       1.00      0.88      0.93         8\n",
      "       11215       1.00      1.00      1.00         2\n",
      "        1125       0.00      0.00      0.00         4\n",
      "        1126       1.00      1.00      1.00         2\n",
      "        1127       0.00      0.00      0.00         1\n",
      "         113       1.00      0.33      0.50         3\n",
      "        1130       0.40      0.40      0.40         5\n",
      "         114       0.78      1.00      0.88         7\n",
      "         115       1.00      1.00      1.00         1\n",
      "         116       1.00      0.50      0.67         4\n",
      "         117       1.00      1.00      1.00         2\n",
      "         118       0.57      0.57      0.57         7\n",
      "        1210       0.67      0.91      0.77        11\n",
      "       12101       0.82      0.75      0.78        12\n",
      "       12102       0.70      1.00      0.82         7\n",
      "       12103       0.67      0.77      0.71        13\n",
      "       12104       1.00      0.92      0.96        12\n",
      "       12105       0.88      0.78      0.82         9\n",
      "       12106       0.89      0.80      0.84        10\n",
      "       12107       1.00      0.75      0.86         8\n",
      "       12108       0.75      0.43      0.55         7\n",
      "       12109       0.62      1.00      0.77         5\n",
      "       12110       1.00      0.25      0.40         4\n",
      "       12111       0.78      1.00      0.88         7\n",
      "       12112       0.60      1.00      0.75         3\n",
      "       12117       1.00      1.00      1.00         2\n",
      "        1215       0.80      1.00      0.89         4\n",
      "        1216       0.67      0.57      0.62         7\n",
      "        1217       0.75      1.00      0.86         3\n",
      "        1218       1.00      0.75      0.86         4\n",
      "         122       0.67      0.86      0.75         7\n",
      "       12201       0.94      0.76      0.84        21\n",
      "       12202       0.85      1.00      0.92        23\n",
      "       12203       1.00      1.00      1.00        11\n",
      "       12204       1.00      1.00      1.00         9\n",
      "       12205       1.00      0.33      0.50         3\n",
      "       12206       0.86      0.95      0.90        19\n",
      "       12207       1.00      1.00      1.00         3\n",
      "       12208       1.00      1.00      1.00         6\n",
      "       12209       1.00      0.67      0.80         3\n",
      "       12210       1.00      1.00      1.00         6\n",
      "       12211       0.75      1.00      0.86         3\n",
      "       12212       0.92      0.92      0.92        12\n",
      "       12216       1.00      1.00      1.00        14\n",
      "       12217       1.00      1.00      1.00         8\n",
      "        1222       0.50      1.00      0.67         2\n",
      "        1227       0.00      0.00      0.00         2\n",
      "        1228       1.00      1.00      1.00         5\n",
      "        1229       0.40      0.50      0.44         4\n",
      "         123       0.78      1.00      0.88         7\n",
      "         124       1.00      0.80      0.89        10\n",
      "         125       0.90      0.90      0.90        10\n",
      "         126       1.00      0.80      0.89        10\n",
      "         127       0.67      1.00      0.80         6\n",
      "         128       0.75      0.75      0.75         8\n",
      "         129       0.50      0.40      0.44         5\n",
      "         131       0.88      0.64      0.74        11\n",
      "       13101       0.68      0.62      0.65        21\n",
      "       13102       0.45      0.77      0.57        13\n",
      "       13103       0.78      0.78      0.78         9\n",
      "       13104       0.71      0.53      0.61        19\n",
      "       13105       0.60      1.00      0.75         3\n",
      "       13106       1.00      0.86      0.92         7\n",
      "       13107       0.50      1.00      0.67         1\n",
      "       13108       0.83      0.71      0.77         7\n",
      "        1311       0.67      0.80      0.73         5\n",
      "       13112       0.75      0.60      0.67         5\n",
      "       13113       1.00      0.82      0.90        11\n",
      "       13116       0.62      0.73      0.67        11\n",
      "        1312       0.00      0.00      0.00         3\n",
      "        1313       0.33      0.67      0.44         3\n",
      "        1314       1.00      0.50      0.67         2\n",
      "         132       0.83      0.62      0.71         8\n",
      "       13201       0.90      1.00      0.95         9\n",
      "       13202       1.00      0.95      0.98        21\n",
      "       13203       0.94      0.81      0.87        21\n",
      "       13204       0.60      0.86      0.71         7\n",
      "       13205       1.00      0.67      0.80         3\n",
      "       13206       0.67      1.00      0.80         2\n",
      "       13214       1.00      1.00      1.00         2\n",
      "       13216       0.88      1.00      0.93         7\n",
      "       13217       1.00      0.86      0.92         7\n",
      "         133       0.60      0.43      0.50         7\n",
      "         134       0.86      0.71      0.77        17\n",
      "         135       0.50      0.50      0.50         2\n",
      "         136       1.00      0.50      0.67         4\n",
      "\n",
      "    accuracy                           0.74      1299\n",
      "   macro avg       0.75      0.74      0.72      1299\n",
      "weighted avg       0.77      0.74      0.74      1299\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.7428791377983064\n",
      "Precision:  0.7662663459619411\n",
      "Recall:  0.7474825716498839\n",
      "F1:  0.7396721719869349\n"
     ]
    }
   ],
   "source": [
    "# svc B1 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SVC_B1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.742879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.766266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.747483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.739672</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        SVC_B1\n",
       "Accuracy              0.742879\n",
       "Precision (weighted)  0.766266\n",
       "Recall (weighted)     0.747483\n",
       "F1 (weighted)         0.739672"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "SVC_B1 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                       precision_score(y_test, y_preds, average='weighted'),\n",
    "                       recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1),\n",
    "                       f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "SVC_B1 = SVC_B1.rename(columns={0: 'SVC_B1'},\n",
    "                        index={0: 'Accuracy', 1: 'Precision (weighted)', 2: 'Recall (weighted)', 3: 'F1 (weighted)'})\n",
    "\n",
    "SVC_B1.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Results\n",
    "Random Forest\n",
    "Accuracy: 0.8791377983063895\n",
    "Precision: 0.8950421538198201\n",
    "Recall: 0.8852713178294573\n",
    "F1: 0.8766795872718322\n",
    "SVC\n",
    "Accuracy: 0.7428791377983064\n",
    "Precision: 0.7662663459619411\n",
    "Recall: 0.7474825716498839\n",
    "F1: 0.7396721719869349\n",
    "Random Forest is top model for Building 1 dataset\n",
    "Metrics are higher than oob2 dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Modeling Building: Building 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [],
   "source": [
    "# features\n",
    "X = Building2.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building2['location']\n",
    "\n",
    "# train test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state = 123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "# prepare models\n",
    "algos_Class = []\n",
    "algos_Class.append(('Decision Tree', DecisionTreeClassifier()))\n",
    "algos_Class.append(('Random Forest', RandomForestClassifier()))\n",
    "algos_Class.append(('Support Vector', SVC(kernel='rbf')))\n",
    "algos_Class.append(('K Nearest Neighbors', KNeighborsClassifier()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "# evaluate each model in turn on Building2\n",
    "results = []\n",
    "names = []\n",
    "for name, model in algos_Class:\n",
    "    result = cross_val_score(model, X, y, cv=3, scoring='accuracy')\n",
    "    names.append(name)\n",
    "    results.append(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree 0.38895912347239786 0.05823052704073705\n",
      "Random Forest 0.6153603034134008 0.07068113763719902\n",
      "Support Vector 0.503898019384745 0.06716576589553282\n",
      "K Nearest Neighbors 0.43605141171512857 0.05426000011350143\n"
     ]
    }
   ],
   "source": [
    "# cross validation results Building 2\n",
    "for i in range(len(names)):\n",
    "    print(names[i], results[i].mean(), results[i].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# boxplot algorithm comparison\n",
    "fig = plt.figure()\n",
    "fig.suptitle('Algorithm Comparison')\n",
    "ax = fig.add_subplot(111)\n",
    "plt.boxplot(results)\n",
    "ax.set_xticklabels(names)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Notes: RF top model for building 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.8238516645596292)"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning random forest Building 2\n",
    "rfB2 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=600,\n",
    "                              n_jobs=-1,\n",
    "                             random_state=123)\n",
    "rf_B2 = rfB2.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = rf_B2.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       20101       0.75      0.75      0.75         4\n",
      "       20103       0.91      0.77      0.83        13\n",
      "       20104       0.78      0.93      0.85        15\n",
      "       20106       1.00      0.86      0.92         7\n",
      "       20107       1.00      0.82      0.90        11\n",
      "       20108       0.40      1.00      0.57         2\n",
      "       20110       1.00      0.70      0.82        10\n",
      "       20111       1.00      0.92      0.96        12\n",
      "       20112       0.89      1.00      0.94         8\n",
      "       20113       1.00      1.00      1.00         2\n",
      "       20117       1.00      0.62      0.77         8\n",
      "       20118       0.92      1.00      0.96        11\n",
      "       20119       0.86      0.92      0.89        13\n",
      "       20120       0.64      0.88      0.74         8\n",
      "       20121       1.00      0.93      0.96        14\n",
      "       20122       0.92      0.92      0.92        13\n",
      "       20124       0.77      1.00      0.87        17\n",
      "       20125       1.00      0.70      0.82        10\n",
      "       20126       0.89      0.73      0.80        11\n",
      "       20127       0.92      0.67      0.77        18\n",
      "       20128       0.85      0.85      0.85        13\n",
      "       20129       1.00      0.58      0.74        12\n",
      "       20130       0.88      0.58      0.70        12\n",
      "       20132       0.85      0.79      0.81        14\n",
      "       20133       0.86      0.86      0.86         7\n",
      "       20134       0.83      0.91      0.87        11\n",
      "       20135       1.00      0.71      0.83         7\n",
      "       20136       0.57      0.80      0.67         5\n",
      "       20137       1.00      1.00      1.00         5\n",
      "       20138       1.00      0.90      0.95        10\n",
      "       20139       0.65      0.92      0.76        24\n",
      "       20140       0.84      0.96      0.90        27\n",
      "       20201       0.94      1.00      0.97        17\n",
      "       20202       0.90      0.82      0.86        11\n",
      "       20203       0.83      0.91      0.87        11\n",
      "       20204       1.00      0.60      0.75         5\n",
      "       20205       0.89      0.80      0.84        10\n",
      "       20206       1.00      1.00      1.00         2\n",
      "       20207       1.00      1.00      1.00         6\n",
      "       20208       0.82      1.00      0.90         9\n",
      "       20209       1.00      0.83      0.91         6\n",
      "       20211       0.56      0.83      0.67         6\n",
      "       20214       0.77      0.94      0.85        18\n",
      "       20215       1.00      0.43      0.60         7\n",
      "       21101       0.90      0.56      0.69        16\n",
      "       21102       1.00      0.78      0.88         9\n",
      "       21103       1.00      0.57      0.73         7\n",
      "       21104       0.50      0.25      0.33         4\n",
      "       21105       0.50      0.83      0.62        12\n",
      "       21106       0.83      0.62      0.71         8\n",
      "       21107       0.74      0.88      0.80        16\n",
      "       21108       0.69      0.90      0.78        10\n",
      "       21109       0.78      0.54      0.64        13\n",
      "       21110       0.60      0.92      0.73        13\n",
      "       21111       0.75      0.75      0.75         4\n",
      "       21112       0.88      0.93      0.90        15\n",
      "       21113       0.92      0.92      0.92        12\n",
      "       21114       1.00      1.00      1.00        17\n",
      "       21115       0.93      0.88      0.90        16\n",
      "       21116       0.67      1.00      0.80         4\n",
      "       21117       0.86      1.00      0.92         6\n",
      "       21118       1.00      0.25      0.40         8\n",
      "       21119       0.60      1.00      0.75         3\n",
      "       21120       1.00      0.80      0.89         5\n",
      "       21121       0.83      1.00      0.91         5\n",
      "       21122       1.00      0.71      0.83         7\n",
      "       21123       1.00      0.71      0.83         7\n",
      "       21124       1.00      0.92      0.96        12\n",
      "       21125       0.86      1.00      0.92         6\n",
      "       21126       1.00      0.73      0.84        11\n",
      "       21127       1.00      1.00      1.00         6\n",
      "       21128       0.93      0.81      0.87        16\n",
      "       21129       0.64      1.00      0.78         9\n",
      "       21130       0.88      0.70      0.78        10\n",
      "       21131       1.00      1.00      1.00        13\n",
      "       21132       0.88      1.00      0.93         7\n",
      "       21133       0.92      0.92      0.92        13\n",
      "       21134       0.88      0.82      0.85        17\n",
      "       21135       0.82      0.82      0.82        11\n",
      "       21136       0.80      1.00      0.89         8\n",
      "       21137       1.00      0.88      0.93         8\n",
      "       21140       0.46      1.00      0.63         6\n",
      "       21141       1.00      0.38      0.56        13\n",
      "       21143       0.70      1.00      0.82        14\n",
      "       21201       1.00      1.00      1.00         3\n",
      "       21202       0.91      0.91      0.91        11\n",
      "       21203       1.00      0.89      0.94         9\n",
      "       21204       1.00      1.00      1.00         4\n",
      "       21205       1.00      0.50      0.67         4\n",
      "       21206       0.88      1.00      0.93         7\n",
      "       21207       1.00      1.00      1.00         5\n",
      "       21209       1.00      1.00      1.00         4\n",
      "       21212       1.00      1.00      1.00         3\n",
      "       21214       0.81      1.00      0.90        13\n",
      "       21215       1.00      0.40      0.57         5\n",
      "       21216       1.00      0.78      0.88         9\n",
      "       21218       0.83      1.00      0.91         5\n",
      "       21219       1.00      0.67      0.80         3\n",
      "       21220       1.00      1.00      1.00         3\n",
      "       21221       0.80      0.80      0.80         5\n",
      "       21223       0.67      1.00      0.80         2\n",
      "       21224       0.73      1.00      0.85        11\n",
      "       21225       1.00      0.67      0.80         3\n",
      "       22101       0.88      0.88      0.88         8\n",
      "       22102       0.73      0.89      0.80        18\n",
      "       22103       1.00      0.50      0.67         8\n",
      "       22104       0.82      1.00      0.90         9\n",
      "       22105       0.92      0.75      0.83        16\n",
      "       22106       0.88      1.00      0.93         7\n",
      "       22107       0.80      0.89      0.84         9\n",
      "       22108       1.00      0.67      0.80         6\n",
      "       22109       1.00      1.00      1.00         3\n",
      "       22110       1.00      0.57      0.73         7\n",
      "       22111       0.71      0.71      0.71         7\n",
      "       22112       0.69      1.00      0.81        11\n",
      "       22113       0.57      1.00      0.73         4\n",
      "       22114       1.00      1.00      1.00         6\n",
      "       22115       0.92      0.92      0.92        13\n",
      "       22116       1.00      1.00      1.00         3\n",
      "       22117       1.00      0.75      0.86         4\n",
      "       22118       0.85      0.92      0.88        12\n",
      "       22119       0.89      0.89      0.89         9\n",
      "       22120       1.00      0.94      0.97        16\n",
      "       22121       0.71      0.83      0.77         6\n",
      "       22122       0.77      0.94      0.85        18\n",
      "       22123       1.00      0.67      0.80         6\n",
      "       22124       1.00      0.80      0.89         5\n",
      "       22125       0.33      1.00      0.50         1\n",
      "       22126       0.83      1.00      0.91         5\n",
      "       22127       1.00      1.00      1.00         8\n",
      "       22128       1.00      0.90      0.95        10\n",
      "       22129       0.89      0.89      0.89         9\n",
      "       22130       1.00      0.80      0.89         5\n",
      "       22131       1.00      0.40      0.57         5\n",
      "       22132       0.93      1.00      0.96        13\n",
      "       22133       1.00      0.89      0.94         9\n",
      "       22134       1.00      1.00      1.00         3\n",
      "       22135       1.00      1.00      1.00         7\n",
      "       22136       0.94      0.89      0.92        19\n",
      "       22137       0.75      0.90      0.82        10\n",
      "       22138       0.79      0.85      0.81        13\n",
      "       22139       0.93      1.00      0.97        14\n",
      "       22140       1.00      0.56      0.71         9\n",
      "       22143       1.00      0.83      0.91        12\n",
      "       22144       1.00      1.00      1.00         5\n",
      "       22201       0.67      1.00      0.80         2\n",
      "       22202       1.00      0.80      0.89         5\n",
      "       22203       1.00      1.00      1.00         3\n",
      "       22204       1.00      1.00      1.00         3\n",
      "       22205       1.00      0.75      0.86         4\n",
      "       22206       0.80      1.00      0.89         8\n",
      "       22207       1.00      0.60      0.75         5\n",
      "       22208       0.50      1.00      0.67         1\n",
      "       22209       1.00      0.50      0.67         2\n",
      "       22210       1.00      1.00      1.00         3\n",
      "       22211       1.00      1.00      1.00         2\n",
      "       22213       0.67      1.00      0.80         2\n",
      "       22214       1.00      1.00      1.00         3\n",
      "       22217       1.00      1.00      1.00         8\n",
      "       22220       1.00      1.00      1.00         3\n",
      "       23101       0.82      1.00      0.90         9\n",
      "       23102       0.82      0.82      0.82        11\n",
      "       23103       0.86      0.60      0.71        10\n",
      "       23104       1.00      0.83      0.91         6\n",
      "       23105       0.40      1.00      0.57         2\n",
      "       23106       0.90      1.00      0.95        18\n",
      "       23107       0.67      0.86      0.75        14\n",
      "       23108       0.93      0.93      0.93        14\n",
      "       23109       0.67      1.00      0.80        16\n",
      "       23110       0.93      0.93      0.93        15\n",
      "       23111       0.88      0.70      0.78        10\n",
      "       23112       0.75      0.43      0.55         7\n",
      "       23113       1.00      1.00      1.00         8\n",
      "       23114       0.85      0.85      0.85        13\n",
      "       23115       0.88      0.78      0.82         9\n",
      "       23116       1.00      0.44      0.62         9\n",
      "       23117       1.00      0.83      0.91         6\n",
      "       23118       0.00      0.00      0.00         0\n",
      "       23119       1.00      0.67      0.80         6\n",
      "       23120       1.00      0.75      0.86         8\n",
      "       23121       0.89      0.80      0.84        10\n",
      "       23122       0.80      0.80      0.80        10\n",
      "       23123       1.00      1.00      1.00         6\n",
      "       23124       0.91      0.91      0.91        11\n",
      "       23125       0.81      0.87      0.84        15\n",
      "       23126       0.89      0.89      0.89        19\n",
      "       23127       0.86      1.00      0.92         6\n",
      "       23128       0.82      1.00      0.90         9\n",
      "       23129       0.86      0.92      0.89        13\n",
      "       23130       1.00      0.88      0.93         8\n",
      "       23131       1.00      1.00      1.00        12\n",
      "       23132       0.80      0.67      0.73         6\n",
      "       23133       0.86      0.86      0.86         7\n",
      "       23134       1.00      1.00      1.00         3\n",
      "       23135       1.00      1.00      1.00         1\n",
      "       23136       0.95      1.00      0.98        21\n",
      "       23137       1.00      0.90      0.95        10\n",
      "       23140       0.59      1.00      0.74        10\n",
      "       23141       1.00      0.45      0.62        11\n",
      "       23143       0.80      0.50      0.62         8\n",
      "       23201       1.00      0.85      0.92        13\n",
      "       23202       1.00      1.00      1.00         3\n",
      "       23203       0.75      1.00      0.86         6\n",
      "       23204       1.00      0.75      0.86         4\n",
      "       23205       1.00      1.00      1.00         5\n",
      "       23206       1.00      1.00      1.00         4\n",
      "       23207       1.00      1.00      1.00         4\n",
      "       23208       1.00      1.00      1.00         4\n",
      "       23209       1.00      1.00      1.00         5\n",
      "       23210       0.80      1.00      0.89         4\n",
      "       23211       1.00      0.83      0.91         6\n",
      "       23212       1.00      0.71      0.83         7\n",
      "       23213       1.00      1.00      1.00         4\n",
      "       23214       0.80      1.00      0.89         8\n",
      "       23215       1.00      1.00      1.00         7\n",
      "       23216       1.00      1.00      1.00         9\n",
      "       23217       1.00      1.00      1.00         3\n",
      "       23218       0.83      1.00      0.91         5\n",
      "       23219       0.67      0.67      0.67         3\n",
      "       23220       1.00      0.75      0.86         4\n",
      "       23221       1.00      1.00      1.00         6\n",
      "       23222       1.00      1.00      1.00         2\n",
      "       23223       0.71      1.00      0.83        10\n",
      "       23224       1.00      1.00      1.00         5\n",
      "       23225       1.00      0.88      0.93         8\n",
      "       23226       0.60      1.00      0.75         3\n",
      "       23227       1.00      0.60      0.75         5\n",
      "       23228       1.00      0.71      0.83         7\n",
      "       23229       1.00      0.56      0.71         9\n",
      "       23230       0.67      1.00      0.80         4\n",
      "       23231       0.78      1.00      0.88         7\n",
      "       23232       1.00      1.00      1.00         5\n",
      "       23233       1.00      0.80      0.89         5\n",
      "       23234       0.60      1.00      0.75         3\n",
      "       23235       0.83      0.83      0.83         6\n",
      "       23236       1.00      0.89      0.94         9\n",
      "       23237       1.00      1.00      1.00         4\n",
      "       23238       1.00      1.00      1.00         4\n",
      "       23239       1.00      1.00      1.00         4\n",
      "       23240       0.86      0.86      0.86         7\n",
      "       23241       0.90      0.82      0.86        11\n",
      "       23242       0.89      1.00      0.94         8\n",
      "       23243       0.86      1.00      0.92         6\n",
      "       23244       0.67      0.67      0.67         3\n",
      "       23245       1.00      0.75      0.86         8\n",
      "       23246       0.80      1.00      0.89         4\n",
      "       23247       0.86      1.00      0.92         6\n",
      "       23248       1.00      0.86      0.92         7\n",
      "       23250       1.00      0.86      0.92         7\n",
      "       23253       1.00      0.89      0.94         9\n",
      "       23254       0.75      1.00      0.86         3\n",
      "       24101       1.00      0.50      0.67         6\n",
      "       24102       1.00      0.33      0.50         6\n",
      "       24103       0.00      0.00      0.00         2\n",
      "       24104       0.67      0.40      0.50         5\n",
      "       24105       1.00      0.38      0.55         8\n",
      "       24106       1.00      0.33      0.50         6\n",
      "       24107       1.00      0.67      0.80         6\n",
      "       24108       1.00      0.57      0.73         7\n",
      "       24109       1.00      0.75      0.86         4\n",
      "       24110       1.00      0.43      0.60         7\n",
      "       24111       0.80      0.80      0.80         5\n",
      "       24112       1.00      0.40      0.57        10\n",
      "       24113       0.03      1.00      0.06         2\n",
      "       24114       1.00      0.50      0.67         2\n",
      "       24115       1.00      0.25      0.40         4\n",
      "       24116       1.00      0.25      0.40         4\n",
      "       24117       1.00      0.50      0.67         6\n",
      "       24118       0.75      1.00      0.86         3\n",
      "       24119       1.00      0.33      0.50         6\n",
      "       24120       1.00      0.44      0.62         9\n",
      "       24121       1.00      1.00      1.00         1\n",
      "       24122       1.00      0.67      0.80         3\n",
      "       24123       1.00      1.00      1.00         3\n",
      "       24124       1.00      0.50      0.67         2\n",
      "       24125       1.00      0.50      0.67         6\n",
      "       24126       0.50      0.25      0.33         4\n",
      "       24127       1.00      0.29      0.44         7\n",
      "       24128       1.00      0.50      0.67        10\n",
      "       24129       1.00      0.71      0.83         7\n",
      "       24130       1.00      0.33      0.50         3\n",
      "       24131       1.00      0.50      0.67         8\n",
      "       24132       1.00      0.60      0.75         5\n",
      "       24133       1.00      0.25      0.40         4\n",
      "       24134       1.00      0.36      0.53        11\n",
      "       24135       0.67      0.29      0.40         7\n",
      "       24136       0.12      0.88      0.21         8\n",
      "       24137       1.00      0.20      0.33         5\n",
      "       24138       1.00      0.44      0.62         9\n",
      "       24139       0.50      0.50      0.50         2\n",
      "       24140       1.00      0.50      0.67         4\n",
      "       24141       1.00      0.92      0.96        13\n",
      "       24142       0.80      1.00      0.89         4\n",
      "       24143       1.00      0.80      0.89         5\n",
      "       24146       1.00      0.38      0.55         8\n",
      "       24147       1.00      0.33      0.50         6\n",
      "       24201       1.00      1.00      1.00         2\n",
      "       24202       1.00      0.75      0.86         4\n",
      "       24203       0.33      1.00      0.50         1\n",
      "       24204       1.00      0.67      0.80         3\n",
      "       24205       1.00      1.00      1.00         2\n",
      "       24206       1.00      1.00      1.00         1\n",
      "       24207       0.67      1.00      0.80         2\n",
      "       24208       1.00      0.75      0.86         4\n",
      "       24209       1.00      1.00      1.00         4\n",
      "       24210       1.00      1.00      1.00         4\n",
      "       24211       1.00      1.00      1.00         4\n",
      "       24212       1.00      1.00      1.00         4\n",
      "       24213       0.67      1.00      0.80         2\n",
      "       24214       1.00      0.50      0.67         2\n",
      "       24215       1.00      1.00      1.00         1\n",
      "       24216       1.00      1.00      1.00         2\n",
      "       24217       1.00      1.00      1.00         3\n",
      "       24218       1.00      1.00      1.00         2\n",
      "       24219       1.00      1.00      1.00         3\n",
      "\n",
      "    accuracy                           0.82      2373\n",
      "   macro avg       0.89      0.82      0.82      2373\n",
      "weighted avg       0.89      0.82      0.83      2373\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.8238516645596292\n",
      "Precision:  0.8905551274694012\n",
      "Recall:  0.8245466048080978\n",
      "F1:  0.8325727025030154\n"
     ]
    }
   ],
   "source": [
    "# Random Forest Building 2 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_B2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.823852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.890555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.824547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.832573</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         RF_B2\n",
       "Accuracy              0.823852\n",
       "Precision (weighted)  0.890555\n",
       "Recall (weighted)     0.824547\n",
       "F1 (weighted)         0.832573"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "RF_B2 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                      precision_score(y_test, y_preds, average='weighted'),\n",
    "                      recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1),\n",
    "                     f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "RF_B2 = RF_B2.rename(columns={0: 'RF_B2'},\n",
    "                     index={0: 'Accuracy',\n",
    "                            1: 'Precision (weighted)',\n",
    "                            2: 'Recall (weighted)',\n",
    "                            3: 'F1 (weighted)'})\n",
    "\n",
    "RF_B2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.769231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.933333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.818182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.916667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0  0.750000\n",
       "1  0.769231\n",
       "2  0.933333\n",
       "3  0.857143\n",
       "4  0.818182\n",
       "5  1.000000\n",
       "6  0.700000\n",
       "7  0.916667\n",
       "8  1.000000\n",
       "9  1.000000"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compare RF recall counts by quartile\n",
    "rf_B2_recall = pd.DataFrame(recall_score(y_test, y_preds, average=None))\n",
    "rf_B2_recall.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Building 2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-0.002, 0.25]</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.25, 0.5]</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.5, 0.75]</th>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.75, 1.0]</th>\n",
       "      <td>217</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Building 2\n",
       "(-0.002, 0.25]           9\n",
       "(0.25, 0.5]             36\n",
       "(0.5, 0.75]             53\n",
       "(0.75, 1.0]            217"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_B2_quartile = pd.DataFrame(rf_B2_recall[0].value_counts(bins=4, sort=False))\n",
    "\n",
    "# rename column\n",
    "rf_B2_quartile = rf_B2_quartile.rename(columns={0: 'Building 2'})\n",
    "\n",
    "rf_B2_quartile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [],
   "source": [
    "# manual tuning support vector Building 2\n",
    "param_grid = {\n",
    "    'C': [1, 10, 100, 1000]\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=3, error_score=nan,\n",
       "             estimator=SVC(C=10, break_ties=False, cache_size=200,\n",
       "                           class_weight=None, coef0=0.0,\n",
       "                           decision_function_shape='ovr', degree=3,\n",
       "                           gamma='scale', kernel='rbf', max_iter=-1,\n",
       "                           probability=False, random_state=123, shrinking=True,\n",
       "                           tol=0.001, verbose=False),\n",
       "             iid='deprecated', n_jobs=-1, param_grid={'C': [1, 10, 100, 1000]},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring=None, verbose=0)"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB2 = GridSearchCV(estimator=svc, param_grid=param_grid, cv=3, n_jobs=-1)\n",
    "gs_svcB2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 10}"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gs_svcB2.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy Score: \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(None, 0.7252423093131057)"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# model tuning\n",
    "svcB2 = SVC(C=10, random_state=123)\n",
    "svc_B2 = svcB2.fit(X_train, y_train)\n",
    "\n",
    "# predictions\n",
    "y_preds = svc_B2.predict(X_test)\n",
    "# assessment\n",
    "print('Accuracy Score: '), accuracy_score(y_test, y_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       20101       0.50      0.50      0.50         4\n",
      "       20103       0.70      0.54      0.61        13\n",
      "       20104       0.74      0.93      0.82        15\n",
      "       20106       1.00      0.71      0.83         7\n",
      "       20107       0.80      0.73      0.76        11\n",
      "       20108       0.25      0.50      0.33         2\n",
      "       20110       1.00      0.80      0.89        10\n",
      "       20111       0.92      0.92      0.92        12\n",
      "       20112       0.80      1.00      0.89         8\n",
      "       20113       0.67      1.00      0.80         2\n",
      "       20117       1.00      0.50      0.67         8\n",
      "       20118       0.67      0.91      0.77        11\n",
      "       20119       0.92      0.92      0.92        13\n",
      "       20120       0.80      1.00      0.89         8\n",
      "       20121       0.91      0.71      0.80        14\n",
      "       20122       0.79      0.85      0.81        13\n",
      "       20124       0.73      0.94      0.82        17\n",
      "       20125       0.89      0.80      0.84        10\n",
      "       20126       1.00      0.64      0.78        11\n",
      "       20127       0.83      0.56      0.67        18\n",
      "       20128       0.67      0.77      0.71        13\n",
      "       20129       0.89      0.67      0.76        12\n",
      "       20130       0.58      0.58      0.58        12\n",
      "       20132       0.77      0.71      0.74        14\n",
      "       20133       0.67      0.57      0.62         7\n",
      "       20134       1.00      0.55      0.71        11\n",
      "       20135       0.67      0.57      0.62         7\n",
      "       20136       0.33      0.20      0.25         5\n",
      "       20137       0.71      1.00      0.83         5\n",
      "       20138       0.57      0.80      0.67        10\n",
      "       20139       0.61      0.83      0.70        24\n",
      "       20140       0.85      0.85      0.85        27\n",
      "       20201       0.77      1.00      0.87        17\n",
      "       20202       0.88      0.64      0.74        11\n",
      "       20203       0.69      0.82      0.75        11\n",
      "       20204       0.71      1.00      0.83         5\n",
      "       20205       0.80      0.80      0.80        10\n",
      "       20206       0.50      1.00      0.67         2\n",
      "       20207       1.00      0.83      0.91         6\n",
      "       20208       0.67      0.89      0.76         9\n",
      "       20209       0.83      0.83      0.83         6\n",
      "       20211       0.71      0.83      0.77         6\n",
      "       20214       0.87      0.72      0.79        18\n",
      "       20215       1.00      0.29      0.44         7\n",
      "       21101       0.70      0.44      0.54        16\n",
      "       21102       0.70      0.78      0.74         9\n",
      "       21103       1.00      0.43      0.60         7\n",
      "       21104       0.67      0.50      0.57         4\n",
      "       21105       0.59      0.83      0.69        12\n",
      "       21106       0.83      0.62      0.71         8\n",
      "       21107       0.75      0.56      0.64        16\n",
      "       21108       0.57      0.80      0.67        10\n",
      "       21109       0.67      0.46      0.55        13\n",
      "       21110       0.56      0.77      0.65        13\n",
      "       21111       0.50      0.75      0.60         4\n",
      "       21112       0.86      0.80      0.83        15\n",
      "       21113       0.79      0.92      0.85        12\n",
      "       21114       1.00      0.94      0.97        17\n",
      "       21115       0.69      0.69      0.69        16\n",
      "       21116       0.80      1.00      0.89         4\n",
      "       21117       0.50      1.00      0.67         6\n",
      "       21118       1.00      0.50      0.67         8\n",
      "       21119       0.67      0.67      0.67         3\n",
      "       21120       1.00      0.40      0.57         5\n",
      "       21121       1.00      0.80      0.89         5\n",
      "       21122       0.88      1.00      0.93         7\n",
      "       21123       0.50      0.57      0.53         7\n",
      "       21124       1.00      0.75      0.86        12\n",
      "       21125       0.67      1.00      0.80         6\n",
      "       21126       1.00      0.64      0.78        11\n",
      "       21127       1.00      1.00      1.00         6\n",
      "       21128       0.72      0.81      0.76        16\n",
      "       21129       0.50      0.67      0.57         9\n",
      "       21130       1.00      0.70      0.82        10\n",
      "       21131       0.77      0.77      0.77        13\n",
      "       21132       0.58      1.00      0.74         7\n",
      "       21133       0.82      0.69      0.75        13\n",
      "       21134       0.75      0.53      0.62        17\n",
      "       21135       0.60      0.55      0.57        11\n",
      "       21136       0.70      0.88      0.78         8\n",
      "       21137       0.88      0.88      0.88         8\n",
      "       21140       0.46      1.00      0.63         6\n",
      "       21141       0.83      0.38      0.53        13\n",
      "       21143       0.67      1.00      0.80        14\n",
      "       21201       0.75      1.00      0.86         3\n",
      "       21202       0.88      0.64      0.74        11\n",
      "       21203       1.00      0.89      0.94         9\n",
      "       21204       0.80      1.00      0.89         4\n",
      "       21205       1.00      0.50      0.67         4\n",
      "       21206       1.00      0.86      0.92         7\n",
      "       21207       1.00      1.00      1.00         5\n",
      "       21209       0.75      0.75      0.75         4\n",
      "       21212       0.43      1.00      0.60         3\n",
      "       21214       0.80      0.92      0.86        13\n",
      "       21215       0.67      0.40      0.50         5\n",
      "       21216       1.00      0.78      0.88         9\n",
      "       21218       0.71      1.00      0.83         5\n",
      "       21219       1.00      0.67      0.80         3\n",
      "       21220       1.00      1.00      1.00         3\n",
      "       21221       0.80      0.80      0.80         5\n",
      "       21223       0.50      1.00      0.67         2\n",
      "       21224       0.62      0.91      0.74        11\n",
      "       21225       1.00      0.67      0.80         3\n",
      "       22101       0.60      0.75      0.67         8\n",
      "       22102       0.50      0.61      0.55        18\n",
      "       22103       0.67      0.25      0.36         8\n",
      "       22104       0.69      1.00      0.82         9\n",
      "       22105       0.73      0.50      0.59        16\n",
      "       22106       0.50      0.43      0.46         7\n",
      "       22107       0.67      0.89      0.76         9\n",
      "       22108       0.67      0.67      0.67         6\n",
      "       22109       0.43      1.00      0.60         3\n",
      "       22110       0.80      0.57      0.67         7\n",
      "       22111       0.50      0.71      0.59         7\n",
      "       22112       0.69      0.82      0.75        11\n",
      "       22113       0.40      0.50      0.44         4\n",
      "       22114       0.45      0.83      0.59         6\n",
      "       22115       1.00      0.77      0.87        13\n",
      "       22116       0.50      0.67      0.57         3\n",
      "       22117       0.67      0.50      0.57         4\n",
      "       22118       0.80      0.67      0.73        12\n",
      "       22119       1.00      0.78      0.88         9\n",
      "       22120       0.87      0.81      0.84        16\n",
      "       22121       0.44      0.67      0.53         6\n",
      "       22122       0.80      0.67      0.73        18\n",
      "       22123       0.75      0.50      0.60         6\n",
      "       22124       0.57      0.80      0.67         5\n",
      "       22125       0.33      1.00      0.50         1\n",
      "       22126       0.80      0.80      0.80         5\n",
      "       22127       0.75      0.75      0.75         8\n",
      "       22128       0.86      0.60      0.71        10\n",
      "       22129       0.62      0.56      0.59         9\n",
      "       22130       0.60      0.60      0.60         5\n",
      "       22131       0.50      0.40      0.44         5\n",
      "       22132       0.69      0.69      0.69        13\n",
      "       22133       1.00      0.56      0.71         9\n",
      "       22134       1.00      0.67      0.80         3\n",
      "       22135       0.50      0.86      0.63         7\n",
      "       22136       0.92      0.63      0.75        19\n",
      "       22137       0.83      1.00      0.91        10\n",
      "       22138       0.79      0.85      0.81        13\n",
      "       22139       0.93      1.00      0.97        14\n",
      "       22140       1.00      0.56      0.71         9\n",
      "       22143       1.00      0.83      0.91        12\n",
      "       22144       0.60      0.60      0.60         5\n",
      "       22201       0.67      1.00      0.80         2\n",
      "       22202       1.00      0.80      0.89         5\n",
      "       22203       1.00      1.00      1.00         3\n",
      "       22204       1.00      1.00      1.00         3\n",
      "       22205       1.00      0.50      0.67         4\n",
      "       22206       0.73      1.00      0.84         8\n",
      "       22207       1.00      0.60      0.75         5\n",
      "       22208       0.50      1.00      0.67         1\n",
      "       22209       1.00      0.50      0.67         2\n",
      "       22210       1.00      1.00      1.00         3\n",
      "       22211       1.00      1.00      1.00         2\n",
      "       22213       0.67      1.00      0.80         2\n",
      "       22214       1.00      0.33      0.50         3\n",
      "       22217       1.00      0.88      0.93         8\n",
      "       22220       1.00      1.00      1.00         3\n",
      "       23101       0.80      0.89      0.84         9\n",
      "       23102       0.82      0.82      0.82        11\n",
      "       23103       0.86      0.60      0.71        10\n",
      "       23104       1.00      0.67      0.80         6\n",
      "       23105       0.11      0.50      0.18         2\n",
      "       23106       0.71      0.56      0.63        18\n",
      "       23107       0.43      0.86      0.57        14\n",
      "       23108       0.92      0.79      0.85        14\n",
      "       23109       0.71      0.75      0.73        16\n",
      "       23110       0.92      0.73      0.81        15\n",
      "       23111       0.86      0.60      0.71        10\n",
      "       23112       0.67      0.29      0.40         7\n",
      "       23113       0.80      1.00      0.89         8\n",
      "       23114       1.00      0.62      0.76        13\n",
      "       23115       0.54      0.78      0.64         9\n",
      "       23116       0.83      0.56      0.67         9\n",
      "       23117       0.75      1.00      0.86         6\n",
      "       23118       0.00      0.00      0.00         0\n",
      "       23119       1.00      0.83      0.91         6\n",
      "       23120       0.71      0.62      0.67         8\n",
      "       23121       0.86      0.60      0.71        10\n",
      "       23122       0.50      0.50      0.50        10\n",
      "       23123       0.71      0.83      0.77         6\n",
      "       23124       0.64      0.64      0.64        11\n",
      "       23125       0.63      0.80      0.71        15\n",
      "       23126       0.67      0.63      0.65        19\n",
      "       23127       0.60      1.00      0.75         6\n",
      "       23128       1.00      1.00      1.00         9\n",
      "       23129       0.79      0.85      0.81        13\n",
      "       23130       0.67      0.50      0.57         8\n",
      "       23131       0.92      1.00      0.96        12\n",
      "       23132       1.00      0.67      0.80         6\n",
      "       23133       1.00      0.71      0.83         7\n",
      "       23134       1.00      1.00      1.00         3\n",
      "       23135       1.00      1.00      1.00         1\n",
      "       23136       1.00      0.95      0.98        21\n",
      "       23137       1.00      1.00      1.00        10\n",
      "       23140       0.80      0.80      0.80        10\n",
      "       23141       0.91      0.91      0.91        11\n",
      "       23143       0.86      0.75      0.80         8\n",
      "       23201       1.00      0.62      0.76        13\n",
      "       23202       0.75      1.00      0.86         3\n",
      "       23203       0.45      0.83      0.59         6\n",
      "       23204       0.50      0.25      0.33         4\n",
      "       23205       1.00      1.00      1.00         5\n",
      "       23206       1.00      1.00      1.00         4\n",
      "       23207       0.50      0.25      0.33         4\n",
      "       23208       0.75      0.75      0.75         4\n",
      "       23209       0.83      1.00      0.91         5\n",
      "       23210       0.43      0.75      0.55         4\n",
      "       23211       1.00      0.83      0.91         6\n",
      "       23212       0.86      0.86      0.86         7\n",
      "       23213       0.75      0.75      0.75         4\n",
      "       23214       0.88      0.88      0.88         8\n",
      "       23215       0.71      0.71      0.71         7\n",
      "       23216       0.90      1.00      0.95         9\n",
      "       23217       0.75      1.00      0.86         3\n",
      "       23218       0.83      1.00      0.91         5\n",
      "       23219       0.67      0.67      0.67         3\n",
      "       23220       1.00      0.75      0.86         4\n",
      "       23221       0.75      1.00      0.86         6\n",
      "       23222       1.00      1.00      1.00         2\n",
      "       23223       0.82      0.90      0.86        10\n",
      "       23224       0.71      1.00      0.83         5\n",
      "       23225       1.00      0.75      0.86         8\n",
      "       23226       0.50      1.00      0.67         3\n",
      "       23227       1.00      0.20      0.33         5\n",
      "       23228       0.60      0.43      0.50         7\n",
      "       23229       1.00      0.67      0.80         9\n",
      "       23230       0.38      0.75      0.50         4\n",
      "       23231       0.86      0.86      0.86         7\n",
      "       23232       0.83      1.00      0.91         5\n",
      "       23233       1.00      0.40      0.57         5\n",
      "       23234       0.33      0.67      0.44         3\n",
      "       23235       0.75      0.50      0.60         6\n",
      "       23236       1.00      0.89      0.94         9\n",
      "       23237       0.80      1.00      0.89         4\n",
      "       23238       0.50      0.50      0.50         4\n",
      "       23239       0.40      0.50      0.44         4\n",
      "       23240       0.86      0.86      0.86         7\n",
      "       23241       0.80      0.73      0.76        11\n",
      "       23242       0.78      0.88      0.82         8\n",
      "       23243       0.75      1.00      0.86         6\n",
      "       23244       0.50      0.33      0.40         3\n",
      "       23245       1.00      0.75      0.86         8\n",
      "       23246       0.80      1.00      0.89         4\n",
      "       23247       0.86      1.00      0.92         6\n",
      "       23248       1.00      0.86      0.92         7\n",
      "       23250       1.00      0.86      0.92         7\n",
      "       23253       1.00      0.78      0.88         9\n",
      "       23254       1.00      1.00      1.00         3\n",
      "       24101       1.00      0.50      0.67         6\n",
      "       24102       1.00      0.33      0.50         6\n",
      "       24103       0.00      0.00      0.00         2\n",
      "       24104       0.50      0.40      0.44         5\n",
      "       24105       1.00      0.38      0.55         8\n",
      "       24106       1.00      0.33      0.50         6\n",
      "       24107       1.00      0.50      0.67         6\n",
      "       24108       1.00      0.57      0.73         7\n",
      "       24109       1.00      0.75      0.86         4\n",
      "       24110       1.00      0.43      0.60         7\n",
      "       24111       0.80      0.80      0.80         5\n",
      "       24112       1.00      0.40      0.57        10\n",
      "       24113       0.03      1.00      0.06         2\n",
      "       24114       1.00      0.50      0.67         2\n",
      "       24115       1.00      0.25      0.40         4\n",
      "       24116       0.50      0.25      0.33         4\n",
      "       24117       1.00      0.33      0.50         6\n",
      "       24118       0.75      1.00      0.86         3\n",
      "       24119       1.00      0.33      0.50         6\n",
      "       24120       1.00      0.44      0.62         9\n",
      "       24121       1.00      1.00      1.00         1\n",
      "       24122       1.00      0.67      0.80         3\n",
      "       24123       1.00      1.00      1.00         3\n",
      "       24124       1.00      0.50      0.67         2\n",
      "       24125       1.00      0.50      0.67         6\n",
      "       24126       0.50      0.25      0.33         4\n",
      "       24127       1.00      0.29      0.44         7\n",
      "       24128       0.71      0.50      0.59        10\n",
      "       24129       1.00      0.43      0.60         7\n",
      "       24130       1.00      0.33      0.50         3\n",
      "       24131       1.00      0.50      0.67         8\n",
      "       24132       1.00      0.60      0.75         5\n",
      "       24133       1.00      0.25      0.40         4\n",
      "       24134       1.00      0.27      0.43        11\n",
      "       24135       0.50      0.29      0.36         7\n",
      "       24136       0.12      0.88      0.21         8\n",
      "       24137       1.00      0.20      0.33         5\n",
      "       24138       1.00      0.33      0.50         9\n",
      "       24139       0.50      0.50      0.50         2\n",
      "       24140       1.00      0.50      0.67         4\n",
      "       24141       1.00      0.92      0.96        13\n",
      "       24142       0.80      1.00      0.89         4\n",
      "       24143       1.00      0.80      0.89         5\n",
      "       24146       1.00      0.38      0.55         8\n",
      "       24147       1.00      0.33      0.50         6\n",
      "       24201       1.00      1.00      1.00         2\n",
      "       24202       1.00      0.50      0.67         4\n",
      "       24203       0.25      1.00      0.40         1\n",
      "       24204       1.00      0.67      0.80         3\n",
      "       24205       1.00      1.00      1.00         2\n",
      "       24206       1.00      1.00      1.00         1\n",
      "       24207       0.67      1.00      0.80         2\n",
      "       24208       0.60      0.75      0.67         4\n",
      "       24209       1.00      0.75      0.86         4\n",
      "       24210       1.00      0.75      0.86         4\n",
      "       24211       1.00      1.00      1.00         4\n",
      "       24212       1.00      0.75      0.86         4\n",
      "       24213       0.50      1.00      0.67         2\n",
      "       24214       1.00      0.50      0.67         2\n",
      "       24215       1.00      1.00      1.00         1\n",
      "       24216       1.00      1.00      1.00         2\n",
      "       24217       1.00      1.00      1.00         3\n",
      "       24218       1.00      1.00      1.00         2\n",
      "       24219       1.00      1.00      1.00         3\n",
      "\n",
      "    accuracy                           0.73      2373\n",
      "   macro avg       0.79      0.73      0.72      2373\n",
      "weighted avg       0.80      0.73      0.73      2373\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_preds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  0.7252423093131057\n",
      "Precision:  0.8012967063723588\n",
      "Recall:  0.7258540700126529\n",
      "F1:  0.734836669902447\n"
     ]
    }
   ],
   "source": [
    "# svc B2 metrics compiled\n",
    "print(('Accuracy: '), accuracy_score(y_test, y_preds))\n",
    "print(('Precision: '), precision_score(y_test, y_preds, average='weighted'))\n",
    "print(('Recall: '), recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds), zero_division=1))\n",
    "print(('F1: '), f1_score(y_test, y_preds, average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SVC_B2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.725242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.801297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.725854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.734837</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        SVC_B2\n",
       "Accuracy              0.725242\n",
       "Precision (weighted)  0.801297\n",
       "Recall (weighted)     0.725854\n",
       "F1 (weighted)         0.734837"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe of metrics\n",
    "SVC_B2 = pd.DataFrame([accuracy_score(y_test, y_preds),\n",
    "                       precision_score(y_test, y_preds, average='weighted'),\n",
    "                       recall_score(y_test, y_preds, average='weighted', labels=np.unique(y_preds)),\n",
    "                       f1_score(y_test, y_preds, average='weighted')])\n",
    "\n",
    "# rename column and indexes\n",
    "SVC_B2 = SVC_B2.rename(columns={0: 'SVC_B2'},\n",
    "                        index={0: 'Accuracy', 1: 'Precision (weighted)', 2: 'Recall (weighted)', 3: 'F1 (weighted)'})\n",
    "\n",
    "SVC_B2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Results Building 2\n",
    "Random Forest\n",
    "Accuracy: 0.8238516645596292\n",
    "Precision: 0.8905551274694012\n",
    "Recall: 0.8245466048080978\n",
    "F1: 0.8325727025030154\n",
    "SVC\n",
    "Accuracy: 0.7252423093131057\n",
    "Precision: 0.8012967063723588\n",
    "Recall: 0.7258540700126529\n",
    "F1: 0.734836669902447\n",
    "\n",
    "Random Forest is top model for Building 2 dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_OOB</th>\n",
       "      <th>RF_B0</th>\n",
       "      <th>RF_B1</th>\n",
       "      <th>RF_B2</th>\n",
       "      <th>SVC_oob</th>\n",
       "      <th>SVC_B0</th>\n",
       "      <th>SVC_B1</th>\n",
       "      <th>SVC_B2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Accuracy</th>\n",
       "      <td>0.813842</td>\n",
       "      <td>0.767708</td>\n",
       "      <td>0.879138</td>\n",
       "      <td>0.823852</td>\n",
       "      <td>0.690672</td>\n",
       "      <td>0.615385</td>\n",
       "      <td>0.742879</td>\n",
       "      <td>0.725242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Precision (weighted)</th>\n",
       "      <td>0.858692</td>\n",
       "      <td>0.815283</td>\n",
       "      <td>0.895042</td>\n",
       "      <td>0.890555</td>\n",
       "      <td>0.746503</td>\n",
       "      <td>0.670220</td>\n",
       "      <td>0.766266</td>\n",
       "      <td>0.801297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recall (weighted)</th>\n",
       "      <td>0.819265</td>\n",
       "      <td>0.767708</td>\n",
       "      <td>0.885271</td>\n",
       "      <td>0.824547</td>\n",
       "      <td>0.695275</td>\n",
       "      <td>0.621061</td>\n",
       "      <td>0.747483</td>\n",
       "      <td>0.725854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F1 (weighted)</th>\n",
       "      <td>0.816160</td>\n",
       "      <td>0.766310</td>\n",
       "      <td>0.876680</td>\n",
       "      <td>0.832573</td>\n",
       "      <td>0.693561</td>\n",
       "      <td>0.614164</td>\n",
       "      <td>0.739672</td>\n",
       "      <td>0.734837</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        RF_OOB     RF_B0     RF_B1     RF_B2   SVC_oob  \\\n",
       "Accuracy              0.813842  0.767708  0.879138  0.823852  0.690672   \n",
       "Precision (weighted)  0.858692  0.815283  0.895042  0.890555  0.746503   \n",
       "Recall (weighted)     0.819265  0.767708  0.885271  0.824547  0.695275   \n",
       "F1 (weighted)         0.816160  0.766310  0.876680  0.832573  0.693561   \n",
       "\n",
       "                        SVC_B0    SVC_B1    SVC_B2  \n",
       "Accuracy              0.615385  0.742879  0.725242  \n",
       "Precision (weighted)  0.670220  0.766266  0.801297  \n",
       "Recall (weighted)     0.621061  0.747483  0.725854  \n",
       "F1 (weighted)         0.614164  0.739672  0.734837  "
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# metrics comparison dataframe\n",
    "metrics = pd.concat([RF_OOB, \n",
    "                     RF_B0.set_index(RF_OOB.index), \n",
    "                     RF_B1.set_index(RF_OOB.index), \n",
    "                     RF_B2.set_index(RF_OOB.index),\n",
    "                     SVC_oob.set_index(RF_OOB.index), \n",
    "                     SVC_B0.set_index(RF_OOB.index), \n",
    "                     SVC_B1.set_index(RF_OOB.index), \n",
    "                     SVC_B2.set_index(RF_OOB.index)], axis=1)\n",
    "metrics.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Export metrics comparison to excel\n",
    "metrics.to_excel(r'/Users/JasonRodriguez/Documents/UT-Data-Analytics-Program/TopModelMetrics.xlsx')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Random Forest is optimal algorithm for OOB and each individual building\n",
    "1. All Random Forest algorithms meet the minimum specification for 80% accuracy except Building 0, which is slightly less.\n",
    "2. Whether to choose the algorithm trained on the full dataset (oob2) or algorithms trained by individual buildings is hard to decide based on average model metrics.\n",
    "3. Oob metrics are overall better than building 0, but not as good as buildings 1 (especially high) and 2. It seems like a wash, and I would like to go with Random Forest trained on the full out-of-box rather than 3 separate models.\n",
    "4. However, I will compare recall metrics by quartile (as follows) for all models as a final check in order to make a more informed decision."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>oob</th>\n",
       "      <th>Building 0</th>\n",
       "      <th>Building 1</th>\n",
       "      <th>Building 2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-0.002, 0.25]</th>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.25, 0.5]</th>\n",
       "      <td>88</td>\n",
       "      <td>40</td>\n",
       "      <td>13</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.5, 0.75]</th>\n",
       "      <td>166</td>\n",
       "      <td>70</td>\n",
       "      <td>18</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(0.75, 1.0]</th>\n",
       "      <td>456</td>\n",
       "      <td>141</td>\n",
       "      <td>125</td>\n",
       "      <td>217</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                oob  Building 0  Building 1  Building 2\n",
       "(-0.002, 0.25]   20           5           4           9\n",
       "(0.25, 0.5]      88          40          13          36\n",
       "(0.5, 0.75]     166          70          18          53\n",
       "(0.75, 1.0]     456         141         125         217"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# recall absolute count comparison of all Random Forest algorithms\n",
    "recall_comparison = pd.concat([rf_oob_quartile,\n",
    "                               rf_B0_quartile.set_index(rf_oob_quartile.index),\n",
    "                               rf_B1_quartile.set_index(rf_oob_quartile.index),\n",
    "                               rf_B2_quartile.set_index(rf_oob_quartile.index)], axis=1)\n",
    "\n",
    "recall_comparison.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The comparison analysis by recall quartiles reveals a sum total of:\n",
    "456 rooms fall within the high recall range of 75-100% in the full dataset\n",
    "483 rooms fall within the high recall range of 75-100% when adding up individual building algorithms\n",
    "\n",
    "### Optimal models:\n",
    "The Random Forest algorithms trained on individual buildings (Buildings 0, 1, and 2) will be used for the smart phone app not only because (on average) they meet the minimum specifications established by the client for performance metrics, but also because they predict 27 additional locations in the high recall % versus the model trained on oob2 (full dataset)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataframe of prediction compared to y_test on B2 dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>location</th>\n",
       "      <th>RFpreds_B2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10587</th>\n",
       "      <td>23137</td>\n",
       "      <td>23137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>511</th>\n",
       "      <td>23212</td>\n",
       "      <td>23212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14831</th>\n",
       "      <td>21109</td>\n",
       "      <td>21109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2296</th>\n",
       "      <td>23233</td>\n",
       "      <td>23238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13552</th>\n",
       "      <td>22103</td>\n",
       "      <td>22103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4448</th>\n",
       "      <td>21110</td>\n",
       "      <td>21110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2579</th>\n",
       "      <td>23221</td>\n",
       "      <td>23221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2191</th>\n",
       "      <td>23117</td>\n",
       "      <td>23117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4968</th>\n",
       "      <td>20204</td>\n",
       "      <td>20204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3877</th>\n",
       "      <td>21143</td>\n",
       "      <td>21143</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      location RFpreds_B2\n",
       "10587    23137      23137\n",
       "511      23212      23212\n",
       "14831    21109      21109\n",
       "2296     23233      23238\n",
       "13552    22103      22103\n",
       "4448     21110      21110\n",
       "2579     23221      23221\n",
       "2191     23117      23117\n",
       "4968     20204      20204\n",
       "3877     21143      21143"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Building 2 dataframe comparing predictions to y_test 'ground truth'\n",
    "y_test = pd.DataFrame(y_test)\n",
    "y_test.head()\n",
    "\n",
    "# predictions dataframe\n",
    "y_preds = pd.DataFrame(y_preds)\n",
    "# rename prediction column\n",
    "y_preds = y_preds.rename(columns={0: 'RFpreds_B2'})\n",
    "\n",
    "# comparison dataframe\n",
    "rf_compare_B2 = pd.concat([y_test, y_preds.set_index(y_test.index)], axis=1)\n",
    "rf_compare_B2.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Retrain models on full B0, B1, B2 datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [],
   "source": [
    "# retrain random forest building 0 on all building 0 data\n",
    "\n",
    "# features\n",
    "X = Building0.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building0['location']\n",
    "\n",
    "# model training\n",
    "rfB0 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=200,\n",
    "                              n_jobs=-1)\n",
    "rf_B0 = rfB0.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [],
   "source": [
    "# retrain random forest building 1 on all building 1 data\n",
    "\n",
    "# features\n",
    "X = Building1.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building1['location']\n",
    "\n",
    "# model training\n",
    "rfB1 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=400,\n",
    "                              n_jobs=-1)\n",
    "rf_B1 = rfB1.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [],
   "source": [
    "# retrain random forest building 2 on all building 2 data\n",
    "\n",
    "# features\n",
    "X = Building2.iloc[:,1:]\n",
    "\n",
    "# target variable\n",
    "y = Building2['location']\n",
    "\n",
    "# model training\n",
    "rfB2 = RandomForestClassifier(criterion='entropy',\n",
    "                              n_estimators=600,\n",
    "                              n_jobs=-1)\n",
    "rf_B2 = rfB2.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
